{
  "version": 3,
  "sources": ["<stdin>", "../app/entry.server.tsx", "../app/root.tsx", "../app/utils/data/root-data.ts", "../app/utils/session/session.server.ts", "../app/routes/$slug.($lang).categories.$category.tsx", "../app/components/ServerError.tsx", "../app/components/pages/Page404.tsx", "../app/components/brand/Logo.tsx", "../app/lib/db.server.ts", "../app/modules/knowledgeBase/db/knowledgeBase.db.server.ts", "../app/modules/knowledgeBase/db/kbArticles.db.server.ts", "../app/modules/knowledgeBase/db/kbCategories.db.server.ts", "../app/modules/knowledgeBase/utils/KnowledgeBaseUtils.ts", "../app/modules/knowledgeBase/service/KnowledgeBaseService.ts", "../app/modules/knowledgeBase/components/KbHeader.tsx", "../app/components/icons/XIcon.tsx", "../app/utils/shared/colors/ColorBackgroundUtils.ts", "../app/utils/shared/colors/ColorTextUtils.ts", "../app/utils/shared/colors/ColorPlaceholderUtils.ts", "../app/utils/shared/colors/ColorFocusUtils.ts", "../app/utils/shared/colors/ColorRingUtils.ts", "../app/utils/shared/colors/ColorGradientUtils.ts", "../app/utils/shared/colors/ColorFocusWithinUtils.ts", "../app/components/WarningBanner.tsx", "../app/components/ui/breadcrumbs/BreadcrumbSimple.tsx", "../app/utils/app/UrlUtils.ts", "../app/components/ui/icons/RightIcon.tsx", "../app/modules/knowledgeBase/components/categories/KbCategory.tsx", "../app/components/ui/buttons/ButtonSecondary.tsx", "../app/components/ui/buttons/LinkOrAhref.tsx", "../app/assets/icons/IconEmptyResults.tsx", "../app/components/ui/emptyState/EmptyState.tsx", "../app/modules/knowledgeBase/components/articles/KbArticles.tsx", "../app/components/icons/RightIcon.tsx", "../app/utils/shared/colors/ColorHoverUtils.ts", "../app/modules/knowledgeBase/components/articles/KbArticlesBySection.tsx", "../app/routes/$slug.($lang).articles.$article.tsx", "../app/modules/knowledgeBase/components/articles/KbArticleContent.tsx", "../node_modules/marked/lib/marked.esm.js", "../app/components/ui/icons/ThumbsDownIcon.tsx", "../app/components/ui/icons/ThumbsDownIconFilled.tsx", "../app/components/ui/icons/ThumbsUpIcon.tsx", "../app/components/ui/icons/ThumbsUpIconFilled.tsx", "../app/utils/shared/DateUtils.ts", "../app/modules/knowledgeBase/components/articles/KbArticle.tsx", "../app/modules/knowledgeBase/db/kbAnalytics.db.server.ts", "../app/routes/api.ai/generate.tsx", "../app/modules/ai/lib/OpenAIStream.ts", "../app/routes/$slug.($lang).tsx", "../app/modules/knowledgeBase/components/categories/KbCategoriesList.tsx", "../app/modules/knowledgeBase/components/categories/KbCategoriesGrid.tsx", "../app/modules/knowledgeBase/components/categories/KbCategoriesTopArticles.tsx", "../app/modules/knowledgeBase/components/categories/KbCategories.tsx", "../app/modules/knowledgeBase/components/KbFeaturedArticles.tsx", "../app/routes/api.ai/upload.tsx", "../app/modules/supabase/SupabaseService.ts", "../app/routes/admin.tsx", "../app/components/layouts/SidebarLayout.tsx", "../app/components/layouts/SidebarMenu.tsx", "../app/application/sidebar/AdminSidebar.tsx", "../app/components/layouts/icons/EntityIcon.tsx", "../app/utils/app/scroll-restoration.tsx", "../app/routes/admin/knowledge-base.tsx", "../app/components/ui/errors/ServerError.tsx", "../app/components/ui/layouts/SidebarIconsLayout.tsx", "../app/components/ui/tabs/Tabs.tsx", "../app/routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.edit.tsx", "../app/components/ui/buttons/ButtonPrimary.tsx", "../app/components/ui/buttons/LoadingButton.tsx", "../app/components/ui/layouts/EditPageLayout.tsx", "../app/components/ui/modals/ActionResultModal.tsx", "../app/components/ui/slideOvers/SlideOverWideEmpty.tsx", "../app/components/ui/icons/XIcon.tsx", "../app/modules/knowledgeBase/components/bases/KbArticleForm.tsx", "../app/components/ui/input/InputText.tsx", "../app/components/ui/tooltips/HintTooltip.tsx", "../app/modules/novel/ui/editor/index.tsx", "../app/modules/novel/lib/utils/editor.ts", "../app/modules/novel/ui/editor/props.ts", "../app/modules/novel/ui/editor/extensions/index.tsx", "../app/modules/novel/ui/editor/extensions/slash-command.tsx", "../app/modules/novel/lib/ai/react/useCompletion.ts", "../app/modules/novel/lib/ai/react/utils.ts", "../app/modules/novel/ui/shared/loading-circle.tsx", "../app/modules/novel/ui/shared/magic.tsx", "../app/modules/novel/ui/editor/components/EditorBubbleMenu.tsx", "../app/modules/novel/ui/editor/components/NodeSelector.tsx", "../app/modules/novel/ui/editor/components/ColorSelector.tsx", "../app/utils/hooks/use-local-storage.ts", "../app/modules/knowledgeBase/service/KnowledgeBasePermissionsService.ts", "../app/routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.tsx", "../app/routes/admin/knowledge-base/bases.$slug/articles.$lang.$id/settings.tsx", "../app/components/ui/modals/ConfirmModal.tsx", "../app/modules/knowledgeBase/components/bases/KbArticleSettingsForm.tsx", "../app/components/ui/input/InputCheckboxWithDescription.tsx", "../app/components/ui/input/InputSelector.tsx", "../app/components/ui/badges/ColorBadge.tsx", "../app/utils/shared/ColorUtils.ts", "../app/routes/admin/knowledge-base/bases.$slug/categories.$lang.tsx", "../app/components/ui/icons/DocumentDuplicateIconFilled.tsx", "../app/components/ui/icons/FolderIconFilled.tsx", "../app/components/ui/icons/PlusIcon.tsx", "../app/components/ui/sort/OrderListButtons.tsx", "../app/modules/knowledgeBase/db/kbCategorySections.db.server.ts", "../app/routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.$section.tsx", "../app/modules/knowledgeBase/components/bases/KbCategorySectionForm.tsx", "../app/components/ui/tables/TableSimple.tsx", "../app/components/ui/buttons/ButtonTertiary.tsx", "../app/components/ui/tables/TablePagination.tsx", "../app/components/ui/modals/Modal.tsx", "../app/application/Constants.ts", "../app/components/ui/input/InputNumber.tsx", "../app/components/ui/icons/DownArrow.tsx", "../app/components/ui/icons/UpArrow.tsx", "../app/helpers/RowDisplayValueHelper.tsx", "../app/components/ui/input/InputSelect.tsx", "../app/modules/knowledgeBase/components/articles/KbSortArticles.tsx", "../app/routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.new.tsx", "../app/routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.tsx", "../app/modules/knowledgeBase/components/bases/KbCategoryForm.tsx", "../app/routes/admin/knowledge-base/bases.$slug/categories.$lang/new.tsx", "../app/routes/admin/knowledge-base/bases.$slug/articles.$lang.tsx", "../app/components/ui/badges/SimpleBadge.tsx", "../app/components/ui/input/InputCheckbox.tsx", "../app/components/ui/input/InputFilters.tsx", "../app/utils/shared/KeypressUtils.ts", "../app/utils/shared/ObjectUtils.ts", "../app/components/ui/icons/FilterEmptyIcon.tsx", "../app/components/ui/icons/FilterFilledIcon.tsx", "../app/components/ui/input/InputCheckboxInline.tsx", "../app/components/ui/input/InputSearch.tsx", "../app/helpers/RowPaginationHelper.ts", "../app/routes/admin/knowledge-base/bases.$slug/categories.tsx", "../app/routes/admin/knowledge-base/bases.$slug/articles.tsx", "../app/routes/admin/knowledge-base/bases.import.tsx", "../app/modules/knowledgeBase/components/templates/PreviewKbsTemplate.tsx", "../app/modules/knowledgeBase/service/KnowledgeBaseTemplatesService.ts", "../app/modules/knowledgeBase/utils/DefaultKbsTemplate.ts", "../app/routes/admin/knowledge-base/danger.tsx", "../app/routes/admin/knowledge-base/bases.tsx", "../app/components/ui/tabs/TabsWithIcons.tsx", "../app/components/ui/dates/DateCell.tsx", "../app/routes/admin/knowledge-base/bases/$id.tsx", "../app/modules/knowledgeBase/components/bases/KnowledgeBaseForm.tsx", "../app/components/ui/input/InputCombobox.tsx", "../app/components/ui/sort/OrderIndexButtons.tsx", "../app/modules/knowledgeBase/components/bases/KbNavLinksTable.tsx", "../app/routes/admin/knowledge-base/bases/new.tsx", "../app/routes/admin/knowledge-base/index.tsx", "../app/utils/shared/NumberUtils.ts", "../app/routes/admin/index.tsx", "../app/routes/index.tsx", "../app/components/Header.tsx", "../app/components/brand/Icon.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\r\nimport type { EntryContext } from \"@remix-run/node\";\r\nimport { Response } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport isbot from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\"))\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          console.error(error);\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          const body = new PassThrough();\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(body, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          console.error(error);\r\n          responseStatusCode = 500;\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n", "import type { LinksFunction, LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport stylesheet from \"~/tailwind.css\";\r\nimport { loadRootData, useRootData } from \"./utils/data/root-data\";\r\n\r\nexport const links: LinksFunction = () => [{ rel: \"stylesheet\", href: stylesheet }];\r\nexport const meta: V2_MetaFunction = ({ data }) => data?.metatags;\r\n\r\nexport let loader = async ({ request }: LoaderArgs) => {\r\n  return loadRootData({ request });\r\n};\r\n\r\nexport default function App() {\r\n  const rootData = useRootData();\r\n  const data = useTypedLoaderData<{ debug: boolean }>();\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n        <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\" href=\"/android-icon-192x192.png\" />\r\n        <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\" />\r\n        <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"/favicon-96x96.png\" />\r\n        <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <meta httpEquiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n      </head>\r\n      <body className=\"min-h-screen bg-gray-50 text-gray-800\">\r\n        {!data.debug && (\r\n          <>\r\n            <script async defer src=\"https://scripts.simpleanalyticscdn.com/latest.js\"></script>\r\n            <noscript>\r\n              <img src=\"https://queue.simpleanalyticscdn.com/noscript.gif\" alt=\"privacy-friendly-simpleanalytics\" referrerPolicy=\"no-referrer-when-downgrade\" />\r\n            </noscript>\r\n          </>\r\n        )}\r\n\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import { useMatches } from \"@remix-run/react\";\r\nimport { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport { UserSession, createUserSession, generateAnalyticsUserId, getUserInfo, getUserSession } from \"../session/session.server\";\r\nimport { json } from \"@remix-run/node\";\r\n\r\nexport type AppRootData = {\r\n  metatags: MetaTagsDto;\r\n  userSession: UserSession;\r\n  debug: boolean;\r\n  chatWebsiteId?: string;\r\n};\r\n\r\nexport function useRootData(): AppRootData {\r\n  return (useMatches().find((f) => f.pathname === \"/\" || f.pathname === \"\")?.data ?? {}) as AppRootData;\r\n}\r\n\r\nexport async function loadRootData({ request }: { request: Request }) {\r\n  const userSession = await getUserSession(request);\r\n  const userInfo = await getUserInfo(request);\r\n\r\n  const headers = new Headers();\r\n  if (!userSession.get(\"userAnalyticsId\")) {\r\n    return createUserSession(\r\n      {\r\n        userAnalyticsId: generateAnalyticsUserId(),\r\n      },\r\n      new URL(request.url).pathname\r\n    );\r\n  }\r\n\r\n  const metatags = {\r\n    title: \"Archieve KB\",\r\n    description: \"Knowledge Base starter kit with WYSIWYG, Markdown, GPT, and Multi-language support\",\r\n    seoImage: \"https://yahooder.sirv.com/saasrock-kb/cover.png\",\r\n  };\r\n\r\n  const data: AppRootData = {\r\n    metatags: [\r\n      { charset: \"utf-8\" },\r\n      { title: metatags.title },\r\n      { name: \"description\", content: \"Intercom-like knowledge base with WYSIWYG and Markdown support\" },\r\n      // { name: \"keywords\", content: kb.keywords },\r\n      { name: \"og:title\", content: metatags.title },\r\n      { name: \"og:description\", content: metatags.description },\r\n      { name: \"og:image\", content: metatags.seoImage },\r\n      { name: \"og:url\", content: request.url },\r\n      { name: \"twitter:title\", content: metatags.title },\r\n      { name: \"twitter:description\", content: metatags.description },\r\n      { name: \"twitter:image\", content: metatags.seoImage },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n    ],\r\n    userSession: userInfo,\r\n    debug: process.env.NODE_ENV === \"development\",\r\n    chatWebsiteId: process.env.CHAT_WEBSITE_ID,\r\n  };\r\n\r\n  return json(data, { headers });\r\n}\r\n", "import { createCookieSessionStorage, redirect, Session } from \"@remix-run/node\";\r\nimport { randomBytes } from \"crypto\";\r\n\r\nexport type UserSession = {\r\n  userAnalyticsId: string;\r\n};\r\n\r\nconst sessionSecret = process.env.SESSION_SECRET;\r\nif (!sessionSecret) {\r\n  throw new Error(\"SESSION_SECRET must be set\");\r\n}\r\n\r\nexport const storage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"RJ_session\",\r\n    // normally you want this to be `secure: true`\r\n    // but that doesn't work on localhost for Safari\r\n    // https://web.dev/when-to-use-local-https/\r\n    secure: process.env.NODE_ENV === \"production\",\r\n    secrets: [sessionSecret],\r\n    sameSite: \"lax\",\r\n    path: \"/\",\r\n    maxAge: 60 * 60 * 24 * 30,\r\n    httpOnly: true,\r\n  },\r\n});\r\n\r\nexport function getUserSession(request: Request) {\r\n  return storage.getSession(request.headers.get(\"Cookie\"));\r\n}\r\n\r\nexport async function getUserInfo(request: Request): Promise<UserSession> {\r\n  const session = await getUserSession(request);\r\n  const userAnalyticsId = session.get(\"userAnalyticsId\") ?? null;\r\n  return {\r\n    userAnalyticsId,\r\n  };\r\n}\r\n\r\nexport async function createUserSession(userSession: UserSession, redirectTo: string = \"\") {\r\n  const session = await storage.getSession();\r\n  session.set(\"userAnalyticsId\", userSession.userAnalyticsId);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await storage.commitSession(session),\r\n    },\r\n  });\r\n}\r\n\r\nexport async function commitSession(session: Session) {\r\n  return await storage.commitSession(session);\r\n}\r\n\r\nexport function generateAnalyticsUserId() {\r\n  return randomBytes(100).toString(\"base64\");\r\n}\r\n", "import ServerError from \"~/components/ServerError\";\r\nimport type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json, redirect } from \"@remix-run/node\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbHeader from \"~/modules/knowledgeBase/components/KbHeader\";\r\nimport type { KbCategoryDto } from \"~/modules/knowledgeBase/dtos/KbCategoryDto\";\r\nimport type { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KbCategory from \"~/modules/knowledgeBase/components/categories/KbCategory\";\r\nimport type { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  metatags?: MetaTagsDto;\r\n  item: KbCategoryDto | null;\r\n  kb: KnowledgeBaseDto;\r\n  language: string;\r\n  allCategories: KbCategoryDto[];\r\n};\r\nexport let loader = async ({ request, params }: LoaderArgs) => {\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug!, enabled: true });\r\n  const language = params.lang ?? kb.defaultLanguage;\r\n\r\n  const item = await KnowledgeBaseService.getCategory({\r\n    kb,\r\n    category: params.category ?? \"\",\r\n    language,\r\n    params,\r\n  });\r\n  if (!item) {\r\n    return redirect(KnowledgeBaseUtils.getKbUrl({ kb, params }));\r\n  }\r\n  const data: LoaderData = {\r\n    metatags: item?.metatags,\r\n    kb,\r\n    item,\r\n    allCategories: await KnowledgeBaseService.getCategories({\r\n      kb,\r\n      params,\r\n    }),\r\n    language,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const meta: V2_MetaFunction = ({ data }) => data?.metatags;\r\n\r\nexport default function Index() {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <KbHeader kb={data.kb} withTitleAndDescription={false} />\r\n      <div className=\"max-w-5xl mx-auto py-8 px-8 min-h-screen\">\r\n        <div className=\"space-y-5\">{!data.item ? <div>Not found</div> : <KbCategory kb={data.kb} item={data.item} allCategories={data.allCategories} />}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary() {\r\n  return <ServerError />;\r\n}\r\n", "import { useRouteError } from \"@remix-run/react\";\r\nimport Page404 from \"~/components/pages/Page404\";\r\n\r\nexport default function ServerError() {\r\n  const error = useRouteError();\r\n\r\n  // @ts-ignore\r\n  if (error?.status === 404) {\r\n    return <Page404 />;\r\n  }\r\n  return (\r\n    <div className=\"px-4 py-4\">\r\n      <div className=\"mx-auto w-full space-y-2 rounded-md border-2 border-dashed border-gray-300 bg-white p-12 text-center text-gray-800 shadow-md\">\r\n        <div className=\"flex flex-col justify-center space-y-1\">\r\n          <div className=\"mx-auto text-red-500\">\r\n            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          {/* @ts-ignore */}\r\n          <div className=\"text-2xl font-bold text-gray-800\">{error?.data?.message ?? error?.message ?? \"Error\"}</div>\r\n        </div>\r\n        {/* @ts-ignore */}\r\n        {error?.data?.description && <div className=\"text-gray-800\">{error?.data?.description}</div>}\r\n        {/* @ts-ignore */}\r\n        {error?.stack && (\r\n          <div className=\"pt-4\">\r\n            {/* @ts-ignore */}\r\n            <div className=\"break-words border-t border-dashed border-gray-300 pt-3 text-left text-sm text-gray-600\">{error.stack}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { useNavigate } from \"@remix-run/react\";\r\nimport Logo from \"~/components/brand/Logo\";\r\n\r\ninterface Props {\r\n  withLogo?: boolean;\r\n  withGoBack?: boolean;\r\n}\r\nexport default function Page404({ withLogo = true, withGoBack = true }: Props) {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <div className=\"flex min-h-full flex-col pt-16 pb-12\">\r\n          <main className=\"mx-auto flex w-full max-w-7xl flex-grow flex-col justify-center px-4 sm:px-6 lg:px-8\">\r\n            {withLogo && (\r\n              <div className=\"flex flex-shrink-0 justify-center\">\r\n                <Logo />\r\n              </div>\r\n            )}\r\n            <div className=\"py-16\">\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm font-semibold uppercase tracking-wide text-theme-600\">404 error</p>\r\n                <h1 className=\"mt-2 text-4xl font-extrabold tracking-tight sm:text-5xl\">Page not found.</h1>\r\n                <p className=\"mt-2 text-base text-gray-500\">Sorry, we couldn\u2019t find the page you\u2019re looking for.</p>\r\n                {withGoBack && (\r\n                  <div className=\"mt-4 flex\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => navigate(-1)}\r\n                      className=\"w-full text-center text-sm font-medium text-theme-600 hover:text-theme-500 dark:text-theme-400\"\r\n                    >\r\n                      <span aria-hidden=\"true\"> &larr;</span> Go back\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n", "import LogoLight from \"~/assets/img/logo-light.png\";\r\nimport clsx from \"clsx\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  size?: string;\r\n  to?: string;\r\n}\r\n\r\nexport default function Logo({ className = \"\", size = \"h-9\", to }: Props) {\r\n  return (\r\n    <Link to={to ?? \"/\"} className={clsx(className, \"flex\")}>\r\n      {/* <BrandLogo className=\"h-10 w-auto mx-auto\" /> */}\r\n      <img className={clsx(size, \"mx-auto hidden w-auto dark:block\")} src={LogoLight} alt=\"Logo\" />\r\n      <img className={clsx(size, \"mx-auto w-auto dark:hidden\")} src={LogoLight} alt=\"Logo\" />\r\n    </Link>\r\n  );\r\n}\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet db: PrismaClient;\r\n\r\ndeclare global {\r\n  var __db: PrismaClient | undefined;\r\n}\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  db = new PrismaClient();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n  }\r\n  db = global.__db;\r\n}\r\n\r\nexport { db };\r\n", "import { KnowledgeBase } from \"@prisma/client\";\r\nimport { db } from \"~/lib/db.server\";\r\n\r\nexport type KnowledgeBaseWithDetails = KnowledgeBase & {\r\n  _count: {\r\n    categories: number;\r\n    articles: number;\r\n    views: number;\r\n  };\r\n};\r\n\r\nconst include = {\r\n  _count: {\r\n    select: { categories: true, articles: true, views: true },\r\n  },\r\n};\r\n\r\nexport async function getAllKnowledgeBases({ enabled }: { enabled?: boolean } = {}): Promise<KnowledgeBaseWithDetails[]> {\r\n  return await db.knowledgeBase.findMany({\r\n    where: { enabled },\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function getKnowledgeBaseById(id: string): Promise<KnowledgeBaseWithDetails | null> {\r\n  return await db.knowledgeBase.findUnique({\r\n    where: { id },\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function getKnowledgeBaseBySlug(slug: string): Promise<KnowledgeBaseWithDetails | null> {\r\n  return await db.knowledgeBase.findUnique({\r\n    where: { slug },\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function createKnowledgeBase(data: {\r\n  slug: string;\r\n  title: string;\r\n  description: string;\r\n  defaultLanguage: string;\r\n  layout: string;\r\n  color: number;\r\n  enabled: boolean;\r\n  languages: string;\r\n  links: string;\r\n  logo: string;\r\n  seoImage: string;\r\n}) {\r\n  return await db.knowledgeBase.create({\r\n    data: {\r\n      slug: data.slug,\r\n      title: data.title,\r\n      description: data.description,\r\n      defaultLanguage: data.defaultLanguage,\r\n      layout: data.layout,\r\n      color: data.color,\r\n      enabled: data.enabled,\r\n      languages: data.languages,\r\n      links: data.links,\r\n      logo: data.logo,\r\n      seoImage: data.seoImage,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function updateKnowledgeBase(\r\n  id: string,\r\n  data: {\r\n    slug?: string;\r\n    title?: string;\r\n    description?: string;\r\n    defaultLanguage?: string;\r\n    layout?: string;\r\n    color?: number;\r\n    enabled?: boolean;\r\n    languages?: string;\r\n    links?: string;\r\n    logo?: string;\r\n    seoImage?: string;\r\n  }\r\n) {\r\n  return await db.knowledgeBase.update({\r\n    where: { id },\r\n    data: {\r\n      slug: data.slug,\r\n      title: data.title,\r\n      description: data.description,\r\n      defaultLanguage: data.defaultLanguage,\r\n      layout: data.layout,\r\n      color: data.color,\r\n      enabled: data.enabled,\r\n      languages: data.languages,\r\n      links: data.links,\r\n      logo: data.logo,\r\n      seoImage: data.seoImage,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteKnowledgeBase(id: string) {\r\n  return await db.knowledgeBase.delete({\r\n    where: { id },\r\n  });\r\n}\r\n\r\nexport async function countKnowledgeBases() {\r\n  return await db.knowledgeBase.count();\r\n}\r\n", "import { KnowledgeBaseArticle, Prisma } from \"@prisma/client\";\r\nimport { PaginationDto } from \"~/application/dtos/data/PaginationDto\";\r\nimport { db } from \"~/lib/db.server\";\r\n\r\nexport type KnowledgeBaseArticleWithDetails = KnowledgeBaseArticle & {\r\n  category: { slug: string; title: string } | null;\r\n  section: { order: number; title: string } | null;\r\n  relatedArticles: { order: number; title: string; slug: string }[];\r\n  _count: {\r\n    views: number;\r\n    upvotes: number;\r\n    downvotes: number;\r\n  };\r\n};\r\n\r\nconst include = {\r\n  category: {\r\n    select: { slug: true, title: true },\r\n  },\r\n  section: {\r\n    select: { order: true, title: true },\r\n  },\r\n  relatedArticles: {\r\n    select: { order: true, title: true, slug: true },\r\n  },\r\n  _count: {\r\n    select: { views: true, upvotes: true, downvotes: true },\r\n  },\r\n};\r\n\r\nexport async function getAllKnowledgeBaseArticles({\r\n  knowledgeBaseSlug,\r\n  categoryId,\r\n  language,\r\n}: {\r\n  knowledgeBaseSlug: string;\r\n  categoryId?: string;\r\n  language: string | undefined;\r\n}): Promise<KnowledgeBaseArticleWithDetails[]> {\r\n  return await db.knowledgeBaseArticle.findMany({\r\n    where: {\r\n      knowledgeBase: { slug: knowledgeBaseSlug },\r\n      categoryId,\r\n      language,\r\n    },\r\n    include,\r\n    orderBy: [\r\n      {\r\n        category: { order: \"asc\" },\r\n      },\r\n      {\r\n        section: { order: \"asc\" },\r\n      },\r\n      {\r\n        order: \"asc\",\r\n      },\r\n    ],\r\n  });\r\n}\r\n\r\nexport async function getAllKnowledgeBaseArticlesWithPagination({\r\n  knowledgeBaseSlug,\r\n  language,\r\n  pagination,\r\n  filters,\r\n}: {\r\n  knowledgeBaseSlug: string;\r\n  language: string | undefined;\r\n  pagination: {\r\n    page: number;\r\n    pageSize: number;\r\n  };\r\n  filters: {\r\n    title?: string;\r\n    description?: string;\r\n    categoryId?: string | null;\r\n  };\r\n}): Promise<{\r\n  items: KnowledgeBaseArticleWithDetails[];\r\n  pagination: PaginationDto;\r\n}> {\r\n  const where: Prisma.KnowledgeBaseArticleWhereInput = {\r\n    knowledgeBase: { slug: knowledgeBaseSlug },\r\n    language,\r\n  };\r\n  if (filters.title !== undefined) {\r\n    where.title = { contains: filters.title };\r\n  }\r\n  if (filters.description !== undefined) {\r\n    where.description = { contains: filters.description };\r\n  }\r\n  if (filters.categoryId !== undefined) {\r\n    where.categoryId = filters.categoryId;\r\n  }\r\n  const items = await db.knowledgeBaseArticle.findMany({\r\n    take: pagination.pageSize,\r\n    skip: (pagination.page - 1) * pagination.pageSize,\r\n    where,\r\n    include,\r\n    orderBy: [{ createdAt: \"desc\" }],\r\n  });\r\n  const totalItems = await db.knowledgeBaseArticle.count({\r\n    where,\r\n  });\r\n  return {\r\n    items,\r\n    pagination: {\r\n      page: pagination.page,\r\n      pageSize: pagination.pageSize,\r\n      totalItems,\r\n      totalPages: Math.ceil(totalItems / pagination.pageSize),\r\n    },\r\n  };\r\n}\r\n\r\nexport async function getFeaturedKnowledgeBaseArticles({\r\n  knowledgeBaseId,\r\n  language,\r\n}: {\r\n  knowledgeBaseId: string;\r\n  language: string;\r\n}): Promise<KnowledgeBaseArticleWithDetails[]> {\r\n  return await db.knowledgeBaseArticle.findMany({\r\n    where: {\r\n      knowledgeBaseId,\r\n      language,\r\n      featuredOrder: { not: null },\r\n      publishedAt: { not: null },\r\n    },\r\n    include,\r\n    orderBy: [{ featuredOrder: \"asc\" }],\r\n  });\r\n}\r\n\r\nexport async function getKbArticleById(id: string): Promise<KnowledgeBaseArticleWithDetails | null> {\r\n  return await db.knowledgeBaseArticle.findUnique({\r\n    where: { id },\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function getKbArticleBySlug({\r\n  knowledgeBaseId,\r\n  slug,\r\n  language,\r\n}: {\r\n  knowledgeBaseId: string;\r\n  slug: string;\r\n  language: string;\r\n}): Promise<KnowledgeBaseArticleWithDetails | null> {\r\n  return await db.knowledgeBaseArticle.findFirst({\r\n    where: {\r\n      knowledgeBaseId,\r\n      slug,\r\n      language,\r\n    },\r\n    include: {\r\n      ...include,\r\n      // category: {\r\n      //   include: {\r\n      //     articles: {\r\n      //       select: { id: true, order: true, title: true, description: true, slug: true, language: true, sectionId: true, publishedAt: true },\r\n      //     },\r\n      //     sections: {\r\n      //       select: { id: true, order: true, title: true, description: true },\r\n      //     },\r\n      //   },\r\n      // },\r\n    },\r\n  });\r\n}\r\n\r\nexport async function createKnowledgeBaseArticle(data: {\r\n  knowledgeBaseId: string;\r\n  categoryId: string | null;\r\n  sectionId: string | null;\r\n  slug: string;\r\n  title: string;\r\n  description: string;\r\n  order: number;\r\n  contentDraft: string;\r\n  contentPublished: string;\r\n  contentType: string;\r\n  language: string;\r\n  featuredOrder: number | null;\r\n  author: string;\r\n  seoImage: string;\r\n  publishedAt: Date | null;\r\n}) {\r\n  return await db.knowledgeBaseArticle.create({\r\n    data: {\r\n      knowledgeBaseId: data.knowledgeBaseId,\r\n      categoryId: data.categoryId,\r\n      sectionId: data.sectionId,\r\n      slug: data.slug,\r\n      title: data.title,\r\n      description: data.description,\r\n      order: data.order,\r\n      contentDraft: data.contentDraft,\r\n      contentPublished: data.contentPublished,\r\n      contentType: data.contentType,\r\n      language: data.language,\r\n      featuredOrder: data.featuredOrder,\r\n      author: data.author,\r\n      seoImage: data.seoImage,\r\n      publishedAt: data.publishedAt,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function updateKnowledgeBaseArticle(\r\n  id: string,\r\n  data: {\r\n    categoryId?: string | null;\r\n    sectionId?: string | null;\r\n    slug?: string;\r\n    title?: string;\r\n    description?: string;\r\n    order?: number;\r\n    contentDraft?: string;\r\n    contentPublished?: string;\r\n    contentType?: string;\r\n    language?: string;\r\n    featuredOrder?: number | null;\r\n    author?: string;\r\n    seoImage?: string;\r\n    publishedAt?: Date | null;\r\n  }\r\n) {\r\n  return await db.knowledgeBaseArticle.update({\r\n    where: { id },\r\n    data: {\r\n      categoryId: data.categoryId,\r\n      sectionId: data.sectionId,\r\n      slug: data.slug,\r\n      title: data.title,\r\n      description: data.description,\r\n      order: data.order,\r\n      contentDraft: data.contentDraft,\r\n      contentPublished: data.contentPublished,\r\n      contentType: data.contentType,\r\n      language: data.language,\r\n      featuredOrder: data.featuredOrder,\r\n      author: data.author,\r\n      seoImage: data.seoImage,\r\n      publishedAt: data.publishedAt,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteKnowledgeBaseArticle(id: string) {\r\n  return await db.knowledgeBaseArticle.delete({\r\n    where: { id },\r\n  });\r\n}\r\n\r\nexport async function countKnowledgeBaseArticles() {\r\n  return await db.knowledgeBaseArticle.count();\r\n}\r\n", "import { db } from \"~/lib/db.server\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"../helpers/KbCategoryModelHelper\";\r\nimport { Prisma } from \"@prisma/client\";\r\n\r\nconst include = {\r\n  articles: {\r\n    select: { id: true, order: true, title: true, description: true, slug: true, language: true, sectionId: true, publishedAt: true },\r\n  },\r\n  sections: {\r\n    select: { id: true, order: true, title: true, description: true },\r\n  },\r\n};\r\n\r\nexport async function getAllKnowledgeBaseCategories({\r\n  knowledgeBaseSlug,\r\n  language,\r\n}: {\r\n  knowledgeBaseSlug: string;\r\n  language: string | undefined;\r\n}): Promise<KnowledgeBaseCategoryWithDetails[]> {\r\n  return await db.knowledgeBaseCategory.findMany({\r\n    where: {\r\n      knowledgeBase: { slug: knowledgeBaseSlug },\r\n      language,\r\n    },\r\n    include,\r\n    orderBy: { order: \"asc\" },\r\n  });\r\n}\r\n\r\nexport async function getKbCategoryById(id: string): Promise<KnowledgeBaseCategoryWithDetails | null> {\r\n  return await db.knowledgeBaseCategory.findUnique({\r\n    where: { id },\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function getKbCategoryBySlug({\r\n  knowledgeBaseId,\r\n  slug,\r\n  language,\r\n}: {\r\n  knowledgeBaseId: string;\r\n  slug: string;\r\n  language: string | undefined;\r\n}): Promise<KnowledgeBaseCategoryWithDetails | null> {\r\n  const where: Prisma.KnowledgeBaseCategoryWhereInput = {\r\n    knowledgeBaseId,\r\n    slug,\r\n    language,\r\n  };\r\n  return await db.knowledgeBaseCategory.findFirst({\r\n    where,\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function createKnowledgeBaseCategory(data: {\r\n  knowledgeBaseId: string;\r\n  slug: string;\r\n  order: number;\r\n  title: string;\r\n  description: string;\r\n  icon: string;\r\n  language: string;\r\n  seoImage: string;\r\n}): Promise<KnowledgeBaseCategoryWithDetails> {\r\n  return await db.knowledgeBaseCategory.create({\r\n    data: {\r\n      knowledgeBaseId: data.knowledgeBaseId,\r\n      slug: data.slug,\r\n      order: data.order,\r\n      title: data.title,\r\n      description: data.description,\r\n      icon: data.icon,\r\n      language: data.language,\r\n      seoImage: data.seoImage,\r\n    },\r\n    include,\r\n  });\r\n}\r\n\r\nexport async function updateKnowledgeBaseCategory(\r\n  id: string,\r\n  data: {\r\n    slug?: string;\r\n    title?: string;\r\n    order?: number;\r\n    description?: string;\r\n    icon?: string;\r\n    language?: string;\r\n    seoImage?: string;\r\n  }\r\n) {\r\n  return await db.knowledgeBaseCategory.update({\r\n    where: { id },\r\n    data: {\r\n      slug: data.slug,\r\n      order: data.order,\r\n      title: data.title,\r\n      description: data.description,\r\n      icon: data.icon,\r\n      language: data.language,\r\n      seoImage: data.seoImage,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteKnowledgeBaseCategory(id: string) {\r\n  return await db.knowledgeBaseCategory.delete({\r\n    where: { id },\r\n  });\r\n}\r\n\r\nexport async function countKnowledgeBaseCategories() {\r\n  return await db.knowledgeBaseCategory.count();\r\n}\r\n", "import { KnowledgeBaseArticleWithDetails } from \"../db/kbArticles.db.server\";\r\nimport { KnowledgeBaseDto } from \"../dtos/KnowledgeBaseDto\";\r\n\r\nconst supportedLanguages: { name: string; value: string }[] = [\r\n  { name: \"English\", value: \"en\" },\r\n  { name: \"Spanish\", value: \"es\" },\r\n];\r\n\r\nfunction getLanguageName(language: string) {\r\n  const supportedLanguage = supportedLanguages.find((l) => l.value === language);\r\n  return supportedLanguage ? supportedLanguage.name : \"\";\r\n}\r\n\r\nfunction getAvailableArticleSlug({ allArticles, initialSlug }: { allArticles: KnowledgeBaseArticleWithDetails[]; initialSlug: string }) {\r\n  let number = 1;\r\n  let slug = \"\";\r\n\r\n  const findExistingSlug = (slug: string) => {\r\n    return allArticles.find((p) => p.slug === slug);\r\n  };\r\n\r\n  do {\r\n    slug = `${initialSlug}-${number}`;\r\n    const existingWithSlug = findExistingSlug(slug);\r\n    if (!existingWithSlug) {\r\n      break;\r\n    }\r\n    if (number > 10) {\r\n      throw Error(\"Too many duplicates\");\r\n    }\r\n    number++;\r\n  } while (true);\r\n\r\n  let maxOrder = 0;\r\n  if (allArticles.length > 0) {\r\n    maxOrder = Math.max(...allArticles.map((p) => p.order));\r\n  }\r\n  return {\r\n    slug,\r\n    maxOrder,\r\n    number,\r\n  };\r\n}\r\n\r\nfunction getKbUrl({ kb, params }: { kb: KnowledgeBaseDto; params: { lang?: string } }) {\r\n  if (params.lang) {\r\n    return `/${kb.slug}/${params.lang}`;\r\n  }\r\n  return `/${kb.slug}`;\r\n}\r\n\r\nfunction getArticleUrl({ kb, article, params }: { kb: { slug: string }; article: { slug: string }; params: { lang?: string } }) {\r\n  if (params.lang) {\r\n    return `/${kb.slug}/${params.lang}/articles/${article.slug}`;\r\n  }\r\n  return `/${kb.slug}/articles/${article.slug}`;\r\n}\r\n\r\nfunction getCategoryUrl({ kb, category, params }: { kb: { slug: string }; category: { slug: string }; params: { lang?: string } }) {\r\n  if (params.lang) {\r\n    return `/${kb.slug}/${params.lang}/categories/${category.slug}`;\r\n  }\r\n  return `/${kb.slug}/categories/${category.slug}`;\r\n}\r\n\r\nexport default {\r\n  supportedLanguages,\r\n  getLanguageName,\r\n  getAvailableArticleSlug,\r\n  getKbUrl,\r\n  getArticleUrl,\r\n  getCategoryUrl,\r\n};\r\n", "import type { KbArticleDto } from \"../dtos/KbArticleDto\";\r\nimport type { KbCategoryDto } from \"../dtos/KbCategoryDto\";\r\nimport type { KbSearchResultDto } from \"../dtos/KbSearchResultDto\";\r\nimport type { KnowledgeBaseDto } from \"../dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseWithDetails, getAllKnowledgeBases, getKnowledgeBaseById, getKnowledgeBaseBySlug } from \"../db/knowledgeBase.db.server\";\r\nimport { db } from \"~/lib/db.server\";\r\nimport { KbNavLinkDto } from \"../dtos/KbNavLinkDto\";\r\nimport {\r\n  KnowledgeBaseArticleWithDetails,\r\n  createKnowledgeBaseArticle,\r\n  getAllKnowledgeBaseArticles,\r\n  getFeaturedKnowledgeBaseArticles,\r\n  getKbArticleById,\r\n  getKbArticleBySlug,\r\n} from \"../db/kbArticles.db.server\";\r\nimport { createKnowledgeBaseCategory, getAllKnowledgeBaseCategories, getKbCategoryById, getKbCategoryBySlug } from \"../db/kbCategories.db.server\";\r\nimport KnowledgeBaseUtils from \"../utils/KnowledgeBaseUtils\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"../helpers/KbCategoryModelHelper\";\r\n\r\nasync function getAll({ enabled }: { enabled?: boolean }): Promise<KnowledgeBaseDto[]> {\r\n  const items = await getAllKnowledgeBases({ enabled });\r\n  return items.map((item) => kbToDto(item));\r\n  // const items: KnowledgeBaseDto[] = [\r\n  //   {\r\n  //     id: \"1\",\r\n  //     createdAt: new Date(),\r\n  //     updatedAt: null,\r\n  //     slug: \"docs\",\r\n  //     title: \"Documentation\",\r\n  //     description: \"Your documentation description\",\r\n  //     defaultLanguage: \"en\",\r\n  //     layout: \"list\",\r\n  //     languages: [\"en\", \"es\"],\r\n  //     links: [{ name: \"Back to site\", href: \"/\" }],\r\n  //     color: Colors.PINK,\r\n  //     logo: \"https://yahooder.sirv.com/saasrock/logos/logo-dark.png\",\r\n  //     metatags: [{ title: `Documentation` }],\r\n  //     enabled: true,\r\n  //     views: 0,\r\n  //     count: { categories: 0, articles: 0 },\r\n  //   },\r\n  //   {\r\n  //     id: \"2\",\r\n  //     createdAt: new Date(),\r\n  //     updatedAt: null,\r\n  //     slug: \"help-center\",\r\n  //     title: \"Help Center\",\r\n  //     description: \"Your help center description\",\r\n  //     defaultLanguage: \"es\",\r\n  //     layout: \"articles\",\r\n  //     languages: [\"en\", \"es\"],\r\n  //     links: [{ name: \"Back to site\", href: \"/\" }],\r\n  //     color: Colors.BLUE,\r\n  //     logo: \"light\",\r\n  //     metatags: [{ title: `Help Center` }],\r\n  //     enabled: true,\r\n  //     views: 0,\r\n  //     count: { categories: 0, articles: 0 },\r\n  //   },\r\n  //   {\r\n  //     id: \"3\",\r\n  //     createdAt: new Date(),\r\n  //     updatedAt: null,\r\n  //     slug: \"ayuda\",\r\n  //     title: \"Centro de Ayuda\",\r\n  //     description: \"Tu descripci\u00F3n del centro de ayuda\",\r\n  //     defaultLanguage: \"es\",\r\n  //     layout: \"grid\",\r\n  //     languages: [\"es\"],\r\n  //     links: [{ name: \"Volver al sitio\", href: \"/\" }],\r\n  //     color: Colors.TEAL,\r\n  //     logo: \"dark\",\r\n  //     metatags: [{ title: `Centro de Ayuda` }],\r\n  //     enabled: true,\r\n  //     views: 0,\r\n  //     count: { categories: 0, articles: 0 },\r\n  //   },\r\n  // ];\r\n  // return items.filter((f) => enabled === undefined || f.enabled === enabled);\r\n}\r\n\r\nasync function get({ slug, enabled }: { slug: string; enabled?: boolean }): Promise<KnowledgeBaseDto> {\r\n  const item = await getKnowledgeBaseBySlug(slug);\r\n  if (!item || (enabled !== undefined && item.enabled !== enabled)) {\r\n    throw new Error(\"Knowledge base not found\");\r\n  }\r\n  return kbToDto(item);\r\n}\r\n\r\nasync function getById(id: string): Promise<KnowledgeBaseDto | null> {\r\n  const item = await getKnowledgeBaseById(id);\r\n  if (!item) {\r\n    return null;\r\n  }\r\n  return kbToDto(item);\r\n}\r\n\r\nfunction kbToDto(kb: KnowledgeBaseWithDetails) {\r\n  const item: KnowledgeBaseDto = {\r\n    id: kb.id,\r\n    createdAt: kb.createdAt,\r\n    updatedAt: kb.updatedAt,\r\n    slug: kb.slug,\r\n    title: kb.title,\r\n    description: kb.description,\r\n    defaultLanguage: kb.defaultLanguage,\r\n    layout: kb.layout as \"list\" | \"articles\" | \"grid\",\r\n    languages: JSON.parse(kb.languages) as string[],\r\n    links: JSON.parse(kb.links) as KbNavLinkDto[],\r\n    color: kb.color,\r\n    enabled: kb.enabled,\r\n    count: {\r\n      articles: kb._count.articles,\r\n      categories: kb._count.categories,\r\n      views: kb._count.views,\r\n    },\r\n    logo: kb.logo,\r\n    seoImage: kb.seoImage,\r\n    metatags: [\r\n      { title: `${kb.title}` },\r\n      { name: \"description\", content: kb.description },\r\n      // { name: \"keywords\", content: kb.keywords },\r\n      { name: \"og:title\", content: `${kb.title}` },\r\n      { name: \"og:description\", content: kb.description },\r\n      { name: \"og:image\", content: kb.seoImage },\r\n      // { name: \"og:url\", content: `${new URL(request.url).origin}/${kb.slug}` },\r\n      { name: \"twitter:title\", content: `${kb.title}` },\r\n      { name: \"twitter:description\", content: kb.description },\r\n      { name: \"twitter:image\", content: kb.seoImage },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n    ],\r\n  };\r\n  return item;\r\n}\r\n\r\nasync function getCategories({\r\n  kb,\r\n  params,\r\n}: {\r\n  kb: KnowledgeBaseDto;\r\n  params: {\r\n    lang?: string;\r\n  };\r\n}): Promise<KbCategoryDto[]> {\r\n  const items = await getAllKnowledgeBaseCategories({\r\n    knowledgeBaseSlug: kb.slug,\r\n    language: params.lang || kb.defaultLanguage,\r\n  });\r\n  return items.map((f) => categoryToDto({ kb, category: f, params }));\r\n  // let allItems = await generateFakeData(kb);\r\n  // allItems.categories = allItems.categories.filter((f) => f.language === language);\r\n  // const result = await fakeSearch({ original: allItems, query });\r\n  // allItems.categories.forEach((category) => {\r\n  //   category.articles = allItems.articles;\r\n  // });\r\n  // return result.categories;\r\n}\r\n\r\nfunction categoryToDto({ kb, category, params }: { kb: KnowledgeBaseDto; category: KnowledgeBaseCategoryWithDetails; params: { lang?: string } }) {\r\n  const item: KbCategoryDto = {\r\n    id: category.id,\r\n    slug: category.slug,\r\n    order: category.order,\r\n    title: category.title,\r\n    description: category.description,\r\n    icon: category.icon,\r\n    language: category.language,\r\n    seoImage: category.seoImage,\r\n    href: KnowledgeBaseUtils.getCategoryUrl({ kb, category, params }),\r\n    sections: category.sections.map((f) => ({\r\n      id: f.id,\r\n      order: f.order,\r\n      title: f.title,\r\n      description: f.description,\r\n    })),\r\n    articles: category.articles.map((f) => ({\r\n      id: f.id,\r\n      order: f.order,\r\n      title: f.title,\r\n      description: f.description,\r\n      language: f.language,\r\n      slug: f.slug,\r\n      href: KnowledgeBaseUtils.getArticleUrl({ kb, article: f, params }),\r\n      sectionId: f.sectionId,\r\n    })),\r\n    metatags: [\r\n      { title: `${category.title} | ${kb.title}` },\r\n      { name: \"description\", content: category.description },\r\n      // { name: \"keywords\", content: category.keywords },\r\n      { name: \"og:title\", content: `${category.title} | ${kb.title}` },\r\n      { name: \"og:description\", content: category.description },\r\n      { name: \"og:image\", content: category.seoImage },\r\n      // { name: \"og:url\", content: `${process.env.APP_URL}/${kb.slug}/categories/${category.slug}` },\r\n      { name: \"twitter:title\", content: `${category.title} | ${kb.title}` },\r\n      { name: \"twitter:description\", content: category.description },\r\n      { name: \"twitter:image\", content: category.seoImage },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n    ],\r\n  };\r\n  return item;\r\n}\r\n\r\nasync function getArticles({\r\n  kb,\r\n  categoryId,\r\n  language,\r\n  query,\r\n  params,\r\n}: {\r\n  kb: KnowledgeBaseDto;\r\n  categoryId: string;\r\n  language: string;\r\n  query: string | undefined;\r\n  params: { lang?: string };\r\n}): Promise<KbArticleDto[]> {\r\n  const items = await getAllKnowledgeBaseArticles({\r\n    knowledgeBaseSlug: kb.slug,\r\n    categoryId,\r\n    language,\r\n  });\r\n  return items.map((f) => articleToDto({ kb, article: f, relatedArticles: f.relatedArticles, params }));\r\n  // let allItems = await generateFakeData(kb);\r\n  // allItems.articles = allItems.articles.filter((f) => f.language === language);\r\n  // const result = await fakeSearch({ original: allItems, query });\r\n  // return result.articles;\r\n}\r\n\r\nasync function getArticle({ kb, slug, params }: { kb: KnowledgeBaseDto; slug: string; params: { lang?: string } }): Promise<{\r\n  article: KbArticleDto;\r\n  category: KbCategoryDto;\r\n} | null> {\r\n  let language = params.lang || kb.defaultLanguage;\r\n  const item = await getKbArticleBySlug({\r\n    knowledgeBaseId: kb.id,\r\n    slug,\r\n    language,\r\n  });\r\n  if (!item || !item.publishedAt) {\r\n    return null;\r\n  }\r\n  if (!item.categoryId) {\r\n    return null;\r\n  }\r\n  const category = await getKbCategoryById(item.categoryId);\r\n  if (!category) {\r\n    return null;\r\n  }\r\n  return {\r\n    article: articleToDto({ kb, article: item, relatedArticles: item.relatedArticles, params }),\r\n    category: categoryToDto({ kb, category, params }),\r\n  };\r\n  // const getIdFromSlug = (slug: string) => {\r\n  //   return slug.split(\"-\").pop();\r\n  // };\r\n  // const id = getIdFromSlug(slug);\r\n  // const allItems = await generateFakeData(kb);\r\n  // const article = allItems.articles.find((f) => f.id === id && f.language === language);\r\n\r\n  // if (!article) {\r\n  //   return null;\r\n  // }\r\n  // const category = allItems.categories[0];\r\n  // return { article, category };\r\n}\r\n\r\nasync function getArticleById({ kb, id }: { kb: KnowledgeBaseDto; id: string }): Promise<KbArticleDto | null> {\r\n  const item = await getKbArticleById(id);\r\n  if (!item) {\r\n    return null;\r\n  }\r\n  return articleToDto({ kb, article: item, relatedArticles: item.relatedArticles, params: {} });\r\n}\r\n\r\nasync function getFeaturedArticles({ kb, params }: { kb: KnowledgeBaseDto; params: { lang?: string } }): Promise<KbArticleDto[]> {\r\n  const items = await getFeaturedKnowledgeBaseArticles({\r\n    knowledgeBaseId: kb.id,\r\n    language: params.lang || kb.defaultLanguage,\r\n  });\r\n  return items.map((f) => articleToDto({ kb, article: f, relatedArticles: f.relatedArticles, params }));\r\n  // let allItems = await generateFakeData(kb);\r\n  // allItems.articles = allItems.articles.filter((f) => f.language === language && f.featuredOrder);\r\n  // // return first 6\r\n  // if (allItems.articles.length <= 4) {\r\n  //   return allItems.articles;\r\n  // }\r\n  // return allItems.articles.slice(0, 4);\r\n}\r\n\r\nfunction articleToDto({\r\n  kb,\r\n  article,\r\n  relatedArticles,\r\n  params,\r\n}: {\r\n  kb: KnowledgeBaseDto;\r\n  article: KnowledgeBaseArticleWithDetails;\r\n  relatedArticles: { order: number; title: string; slug: string }[];\r\n  params: { lang?: string };\r\n}) {\r\n  const item: KbArticleDto = {\r\n    id: article.id,\r\n    createdAt: article.createdAt,\r\n    updatedAt: article.updatedAt,\r\n    slug: article.slug,\r\n    title: article.title,\r\n    description: article.description,\r\n    order: article.order,\r\n    contentDraft: article.contentDraft,\r\n    contentPublished: article.contentPublished,\r\n    contentType: article.contentType as \"wysiwyg\" | \"markdown\",\r\n    language: article.language,\r\n    featuredOrder: article.featuredOrder,\r\n    author: {\r\n      email: \"alex.martinez@absys.com.mx\",\r\n      firstName: \"Sudhanshu\",\r\n      lastName: \"Patil\",\r\n      avatar: \"https://avatars.githubusercontent.com/u/93507588?s=400&u=ef7c65a4cd7df11185c8ac6444d9f914a159daf0&v=4\",\r\n    },\r\n    publishedAt: article.publishedAt,\r\n    href: KnowledgeBaseUtils.getArticleUrl({ kb, article, params }),\r\n    sectionId: article.sectionId,\r\n    relatedArticles: relatedArticles.map((f) => ({\r\n      order: f.order,\r\n      title: f.title,\r\n      slug: f.slug,\r\n      href: KnowledgeBaseUtils.getArticleUrl({ kb, article: f, params }),\r\n    })),\r\n    seoImage: article.seoImage,\r\n    metatags: [\r\n      { title: `${article.title} | ${kb.title}` },\r\n      { name: \"description\", content: article.description },\r\n      // { name: \"keywords\", content: article.keywords },\r\n      { name: \"og:title\", content: `${article.title}` },\r\n      { name: \"og:description\", content: article.description },\r\n      { name: \"og:image\", content: article.seoImage },\r\n      // { name: \"og:url\", content: `${process.env.APP_URL}/${kb.slug}/articles/${article.slug}` },\r\n      { name: \"twitter:title\", content: `${article.title}` },\r\n      { name: \"twitter:description\", content: article.description },\r\n      { name: \"twitter:image\", content: article.seoImage },\r\n      { name: \"twitter:card\", content: \"summary_large_image\" },\r\n    ],\r\n  };\r\n  return item;\r\n}\r\n\r\nasync function getCategory({\r\n  kb,\r\n  category,\r\n  language,\r\n  params,\r\n}: {\r\n  kb: KnowledgeBaseDto;\r\n  category: string;\r\n  language: string;\r\n  params: { lang?: string };\r\n}): Promise<KbCategoryDto | null> {\r\n  const item = await getKbCategoryBySlug({\r\n    knowledgeBaseId: kb.id,\r\n    slug: category,\r\n    language,\r\n  });\r\n  if (!item) {\r\n    return null;\r\n  }\r\n  item.articles = item.articles.filter((f) => f.publishedAt);\r\n  return categoryToDto({ kb, category: item, params });\r\n  // const allItems = await generateFakeData(kb);\r\n  // const categoryItem = allItems.categories.find((f) => f.slug === category && f.language === language);\r\n  // if (categoryItem) {\r\n  //   categoryItem.articles = allItems.articles.filter((f) => f.language === language);\r\n  // }\r\n\r\n  // return categoryItem ?? null;\r\n}\r\n\r\n// async function generateFakeData(kb: KnowledgeBaseDto) {\r\n//   const languages = [\"en\", \"es\"];\r\n//   // const versions = [\"0.9\", \"1.0\"];\r\n\r\n//   const authors: { email: string; firstName: string; lastName: string; avatar: string }[] = [\r\n//     \r\n//   ];\r\n//   const categories: KbCategoryDto[] = [];\r\n//   // const tags: KnowledgeBaseTagDto[] = [];\r\n//   const articles: KbArticleDto[] = [];\r\n\r\n//   languages.forEach((language) => {\r\n//     // versions.forEach((version) => {\r\n//     for (let i = 1; i <= 5; i++) {\r\n//       let title = language === \"es\" ? \"Categor\u00EDa\" : \"Category\";\r\n//       const slug = `category-${i}`;\r\n//       const sections: KbCategorySectionDto[] = [\r\n//         {\r\n//           id: \"1\",\r\n//           order: 1,\r\n//           title: \"Section 1\",\r\n//           description: \"Description of section 1\",\r\n//         },\r\n//         {\r\n//           id: \"2\",\r\n//           order: 2,\r\n//           title: \"Section 2\",\r\n//           description: \"Description of section 2\",\r\n//         },\r\n//       ];\r\n//       categories.push({\r\n//         id: slug,\r\n//         order: i,\r\n//         icon:\r\n//           i % 2 === 0\r\n//             ? `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\"><path d=\"M12 2L1 21h22L12 2zm0 5l5.5 9h-11L12 7z\"/></svg>`\r\n//             : \"https://downloads.intercomcdn.com/i/o/413548/68ab50b2f4f155cc5e3af208/2bbe53ee6af29a766d79344e1ea19c97.png\",\r\n//         title: `${title} ${i}`,\r\n//         description: \"Description \" + i,\r\n//         slug,\r\n//         language,\r\n//         seoImage: \"https://yahooder.sirv.com/saasfrontends/remix/ss/cover.png\",\r\n//         // version,\r\n//         // categories: [],\r\n//         sections,\r\n//         articles: [],\r\n//         href: `/${kb.slug}/${language}/categories/${slug}`,\r\n//         metatags: [{ title: `${title} ${i} | ${kb.title}`, description: \"Description \" + i }],\r\n//       });\r\n//     }\r\n\r\n//     // for (let i = 1; i <= 5; i++) {\r\n//     //   tags.push({\r\n//     //     name: \"Tag \" + i,\r\n//     //     color: i,\r\n//     //   });\r\n//     // }\r\n\r\n//     for (let i = 1; i <= 5; i++) {\r\n//       let title =\r\n//         language === \"es\"\r\n//           ? \"Art\u00EDculo lorem ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor lorem ipsum dolor lorem ipsum dolor lorem ipsum dolor\"\r\n//           : \"Article lorem ipsum dolor sit amet consectetur adipiscing elit lorem ipsum dolor lorem ipsum dolor lorem ipsum dolor lorem ipsum dolor\";\r\n//       let slug = `article-${i}`;\r\n//       let sectionId: string | null = null;\r\n//       // first null, second 1, third 2, then repeat for every 2 articles\r\n//       if (i % 2 === 0) {\r\n//         sectionId = \"1\";\r\n//       } else if (i % 3 === 0) {\r\n//         sectionId = \"2\";\r\n//       }\r\n\r\n//       articles.push({\r\n//         id: i.toString(),\r\n//         createdAt: new Date(),\r\n//         updatedAt: new Date(),\r\n//         author: authors[0],\r\n//         title: `${title} ${i}`,\r\n//         description: \"Description \" + i,\r\n//         contentDraft: FakeArticle,\r\n//         contentPublished: FakeArticle,\r\n//         contentType: \"markdown\",\r\n//         slug,\r\n//         language,\r\n//         // version,\r\n//         // tags: [tags[i]],\r\n//         // reactions: [],\r\n//         sectionId,\r\n//         publishedAt: new Date(),\r\n//         href: `/${kb.slug}/${language}/articles/${slug}`,\r\n//         relatedArticles: articles\r\n//           .filter((f) => f.language === language)\r\n//           .map((f) => {\r\n//             return {\r\n//               ...f,\r\n//               relatedArticles: [],\r\n//             };\r\n//           }),\r\n//         featuredOrder: i % 2 === 0 ? i : null,\r\n//         metatags: [{ title: `${title} ${i} | ${kb.title}`, description: \"Description \" + i }],\r\n//         order: i,\r\n//         views: 0,\r\n//         upvotes: 0,\r\n//         downvotes: 0,\r\n//         seoImage: \"https://yahooder.sirv.com/saasfrontends/remix/ss/cover.png\",\r\n//       });\r\n//     }\r\n//   });\r\n//   // });\r\n\r\n//   let result: KbSearchResultDto = {\r\n//     categories,\r\n//     articles,\r\n//     // tags,\r\n//     // authors,\r\n//   };\r\n\r\n//   return result;\r\n// }\r\n\r\nasync function fakeSearch({ original, query }: { original: KbSearchResultDto; query: string | undefined }): Promise<KbSearchResultDto> {\r\n  // const authors: string[] = [\"John Doe\", \"Jane Doe\", \"John Smith\", \"Jane Smith\", \"Alex Doe\", \"Alex Smith\"];\r\n  const categories: KbCategoryDto[] = [];\r\n  // const tags: KnowledgeBaseTagDto[] = [];\r\n  const articles: KbArticleDto[] = [];\r\n\r\n  function find(arr: string[]) {\r\n    return arr.filter((f) => !query || f.toLowerCase().includes(query.toLowerCase())).length > 0;\r\n  }\r\n\r\n  original.categories.forEach((category) => {\r\n    //\r\n    if (find([category.title, category.slug, category.description])) {\r\n      if (!categories.find((f) => f.title === category.title)) {\r\n        categories.push(category);\r\n      }\r\n    }\r\n  });\r\n\r\n  original.articles.forEach((article) => {\r\n    if (find([article.title, article.slug, article.description, article.contentDraft])) {\r\n      if (!articles.find((f) => f.title === article.title)) {\r\n        articles.push(article);\r\n      }\r\n    }\r\n    // article.tags.forEach((tag) => {\r\n    //   if (find([tag.name])) {\r\n    //     if (!tags.find((f) => f.name === tag.name)) {\r\n    //       tags.push(tag);\r\n    //     }\r\n    //   }\r\n    // });\r\n    // if (find([article.author])) {\r\n    //   if (!authors.find((f) => f === article.author)) {\r\n    //     authors.push(article.author);\r\n    //   }\r\n    // }\r\n  });\r\n\r\n  return {\r\n    categories,\r\n    articles,\r\n    // tags,\r\n    // authors,\r\n  };\r\n}\r\n\r\nasync function del(item: KnowledgeBaseDto) {\r\n  const articlesCount = await db.knowledgeBaseArticle.count({\r\n    where: { knowledgeBaseId: item.id },\r\n  });\r\n  const categoriesCount = await db.knowledgeBaseCategory.count({\r\n    where: { knowledgeBaseId: item.id },\r\n  });\r\n  if (articlesCount > 0) {\r\n    throw new Error(\"Cannot delete knowledge base with articles\");\r\n  }\r\n  if (categoriesCount > 0) {\r\n    throw new Error(\"Cannot delete knowledge base with categories\");\r\n  }\r\n  return await db.knowledgeBase.delete({\r\n    where: { id: item.id },\r\n  });\r\n}\r\n\r\nasync function duplicateCategory({ kb, language, categoryId }: { kb: KnowledgeBaseDto; language: string; categoryId: string }) {\r\n  const allCategories = await getAllKnowledgeBaseCategories({\r\n    knowledgeBaseSlug: kb.slug,\r\n    language,\r\n  });\r\n  const existing = allCategories.find((p) => p.id === categoryId);\r\n  if (!existing) {\r\n    throw Error(\"Invalid category\");\r\n  }\r\n  let number = 2;\r\n  let slug = \"\";\r\n\r\n  const findExistingSlug = (slug: string) => {\r\n    return allCategories.find((p) => p.slug === slug);\r\n  };\r\n\r\n  do {\r\n    slug = `${existing.slug}${number}`;\r\n    const existingWithSlug = findExistingSlug(slug);\r\n    if (!existingWithSlug) {\r\n      break;\r\n    }\r\n    if (number > 10) {\r\n      throw Error(\"Too many duplicates\");\r\n    }\r\n    number++;\r\n  } while (true);\r\n\r\n  let maxOrder = 0;\r\n  if (allCategories.length > 0) {\r\n    maxOrder = Math.max(...allCategories.map((p) => p.order));\r\n  }\r\n\r\n  const item = await createKnowledgeBaseCategory({\r\n    knowledgeBaseId: kb.id,\r\n    slug,\r\n    order: maxOrder + 1,\r\n    title: existing.title + \" \" + number,\r\n    description: existing.description,\r\n    icon: existing.icon,\r\n    language: existing.language,\r\n    seoImage: existing.seoImage,\r\n  });\r\n  return item;\r\n}\r\n\r\nasync function duplicateArticle({ kb, language, articleId }: { kb: KnowledgeBaseDto; language: string; articleId: string }) {\r\n  const allArticles = await getAllKnowledgeBaseArticles({\r\n    knowledgeBaseSlug: kb.slug,\r\n    language,\r\n  });\r\n\r\n  const existing = allArticles.find((p) => p.id === articleId);\r\n  if (!existing) {\r\n    throw Error(\"Invalid article\");\r\n  }\r\n\r\n  const { slug, maxOrder, number } = KnowledgeBaseUtils.getAvailableArticleSlug({\r\n    allArticles,\r\n    initialSlug: existing.slug,\r\n  });\r\n\r\n  const item = await createKnowledgeBaseArticle({\r\n    knowledgeBaseId: kb.id,\r\n    categoryId: existing.categoryId,\r\n    sectionId: existing.sectionId,\r\n    slug,\r\n    title: existing.title + \" \" + number,\r\n    description: existing.description,\r\n    order: maxOrder + 1,\r\n    contentDraft: existing.contentDraft,\r\n    contentPublished: existing.contentPublished,\r\n    contentType: existing.contentType,\r\n    language: existing.language,\r\n    featuredOrder: existing.featuredOrder,\r\n    author: existing.author,\r\n    seoImage: existing.seoImage,\r\n    publishedAt: null,\r\n  });\r\n  return item;\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  get,\r\n  getById,\r\n  getCategories,\r\n  getArticles,\r\n  getArticle,\r\n  getArticleById,\r\n  getFeaturedArticles,\r\n  getCategory,\r\n  del,\r\n  duplicateCategory,\r\n  duplicateArticle,\r\n};\r\n", "import { Link, useNavigate, useParams, useSearchParams } from \"@remix-run/react\";\r\nimport XIcon from \"~/components/icons/XIcon\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport type { KnowledgeBaseDto } from \"../dtos/KnowledgeBaseDto\";\r\nimport clsx from \"clsx\";\r\nimport ColorBackgroundUtils from \"~/utils/shared/colors/ColorBackgroundUtils\";\r\nimport ColorTextUtils from \"~/utils/shared/colors/ColorTextUtils\";\r\nimport ColorPlaceholderUtils from \"~/utils/shared/colors/ColorPlaceholderUtils\";\r\nimport ColorFocusUtils from \"~/utils/shared/colors/ColorFocusUtils\";\r\nimport ColorRingUtils from \"~/utils/shared/colors/ColorRingUtils\";\r\nimport ColorGradientUtils from \"~/utils/shared/colors/ColorGradientUtils\";\r\nimport LogoLight from \"~/assets/img/logo-light.png\";\r\nimport LogoDark from \"~/assets/img/logo-dark.png\";\r\nimport ColorFocusWithinUtils from \"~/utils/shared/colors/ColorFocusWithinUtils\";\r\nimport KnowledgeBaseUtils from \"../utils/KnowledgeBaseUtils\";\r\nimport WarningBanner from \"~/components/WarningBanner\";\r\n\r\ninterface Props {\r\n  kb: KnowledgeBaseDto;\r\n  // currentVersion: string | undefined;\r\n  withTitleAndDescription: boolean;\r\n}\r\nexport default function KbHeader({ kb, withTitleAndDescription }: Props) {\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [search, setSearch] = useState(searchParams.get(\"q\")?.toString() ?? \"\");\r\n  const [debouncedSearch, setDebouncedSearch] = useState(searchParams.get(\"q\")?.toString() ?? \"\");\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setDebouncedSearch(search), 500);\r\n    return () => clearTimeout(timer);\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    const query = searchParams.get(\"q\") ?? \"\";\r\n    if (query !== debouncedSearch) {\r\n      if (debouncedSearch === \"\") {\r\n        searchParams.delete(\"q\");\r\n      } else {\r\n        searchParams.set(\"q\", debouncedSearch);\r\n      }\r\n      setSearchParams(searchParams);\r\n    }\r\n  }, [debouncedSearch, searchParams, setSearchParams]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={clsx(\"bg-gradient-to-r py-6 text-white\", ColorGradientUtils.getFrom700To800(kb.color))}>\r\n        <div className=\"mx-auto max-w-5xl px-8 py-6 space-y-8\">\r\n          <div className=\"flex items-center justify-between space-x-2 h-12\">\r\n            <Link to={`/${kb.slug}`} className=\"flex select-none items-center space-x-2\">\r\n              {kb.logo === \"light\" ? (\r\n                <img className=\"h-8 w-auto\" src={LogoLight} alt=\"Logo\" />\r\n              ) : kb.logo === \"dark\" ? (\r\n                <img className=\"h-8 w-auto\" src={LogoDark} alt=\"Logo\" />\r\n              ) : (\r\n                <img className=\"h-8 w-auto\" src={kb.logo} alt=\"Logo\" />\r\n              )}\r\n              {!withTitleAndDescription && (\r\n                <Fragment>\r\n                  <span className={clsx(\"px-2\", ColorTextUtils.getText300(kb.color))}>|</span>\r\n                  <span className=\"font-semibold\">{kb.title}</span>\r\n                </Fragment>\r\n              )}\r\n            </Link>\r\n            <div className=\"flex items-center space-x-4\">\r\n              {kb.links.map((link) => {\r\n                return (\r\n                  <a key={link.href} href={link.href} className={clsx(\"hover:text-white transition-colors duration-150\", ColorTextUtils.getText300(kb.color))}>\r\n                    {link.name}\r\n                  </a>\r\n                );\r\n              })}\r\n              <div className=\"flex space-x-2 items-center\">\r\n                {/* <select\r\n                id=\"version\"\r\n                name=\"version\"\r\n                defaultValue={currentVersion}\r\n                className=\"bg-theme-700 focus:ring-theme-600 text-white ring-1 ring-inset ring-theme-800 focus:ring-2 sm:text-sm sm:leading-6 w-auto block rounded-md border-0 py-1.5 pl-3 pr-10\"\r\n                onChange={(e) => {\r\n                  if (params.article) {\r\n                    navigate(`/${kb.slug}/${currentLanguage}/${e.target.value}/articles/${params.article}?${searchParams.toString()}`);\r\n                  } else {\r\n                    navigate(`/${kb.slug}/${currentLanguage}/${e.target.value}?${searchParams.toString()}`);\r\n                  }\r\n                }}\r\n              >\r\n                {versions.map((version) => (\r\n                  <option key={version} value={version}>\r\n                    {version}\r\n                  </option>\r\n                ))}\r\n              </select> */}\r\n                {kb.languages.length > 1 && (\r\n                  <select\r\n                    id=\"lang\"\r\n                    name=\"lang\"\r\n                    defaultValue={params.lang || kb.defaultLanguage}\r\n                    className={clsx(\r\n                      \"text-white ring-1 ring-inset focus:ring-2 sm:text-sm sm:leading-6 w-full block rounded-md border-0 py-1.5 pl-3 pr-10\",\r\n                      ColorBackgroundUtils.getBg700(kb.color),\r\n                      ColorRingUtils.getRing800(kb.color),\r\n                      ColorFocusUtils.getRing600(kb.color)\r\n                    )}\r\n                    onChange={(e) => {\r\n                      if (params.article) {\r\n                        navigate(`/${kb.slug}/${e.target.value}/articles/${params.article}?${searchParams.toString()}`);\r\n                      } else if (params.category) {\r\n                        navigate(`/${kb.slug}/${e.target.value}/categories/${params.category}?${searchParams.toString()}`);\r\n                      } else {\r\n                        navigate(`/${kb.slug}/${e.target.value}?${searchParams.toString()}`);\r\n                      }\r\n                    }}\r\n                  >\r\n                    {kb.languages.map((lang) => {\r\n                      const language = KnowledgeBaseUtils.supportedLanguages.find((f) => f.value === lang);\r\n                      if (!language) return null;\r\n                      return (\r\n                        <option key={lang} value={lang}>\r\n                          {language.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {withTitleAndDescription && (\r\n            <div className=\"space-y-4\">\r\n              <h1 className=\"text-2xl font-semibold tracking-tight sm:text-4xl\">{kb.title}</h1>\r\n              <p className={clsx(\"text-base\", ColorTextUtils.getText300(kb.color))}>{kb.description}</p>\r\n            </div>\r\n          )}\r\n          <div className=\"w-full space-y-2\">\r\n            <div className={clsx(\"relative\", ColorTextUtils.getText400(kb.color), ColorFocusWithinUtils.getText600(kb.color))}>\r\n              <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-4\">\r\n                <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 14 14\" height=\"48\" width=\"48\">\r\n                  <g id=\"magnifying-glass--glass-search-magnifying\">\r\n                    <path\r\n                      id=\"Vector\"\r\n                      stroke=\"currentColor\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M6 11.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11Z\"\r\n                    ></path>\r\n                    <path id=\"Vector_2\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M13.5 13.5 10 10\"></path>\r\n                  </g>\r\n                </svg>\r\n              </div>\r\n              <input\r\n                autoFocus={withTitleAndDescription}\r\n                autoComplete=\"off\"\r\n                className={clsx(\r\n                  \" transition-all focus:bg-white focus:ring-2 focus:ring-inset block w-full rounded-md border-0 px-6 py-5 pl-12 ring-1 ring-inset outline-none\",\r\n                  ColorBackgroundUtils.getBg800(kb.color),\r\n                  ColorTextUtils.getText300(kb.color),\r\n                  ColorPlaceholderUtils.getText400(kb.color),\r\n                  ColorFocusUtils.getText600(kb.color),\r\n                  ColorFocusUtils.getPlaceholder600(kb.color),\r\n                  ColorFocusUtils.getRing600(kb.color),\r\n                  ColorRingUtils.getRing800(kb.color)\r\n                )}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={search}\r\n                onChange={(e) => setSearch(e.target.value)}\r\n              />\r\n              {search && (\r\n                <button className=\"absolute inset-y-0 right-0 flex items-center pr-4\" onClick={() => setSearch(\"\")} aria-label=\"Clear search\">\r\n                  <XIcon className=\"h-5 w-5\" />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {searchParams.get(\"q\") && (\r\n        <div className=\"mx-auto max-w-5xl px-8 py-6 space-y-8\">\r\n          <WarningBanner title=\"TODO\">TODO: Search results for {searchParams.get(\"q\")}</WarningBanner>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "export default function XIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getBg700(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"bg-gray-700\";\r\n    case Colors.SLATE:\r\n      return \"bg-slate-700\";\r\n    case Colors.GRAY:\r\n      return \"bg-gray-700\";\r\n    case Colors.NEUTRAL:\r\n      return \"bg-neutral-700\";\r\n    case Colors.STONE:\r\n      return \"bg-stone-700\";\r\n    case Colors.RED:\r\n      return \"bg-red-700\";\r\n    case Colors.ORANGE:\r\n      return \"bg-orange-700\";\r\n    case Colors.AMBER:\r\n      return \"bg-amber-700\";\r\n    case Colors.YELLOW:\r\n      return \"bg-yellow-700\";\r\n    case Colors.LIME:\r\n      return \"bg-lime-700\";\r\n    case Colors.GREEN:\r\n      return \"bg-green-700\";\r\n    case Colors.EMERALD:\r\n      return \"bg-emerald-700\";\r\n    case Colors.TEAL:\r\n      return \"bg-teal-700\";\r\n    case Colors.CYAN:\r\n      return \"bg-cyan-700\";\r\n    case Colors.SKY:\r\n      return \"bg-sky-700\";\r\n    case Colors.BLUE:\r\n      return \"bg-blue-700\";\r\n    case Colors.INDIGO:\r\n      return \"bg-indigo-700\";\r\n    case Colors.VIOLET:\r\n      return \"bg-violet-700\";\r\n    case Colors.PURPLE:\r\n      return \"bg-purple-700\";\r\n    case Colors.FUCHSIA:\r\n      return \"bg-fuchsia-700\";\r\n    case Colors.PINK:\r\n      return \"bg-pink-700\";\r\n    case Colors.ROSE:\r\n      return \"bg-rose-700\";\r\n  }\r\n}\r\n\r\nfunction getBg800(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"bg-gray-800\";\r\n    case Colors.SLATE:\r\n      return \"bg-slate-800\";\r\n    case Colors.GRAY:\r\n      return \"bg-gray-800\";\r\n    case Colors.NEUTRAL:\r\n      return \"bg-neutral-800\";\r\n    case Colors.STONE:\r\n      return \"bg-stone-800\";\r\n    case Colors.RED:\r\n      return \"bg-red-800\";\r\n    case Colors.ORANGE:\r\n      return \"bg-orange-800\";\r\n    case Colors.AMBER:\r\n      return \"bg-amber-800\";\r\n    case Colors.YELLOW:\r\n      return \"bg-yellow-800\";\r\n    case Colors.LIME:\r\n      return \"bg-lime-800\";\r\n    case Colors.GREEN:\r\n      return \"bg-green-800\";\r\n    case Colors.EMERALD:\r\n      return \"bg-emerald-800\";\r\n    case Colors.TEAL:\r\n      return \"bg-teal-800\";\r\n    case Colors.CYAN:\r\n      return \"bg-cyan-800\";\r\n    case Colors.SKY:\r\n      return \"bg-sky-800\";\r\n    case Colors.BLUE:\r\n      return \"bg-blue-800\";\r\n    case Colors.INDIGO:\r\n      return \"bg-indigo-800\";\r\n    case Colors.VIOLET:\r\n      return \"bg-violet-800\";\r\n    case Colors.PURPLE:\r\n      return \"bg-purple-800\";\r\n    case Colors.FUCHSIA:\r\n      return \"bg-fuchsia-800\";\r\n    case Colors.PINK:\r\n      return \"bg-pink-800\";\r\n    case Colors.ROSE:\r\n      return \"bg-rose-800\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getBg700,\r\n  getBg800,\r\n};\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getText300(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"text-gray-300\";\r\n    case Colors.SLATE:\r\n      return \"text-slate-300\";\r\n    case Colors.GRAY:\r\n      return \"text-gray-300\";\r\n    case Colors.NEUTRAL:\r\n      return \"text-neutral-300\";\r\n    case Colors.STONE:\r\n      return \"text-stone-300\";\r\n    case Colors.RED:\r\n      return \"text-red-300\";\r\n    case Colors.ORANGE:\r\n      return \"text-orange-300\";\r\n    case Colors.AMBER:\r\n      return \"text-amber-300\";\r\n    case Colors.YELLOW:\r\n      return \"text-yellow-300\";\r\n    case Colors.LIME:\r\n      return \"text-lime-300\";\r\n    case Colors.GREEN:\r\n      return \"text-green-300\";\r\n    case Colors.EMERALD:\r\n      return \"text-emerald-300\";\r\n    case Colors.TEAL:\r\n      return \"text-teal-300\";\r\n    case Colors.CYAN:\r\n      return \"text-cyan-300\";\r\n    case Colors.SKY:\r\n      return \"text-sky-300\";\r\n    case Colors.BLUE:\r\n      return \"text-blue-300\";\r\n    case Colors.INDIGO:\r\n      return \"text-indigo-300\";\r\n    case Colors.VIOLET:\r\n      return \"text-violet-300\";\r\n    case Colors.PURPLE:\r\n      return \"text-purple-300\";\r\n    case Colors.FUCHSIA:\r\n      return \"text-fuchsia-300\";\r\n    case Colors.PINK:\r\n      return \"text-pink-300\";\r\n    case Colors.ROSE:\r\n      return \"text-rose-300\";\r\n  }\r\n}\r\n\r\nfunction getText400(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"text-gray-400\";\r\n    case Colors.SLATE:\r\n      return \"text-slate-400\";\r\n    case Colors.GRAY:\r\n      return \"text-gray-400\";\r\n    case Colors.NEUTRAL:\r\n      return \"text-neutral-400\";\r\n    case Colors.STONE:\r\n      return \"text-stone-400\";\r\n    case Colors.RED:\r\n      return \"text-red-400\";\r\n    case Colors.ORANGE:\r\n      return \"text-orange-400\";\r\n    case Colors.AMBER:\r\n      return \"text-amber-400\";\r\n    case Colors.YELLOW:\r\n      return \"text-yellow-400\";\r\n    case Colors.LIME:\r\n      return \"text-lime-400\";\r\n    case Colors.GREEN:\r\n      return \"text-green-400\";\r\n    case Colors.EMERALD:\r\n      return \"text-emerald-400\";\r\n    case Colors.TEAL:\r\n      return \"text-teal-400\";\r\n    case Colors.CYAN:\r\n      return \"text-cyan-400\";\r\n    case Colors.SKY:\r\n      return \"text-sky-400\";\r\n    case Colors.BLUE:\r\n      return \"text-blue-400\";\r\n    case Colors.INDIGO:\r\n      return \"text-indigo-400\";\r\n    case Colors.VIOLET:\r\n      return \"text-violet-400\";\r\n    case Colors.PURPLE:\r\n      return \"text-purple-400\";\r\n    case Colors.FUCHSIA:\r\n      return \"text-fuchsia-400\";\r\n    case Colors.PINK:\r\n      return \"text-pink-400\";\r\n    case Colors.ROSE:\r\n      return \"text-rose-400\";\r\n  }\r\n}\r\n\r\nfunction getText500(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"text-gray-500\";\r\n    case Colors.SLATE:\r\n      return \"text-slate-500\";\r\n    case Colors.GRAY:\r\n      return \"text-gray-500\";\r\n    case Colors.NEUTRAL:\r\n      return \"text-neutral-500\";\r\n    case Colors.STONE:\r\n      return \"text-stone-500\";\r\n    case Colors.RED:\r\n      return \"text-red-500\";\r\n    case Colors.ORANGE:\r\n      return \"text-orange-500\";\r\n    case Colors.AMBER:\r\n      return \"text-amber-500\";\r\n    case Colors.YELLOW:\r\n      return \"text-yellow-500\";\r\n    case Colors.LIME:\r\n      return \"text-lime-500\";\r\n    case Colors.GREEN:\r\n      return \"text-green-500\";\r\n    case Colors.EMERALD:\r\n      return \"text-emerald-500\";\r\n    case Colors.TEAL:\r\n      return \"text-teal-500\";\r\n    case Colors.CYAN:\r\n      return \"text-cyan-500\";\r\n    case Colors.SKY:\r\n      return \"text-sky-500\";\r\n    case Colors.BLUE:\r\n      return \"text-blue-500\";\r\n    case Colors.INDIGO:\r\n      return \"text-indigo-500\";\r\n    case Colors.VIOLET:\r\n      return \"text-violet-500\";\r\n    case Colors.PURPLE:\r\n      return \"text-purple-500\";\r\n    case Colors.FUCHSIA:\r\n      return \"text-fuchsia-500\";\r\n    case Colors.PINK:\r\n      return \"text-pink-500\";\r\n    case Colors.ROSE:\r\n      return \"text-rose-500\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getText300,\r\n  getText400,\r\n  getText500,\r\n};\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getText400(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"placeholder:text-gray-400\";\r\n    case Colors.SLATE:\r\n      return \"placeholder:text-slate-400\";\r\n    case Colors.GRAY:\r\n      return \"placeholder:text-gray-400\";\r\n    case Colors.NEUTRAL:\r\n      return \"placeholder:text-neutral-400\";\r\n    case Colors.STONE:\r\n      return \"placeholder:text-stone-400\";\r\n    case Colors.RED:\r\n      return \"placeholder:text-red-400\";\r\n    case Colors.ORANGE:\r\n      return \"placeholder:text-orange-400\";\r\n    case Colors.AMBER:\r\n      return \"placeholder:text-amber-400\";\r\n    case Colors.YELLOW:\r\n      return \"placeholder:text-yellow-400\";\r\n    case Colors.LIME:\r\n      return \"placeholder:text-lime-400\";\r\n    case Colors.GREEN:\r\n      return \"placeholder:text-green-400\";\r\n    case Colors.EMERALD:\r\n      return \"placeholder:text-emerald-400\";\r\n    case Colors.TEAL:\r\n      return \"placeholder:text-teal-400\";\r\n    case Colors.CYAN:\r\n      return \"placeholder:text-cyan-400\";\r\n    case Colors.SKY:\r\n      return \"placeholder:text-sky-400\";\r\n    case Colors.BLUE:\r\n      return \"placeholder:text-blue-400\";\r\n    case Colors.INDIGO:\r\n      return \"placeholder:text-indigo-400\";\r\n    case Colors.VIOLET:\r\n      return \"placeholder:text-violet-400\";\r\n    case Colors.PURPLE:\r\n      return \"placeholder:text-purple-400\";\r\n    case Colors.FUCHSIA:\r\n      return \"placeholder:text-fuchsia-400\";\r\n    case Colors.PINK:\r\n      return \"placeholder:text-pink-400\";\r\n    case Colors.ROSE:\r\n      return \"placeholder:text-rose-400\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getText400,\r\n};\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getRing600(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"focus:ring-gray-600\";\r\n    case Colors.SLATE:\r\n      return \"focus:ring-slate-600\";\r\n    case Colors.GRAY:\r\n      return \"focus:ring-gray-600\";\r\n    case Colors.NEUTRAL:\r\n      return \"focus:ring-neutral-600\";\r\n    case Colors.STONE:\r\n      return \"focus:ring-stone-600\";\r\n    case Colors.RED:\r\n      return \"focus:ring-red-600\";\r\n    case Colors.ORANGE:\r\n      return \"focus:ring-orange-600\";\r\n    case Colors.AMBER:\r\n      return \"focus:ring-amber-600\";\r\n    case Colors.YELLOW:\r\n      return \"focus:ring-yellow-600\";\r\n    case Colors.LIME:\r\n      return \"focus:ring-lime-600\";\r\n    case Colors.GREEN:\r\n      return \"focus:ring-green-600\";\r\n    case Colors.EMERALD:\r\n      return \"focus:ring-emerald-600\";\r\n    case Colors.TEAL:\r\n      return \"focus:ring-teal-600\";\r\n    case Colors.CYAN:\r\n      return \"focus:ring-cyan-600\";\r\n    case Colors.SKY:\r\n      return \"focus:ring-sky-600\";\r\n    case Colors.BLUE:\r\n      return \"focus:ring-blue-600\";\r\n    case Colors.INDIGO:\r\n      return \"focus:ring-indigo-600\";\r\n    case Colors.VIOLET:\r\n      return \"focus:ring-violet-600\";\r\n    case Colors.PURPLE:\r\n      return \"focus:ring-purple-600\";\r\n    case Colors.FUCHSIA:\r\n      return \"focus:ring-fuchsia-600\";\r\n    case Colors.PINK:\r\n      return \"focus:ring-pink-600\";\r\n    case Colors.ROSE:\r\n      return \"focus:ring-rose-600\";\r\n  }\r\n}\r\n\r\nfunction getText600(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"focus:text-gray-600\";\r\n    case Colors.SLATE:\r\n      return \"focus:text-slate-600\";\r\n    case Colors.GRAY:\r\n      return \"focus:text-gray-600\";\r\n    case Colors.NEUTRAL:\r\n      return \"focus:text-neutral-600\";\r\n    case Colors.STONE:\r\n      return \"focus:text-stone-600\";\r\n    case Colors.RED:\r\n      return \"focus:text-red-600\";\r\n    case Colors.ORANGE:\r\n      return \"focus:text-orange-600\";\r\n    case Colors.AMBER:\r\n      return \"focus:text-amber-600\";\r\n    case Colors.YELLOW:\r\n      return \"focus:text-yellow-600\";\r\n    case Colors.LIME:\r\n      return \"focus:text-lime-600\";\r\n    case Colors.GREEN:\r\n      return \"focus:text-green-600\";\r\n    case Colors.EMERALD:\r\n      return \"focus:text-emerald-600\";\r\n    case Colors.TEAL:\r\n      return \"focus:text-teal-600\";\r\n    case Colors.CYAN:\r\n      return \"focus:text-cyan-600\";\r\n    case Colors.SKY:\r\n      return \"focus:text-sky-600\";\r\n    case Colors.BLUE:\r\n      return \"focus:text-blue-600\";\r\n    case Colors.INDIGO:\r\n      return \"focus:text-indigo-600\";\r\n    case Colors.VIOLET:\r\n      return \"focus:text-violet-600\";\r\n    case Colors.PURPLE:\r\n      return \"focus:text-purple-600\";\r\n    case Colors.FUCHSIA:\r\n      return \"focus:text-fuchsia-600\";\r\n    case Colors.PINK:\r\n      return \"focus:text-pink-600\";\r\n    case Colors.ROSE:\r\n      return \"focus:text-rose-600\";\r\n  }\r\n}\r\n\r\nfunction getPlaceholder600(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"focus:placeholder-gray-600\";\r\n    case Colors.SLATE:\r\n      return \"focus:placeholder-slate-600\";\r\n    case Colors.GRAY:\r\n      return \"focus:placeholder-gray-600\";\r\n    case Colors.NEUTRAL:\r\n      return \"focus:placeholder-neutral-600\";\r\n    case Colors.STONE:\r\n      return \"focus:placeholder-stone-600\";\r\n    case Colors.RED:\r\n      return \"focus:placeholder-red-600\";\r\n    case Colors.ORANGE:\r\n      return \"focus:placeholder-orange-600\";\r\n    case Colors.AMBER:\r\n      return \"focus:placeholder-amber-600\";\r\n    case Colors.YELLOW:\r\n      return \"focus:placeholder-yellow-600\";\r\n    case Colors.LIME:\r\n      return \"focus:placeholder-lime-600\";\r\n    case Colors.GREEN:\r\n      return \"focus:placeholder-green-600\";\r\n    case Colors.EMERALD:\r\n      return \"focus:placeholder-emerald-600\";\r\n    case Colors.TEAL:\r\n      return \"focus:placeholder-teal-600\";\r\n    case Colors.CYAN:\r\n      return \"focus:placeholder-cyan-600\";\r\n    case Colors.SKY:\r\n      return \"focus:placeholder-sky-600\";\r\n    case Colors.BLUE:\r\n      return \"focus:placeholder-blue-600\";\r\n    case Colors.INDIGO:\r\n      return \"focus:placeholder-indigo-600\";\r\n    case Colors.VIOLET:\r\n      return \"focus:placeholder-violet-600\";\r\n    case Colors.PURPLE:\r\n      return \"focus:placeholder-purple-600\";\r\n    case Colors.FUCHSIA:\r\n      return \"focus:placeholder-fuchsia-600\";\r\n    case Colors.PINK:\r\n      return \"focus:placeholder-pink-600\";\r\n    case Colors.ROSE:\r\n      return \"focus:placeholder-rose-600\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getRing600,\r\n  getText600,\r\n  getPlaceholder600,\r\n};\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getRing800(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"ring-gray-800\";\r\n    case Colors.SLATE:\r\n      return \"ring-slate-800\";\r\n    case Colors.GRAY:\r\n      return \"ring-gray-800\";\r\n    case Colors.NEUTRAL:\r\n      return \"ring-neutral-800\";\r\n    case Colors.STONE:\r\n      return \"ring-stone-800\";\r\n    case Colors.RED:\r\n      return \"ring-red-800\";\r\n    case Colors.ORANGE:\r\n      return \"ring-orange-800\";\r\n    case Colors.AMBER:\r\n      return \"ring-amber-800\";\r\n    case Colors.YELLOW:\r\n      return \"ring-yellow-800\";\r\n    case Colors.LIME:\r\n      return \"ring-lime-800\";\r\n    case Colors.GREEN:\r\n      return \"ring-green-800\";\r\n    case Colors.EMERALD:\r\n      return \"ring-emerald-800\";\r\n    case Colors.TEAL:\r\n      return \"ring-teal-800\";\r\n    case Colors.CYAN:\r\n      return \"ring-cyan-800\";\r\n    case Colors.SKY:\r\n      return \"ring-sky-800\";\r\n    case Colors.BLUE:\r\n      return \"ring-blue-800\";\r\n    case Colors.INDIGO:\r\n      return \"ring-indigo-800\";\r\n    case Colors.VIOLET:\r\n      return \"ring-violet-800\";\r\n    case Colors.PURPLE:\r\n      return \"ring-purple-800\";\r\n    case Colors.FUCHSIA:\r\n      return \"ring-fuchsia-800\";\r\n    case Colors.PINK:\r\n      return \"ring-pink-800\";\r\n    case Colors.ROSE:\r\n      return \"ring-rose-800\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getRing800,\r\n};\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nexport function getFrom700To800(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"from-gray-700 to-gray-800\";\r\n    case Colors.SLATE:\r\n      return \"from-slate-700 to-slate-800\";\r\n    case Colors.GRAY:\r\n      return \"from-gray-700 to-gray-800\";\r\n    case Colors.NEUTRAL:\r\n      return \"from-neutral-700 to-neutral-800\";\r\n    case Colors.STONE:\r\n      return \"from-stone-700 to-stone-800\";\r\n    case Colors.RED:\r\n      return \"from-red-700 to-red-800\";\r\n    case Colors.ORANGE:\r\n      return \"from-orange-700 to-orange-800\";\r\n    case Colors.AMBER:\r\n      return \"from-amber-700 to-amber-800\";\r\n    case Colors.YELLOW:\r\n      return \"from-yellow-700 to-yellow-800\";\r\n    case Colors.LIME:\r\n      return \"from-lime-700 to-lime-800\";\r\n    case Colors.GREEN:\r\n      return \"from-green-700 to-green-800\";\r\n    case Colors.EMERALD:\r\n      return \"from-emerald-700 to-emerald-800\";\r\n    case Colors.TEAL:\r\n      return \"from-teal-700 to-teal-800\";\r\n    case Colors.CYAN:\r\n      return \"from-cyan-700 to-cyan-800\";\r\n    case Colors.SKY:\r\n      return \"from-sky-700 to-sky-800\";\r\n    case Colors.BLUE:\r\n      return \"from-blue-700 to-blue-800\";\r\n    case Colors.INDIGO:\r\n      return \"from-indigo-700 to-indigo-800\";\r\n    case Colors.VIOLET:\r\n      return \"from-violet-700 to-violet-800\";\r\n    case Colors.PURPLE:\r\n      return \"from-purple-700 to-purple-800\";\r\n    case Colors.FUCHSIA:\r\n      return \"from-fuchsia-700 to-fuchsia-800\";\r\n    case Colors.PINK:\r\n      return \"from-pink-700 to-pink-800\";\r\n    case Colors.ROSE:\r\n      return \"from-rose-700 to-rose-800\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getFrom700To800,\r\n};\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getText600(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"focus-within:text-gray-600\";\r\n    case Colors.SLATE:\r\n      return \"focus-within:text-slate-600\";\r\n    case Colors.GRAY:\r\n      return \"focus-within:text-gray-600\";\r\n    case Colors.NEUTRAL:\r\n      return \"focus-within:text-neutral-600\";\r\n    case Colors.STONE:\r\n      return \"focus-within:text-stone-600\";\r\n    case Colors.RED:\r\n      return \"focus-within:text-red-600\";\r\n    case Colors.ORANGE:\r\n      return \"focus-within:text-orange-600\";\r\n    case Colors.AMBER:\r\n      return \"focus-within:text-amber-600\";\r\n    case Colors.YELLOW:\r\n      return \"focus-within:text-yellow-600\";\r\n    case Colors.LIME:\r\n      return \"focus-within:text-lime-600\";\r\n    case Colors.GREEN:\r\n      return \"focus-within:text-green-600\";\r\n    case Colors.EMERALD:\r\n      return \"focus-within:text-emerald-600\";\r\n    case Colors.TEAL:\r\n      return \"focus-within:text-teal-600\";\r\n    case Colors.CYAN:\r\n      return \"focus-within:text-cyan-600\";\r\n    case Colors.SKY:\r\n      return \"focus-within:text-sky-600\";\r\n    case Colors.BLUE:\r\n      return \"focus-within:text-blue-600\";\r\n    case Colors.INDIGO:\r\n      return \"focus-within:text-indigo-600\";\r\n    case Colors.VIOLET:\r\n      return \"focus-within:text-violet-600\";\r\n    case Colors.PURPLE:\r\n      return \"focus-within:text-purple-600\";\r\n    case Colors.FUCHSIA:\r\n      return \"focus-within:text-fuchsia-600\";\r\n    case Colors.PINK:\r\n      return \"focus-within:text-pink-600\";\r\n    case Colors.ROSE:\r\n      return \"focus-within:text-rose-600\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getText600,\r\n};\r\n", "import { ReactNode } from \"react\";\r\nimport { Link } from \"@remix-run/react\";\r\n\r\ninterface Props {\r\n  title: ReactNode;\r\n  text?: ReactNode;\r\n  redirect?: string;\r\n  children?: ReactNode;\r\n}\r\n\r\nexport default function WarningBanner({ title = \"Warning\", text = \"\", redirect, children }: Props) {\r\n  return (\r\n    <div className=\"not-prose rounded-md border border-yellow-400 bg-yellow-50\">\r\n      <div className=\"rounded-md bg-yellow-50 p-4\">\r\n        <div className=\"flex\">\r\n          <div className=\"flex-shrink-0\">\r\n            <svg className=\"h-5 w-5 text-yellow-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </div>\r\n\r\n          <div className=\"ml-3\">\r\n            <h3 className=\"text-sm font-medium leading-5 text-yellow-800\">{title}</h3>\r\n            <div className=\"mt-2 text-sm leading-5 text-yellow-700\">\r\n              <div>\r\n                {text}\r\n                {children}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { Link, useParams } from \"@remix-run/react\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\nimport RightIcon from \"../icons/RightIcon\";\r\n\r\ninterface MenuItem {\r\n  title: string;\r\n  routePath?: string;\r\n}\r\n\r\ninterface Props {\r\n  menu: MenuItem[];\r\n  className?: string;\r\n  home?: string;\r\n}\r\n\r\nexport default function BreadcrumbSimple({ menu = [], className = \"\", home = \"\" }: Props) {\r\n  const params = useParams();\r\n  return (\r\n    <nav className={clsx(\"not-prose flex truncate\", className)} aria-label=\"Breadcrumb\">\r\n      <ol className=\"flex items-center space-x-1\">\r\n        {home && (\r\n          <li>\r\n            <div>\r\n              <Link to={home.length > 0 ? home : UrlUtils.currentTenantUrl(params, \"dashboard\")} className=\"text-gray-300 hover:text-gray-400\">\r\n                <svg className=\"h-4 w-4 flex-shrink-0\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                  <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\" />\r\n                </svg>\r\n                <span className=\"sr-only\">Home</span>\r\n              </Link>\r\n            </div>\r\n          </li>\r\n        )}\r\n        {menu.map((item, idx) => (\r\n          <li key={item.title}>\r\n            <div className=\"flex items-center\">\r\n              {(idx > 0 || home) && <RightIcon className=\"h-4 w-4 flex-shrink-0 text-gray-400\" />}\r\n              {item.routePath ? (\r\n                <Link to={item.routePath} className={clsx(\"select-none text-sm font-normal text-gray-400 hover:text-gray-600\", home && \"ml-1\")}>\r\n                  {item.title}\r\n                </Link>\r\n              ) : (\r\n                <span className=\"ml-1 select-none text-sm font-normal text-gray-400\">{item.title}</span>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ol>\r\n    </nav>\r\n  );\r\n}\r\n", "import type { Params } from \"react-router\";\r\n\r\nconst stripTrailingSlash = (str: string) => {\r\n  return str.endsWith(\"/\") ? str.slice(0, -1) : str;\r\n};\r\n\r\nconst currentTenantUrl = (params: Params, path?: string) => {\r\n  const { tenant } = params;\r\n  if (path) {\r\n    const appPath = path.startsWith(\"/\") ? path.substring(1, path.length - 1) : path;\r\n    // console.log({ appPath });\r\n    return `/app/${tenant}/${appPath}`;\r\n  }\r\n  return `/app/${tenant}/`;\r\n};\r\n\r\nconst currentEntityUrl = (params: Params) => {\r\n  const currentTenant = stripTrailingSlash(currentTenantUrl(params));\r\n  return `${currentTenant}/${params.entity}`;\r\n};\r\n\r\nconst replaceVariables = (params: Params, path?: string) => {\r\n  return path?.replace(\":tenant\", params.tenant ?? \"\");\r\n};\r\n\r\n// https://mhagemann.medium.com/the-ultimate-way-to-slugify-a-url-string-in-javascript-b8e4a0d849e1\r\nconst slugify = (str: string, max: number = 100) => {\r\n  const a = \"\u00E0\u00E1\u00E2\u00E4\u00E6\u00E3\u00E5\u0101\u0103\u0105\u00E7\u0107\u010D\u0111\u010F\u00E8\u00E9\u00EA\u00EB\u0113\u0117\u0119\u011B\u011F\u01F5\u1E27\u00EE\u00EF\u00ED\u012B\u012F\u00EC\u0131\u0130\u0142\u1E3F\u00F1\u0144\u01F9\u0148\u00F4\u00F6\u00F2\u00F3\u0153\u00F8\u014D\u00F5\u0151\u1E55\u0155\u0159\u00DF\u015B\u0161\u015F\u0219\u0165\u021B\u00FB\u00FC\u00F9\u00FA\u016B\u01D8\u016F\u0171\u0173\u1E83\u1E8D\u00FF\u00FD\u017E\u017A\u017C\u00B7/_,:;\";\r\n  const b = \"aaaaaaaaaacccddeeeeeeeegghiiiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------\";\r\n  const p = new RegExp(a.split(\"\").join(\"|\"), \"g\");\r\n\r\n  return (\r\n    str\r\n      .toString()\r\n      .toLowerCase()\r\n      .replace(/\\s+/g, \"-\") // Replace spaces with -\r\n      .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\r\n      .replace(/&/g, \"-and-\") // Replace & with 'and'\r\n      // .replace(/[^\\w\\-]+/g, \"\") // Remove all non-word characters\r\n      // eslint-disable-next-line no-useless-escape\r\n      .replace(/\\-\\-+/g, \"-\") // Replace multiple - with single -\r\n      .replace(/^-+/, \"\") // Trim - from start of text\r\n      .replace(/-+$/, \"\")\r\n  ); // Trim - from end of text\r\n};\r\n\r\nfunction getParentRoute(pathname: string) {\r\n  const url = stripTrailingSlash(pathname);\r\n  const parentRoute = url.substring(0, url.lastIndexOf(\"/\"));\r\n  return parentRoute;\r\n}\r\n\r\nfunction getModulePath(params: Params, path: string) {\r\n  if (params.tenant) {\r\n    if (path.startsWith(\"integrations\")) {\r\n      return `/app/${params.tenant}/settings/${path}`;\r\n    } else if (path.startsWith(\"entities\")) {\r\n      return `/app/${params.tenant}/settings/${path}`;\r\n    }\r\n    return `/app/${params.tenant}/${path}`;\r\n  }\r\n  return `/admin/${path}`;\r\n}\r\n\r\nexport default {\r\n  currentTenantUrl,\r\n  currentEntityUrl,\r\n  stripTrailingSlash,\r\n  slugify,\r\n  replaceVariables,\r\n  getParentRoute,\r\n  getModulePath,\r\n};\r\n", "export default function RightIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import type { KnowledgeBaseDto } from \"../../dtos/KnowledgeBaseDto\";\r\nimport type { KbCategoryDto } from \"../../dtos/KbCategoryDto\";\r\nimport BreadcrumbSimple from \"~/components/ui/breadcrumbs/BreadcrumbSimple\";\r\nimport clsx from \"clsx\";\r\nimport { Link, useParams } from \"@remix-run/react\";\r\nimport KbArticlesBySection from \"../articles/KbArticlesBySection\";\r\nimport KnowledgeBaseUtils from \"../../utils/KnowledgeBaseUtils\";\r\n\r\nexport default function KbCategory({ kb, item, allCategories }: { kb: KnowledgeBaseDto; item: KbCategoryDto; allCategories: KbCategoryDto[] }) {\r\n  const params = useParams();\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <BreadcrumbSimple\r\n        menu={[\r\n          {\r\n            title: kb.title,\r\n            routePath: KnowledgeBaseUtils.getKbUrl({ kb, params }),\r\n          },\r\n          {\r\n            title: item.title ?? \"\",\r\n            routePath: item.href,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <div className=\"flex flex-col space-y-6\">\r\n        <div className=\"flex items-center space-x-8\">\r\n          <div className=\"flex flex-col w-full\">\r\n            <div className=\"flex space-x-3 items-center\">\r\n              {item.icon && (\r\n                <div className=\"flex-shrink-0\">\r\n                  {item.icon.startsWith(\"<svg\") ? (\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: item.icon.replace(\"<svg\", `<svg class='${\"h-7 w-7 text-gray-400 group-hover:text-gray-700\"}'`) ?? \"\",\r\n                      }}\r\n                    />\r\n                  ) : item.icon.includes(\"http\") ? (\r\n                    <img className=\"h-7 w-7\" src={item.icon} alt={item.title} />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n              )}\r\n              <div className=\"text-xl md:text-2xl font-bold group-hover:text-gray-700\">{item.title}</div>\r\n            </div>\r\n            <div className=\"mt-2 text-gray-700 font-normal\">{item.description}</div>\r\n            {/* <div className=\"mt-6 flex items-center space-x-2 justify-between\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"text-sm\">\r\n                  {item.articles.length} <span>{item.articles.length === 1 ? \"article\" : \"articles\"}</span>\r\n                </div>\r\n              </div>\r\n              <div className=\"text-sm text-gray-400\">{item.version}</div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"border-b border-gray-200\"></div>\r\n\r\n      <div className=\"grid grid-cols-12 gap-8\">\r\n        <div className=\"hidden md:block col-span-3 space-y-3\">\r\n          <div className=\"font-bold text text-gray-800\">Categories</div>\r\n          <div className=\"space-y-1\">\r\n            {allCategories.map((category) => {\r\n              return (\r\n                <Link to={category.href} key={category.title}>\r\n                  <div\r\n                    className={clsx(\r\n                      \"rounded-md border border-transparent group p-2\",\r\n                      category.slug === item.slug ? \"bg-slate-200 font-bold\" : \"hover:bg-slate-100\"\r\n                    )}\r\n                  >\r\n                    <div className=\"text-sm\">{category.title}</div>\r\n                  </div>\r\n                </Link>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-span-12 md:col-span-9 pt-2\">\r\n          <KbArticlesBySection kb={kb} item={item} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { MouseEventHandler, ReactNode } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport LinkOrAhref from \"./LinkOrAhref\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  to?: string;\r\n  target?: undefined | \"_blank\";\r\n  disabled?: boolean;\r\n  destructive?: boolean;\r\n  children: ReactNode;\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nexport default function ButtonSecondary({ className = \"\", type = \"button\", onClick, disabled, destructive, to, target, children }: Props) {\r\n  return (\r\n    <span>\r\n      {(() => {\r\n        if (!to || disabled) {\r\n          return (\r\n            <button\r\n              onClick={onClick}\r\n              type={type}\r\n              disabled={disabled}\r\n              className={clsx(\r\n                className,\r\n                \"inline-flex items-center space-x-2 rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium shadow-sm focus:border-accent-300 focus:outline-none focus:ring-2\",\r\n                disabled && \"cursor-not-allowed opacity-75\",\r\n                !destructive && \"text-accent-700\",\r\n                destructive && \"text-red-700\",\r\n                !disabled && !destructive && !className && \"hover:border-accent-300 hover:text-accent-900 focus:ring-accent-500\",\r\n                !disabled && destructive && \"hover:bg-red-50 focus:ring-red-500\"\r\n              )}\r\n            >\r\n              {children}\r\n            </button>\r\n          );\r\n        } else {\r\n          return (\r\n            <LinkOrAhref\r\n              to={to}\r\n              target={target}\r\n              className={clsx(\r\n                className,\r\n                \"inline-flex items-center space-x-2 rounded-md border border-gray-300 bg-white px-3 py-2 text-sm font-medium shadow-sm focus:border-accent-300 focus:outline-none focus:ring-2\",\r\n                disabled && \"cursor-not-allowed opacity-75\",\r\n                !destructive && \"text-accent-700\",\r\n                destructive && \"text-red-700\",\r\n                !disabled && !destructive && !className && \"hover:border-accent-300 hover:text-accent-900 focus:ring-accent-500\",\r\n                !disabled && destructive && \"hover:bg-red-50 focus:ring-red-500\"\r\n              )}\r\n            >\r\n              {children}\r\n            </LinkOrAhref>\r\n          );\r\n        }\r\n      })()}\r\n    </span>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { Fragment, ReactNode } from \"react\";\r\n\r\ninterface Props {\r\n  to: string;\r\n  children: ReactNode;\r\n  className: string;\r\n  target?: undefined | \"_blank\";\r\n  role?: string;\r\n  rel?: string;\r\n  reloadDocument?: boolean;\r\n}\r\nexport default function LinkOrAhref({ to, target, children, className, role, rel, reloadDocument }: Props) {\r\n  return (\r\n    <Fragment>\r\n      {to.startsWith(\"http\") ? (\r\n        <a href={to} target={target} className={className} role={role} rel={rel}>\r\n          {children}\r\n        </a>\r\n      ) : (\r\n        <Link reloadDocument={reloadDocument} to={to} target={target} className={className} role={role}>\r\n          {children}\r\n        </Link>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n", "export default function IconEmptyResults({ className }: { className: string }) {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      fill=\"currentColor\"\r\n      id=\"f20e0c25-d928-42cc-98d1-13cc230663ea\"\r\n      data-name=\"Layer 1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n      viewBox=\"0 0 820.16 780.81\"\r\n    >\r\n      <defs>\r\n        <linearGradient\r\n          id=\"07332201-7176-49c2-9908-6dc4a39c4716\"\r\n          x1=\"539.63\"\r\n          y1=\"734.6\"\r\n          x2=\"539.63\"\r\n          y2=\"151.19\"\r\n          gradientTransform=\"translate(-3.62 1.57)\"\r\n          gradientUnits=\"userSpaceOnUse\"\r\n        >\r\n          <stop offset=\"0\" stopColor=\"gray\" stopOpacity=\"0.25\" />\r\n          <stop offset=\"0.54\" stopColor=\"gray\" stopOpacity=\"0.12\" />\r\n          <stop offset=\"1\" stopColor=\"gray\" stopOpacity=\"0.1\" />\r\n        </linearGradient>\r\n        <linearGradient\r\n          id=\"0ee1ab3f-7ba2-4205-9d4a-9606ad702253\"\r\n          x1=\"540.17\"\r\n          y1=\"180.2\"\r\n          x2=\"540.17\"\r\n          y2=\"130.75\"\r\n          gradientTransform=\"translate(-63.92 7.85)\"\r\n          xlinkHref=\"#07332201-7176-49c2-9908-6dc4a39c4716\"\r\n        />\r\n        <linearGradient\r\n          id=\"abca9755-bed1-4a97-b027-7f02ee3ffa09\"\r\n          x1=\"540.17\"\r\n          y1=\"140.86\"\r\n          x2=\"540.17\"\r\n          y2=\"82.43\"\r\n          gradientTransform=\"translate(-84.51 124.6) rotate(-12.11)\"\r\n          xlinkHref=\"#07332201-7176-49c2-9908-6dc4a39c4716\"\r\n        />\r\n        <linearGradient\r\n          id=\"2632d424-e666-4ee4-9508-a494957e14ab\"\r\n          x1=\"476.4\"\r\n          y1=\"710.53\"\r\n          x2=\"476.4\"\r\n          y2=\"127.12\"\r\n          gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\"\r\n          xlinkHref=\"#07332201-7176-49c2-9908-6dc4a39c4716\"\r\n        />\r\n        <linearGradient\r\n          id=\"97571ef7-1c83-4e06-b701-c2e47e77dca3\"\r\n          x1=\"476.94\"\r\n          y1=\"156.13\"\r\n          x2=\"476.94\"\r\n          y2=\"106.68\"\r\n          gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\"\r\n          xlinkHref=\"#07332201-7176-49c2-9908-6dc4a39c4716\"\r\n        />\r\n        <linearGradient\r\n          id=\"7d32e13e-a0c7-49c4-af0e-066a2f8cb76e\"\r\n          x1=\"666.86\"\r\n          y1=\"176.39\"\r\n          x2=\"666.86\"\r\n          y2=\"117.95\"\r\n          gradientTransform=\"matrix(1, 0, 0, 1, 0, 0)\"\r\n          xlinkHref=\"#07332201-7176-49c2-9908-6dc4a39c4716\"\r\n        />\r\n      </defs>\r\n      <title />\r\n      <rect x=\"317.5\" y=\"142.55\" width=\"437.02\" height=\"603.82\" transform=\"translate(-271.22 62.72) rotate(-12.11)\" fill=\"#e0e0e0\" />\r\n      <g opacity=\"0.5\">\r\n        <rect\r\n          x=\"324.89\"\r\n          y=\"152.76\"\r\n          width=\"422.25\"\r\n          height=\"583.41\"\r\n          transform=\"translate(-271.22 62.72) rotate(-12.11)\"\r\n          fill=\"url(#07332201-7176-49c2-9908-6dc4a39c4716)\"\r\n        />\r\n      </g>\r\n      <rect x=\"329.81\" y=\"157.1\" width=\"411.5\" height=\"570.52\" transform=\"translate(-270.79 62.58) rotate(-12.11)\" fill=\"#fafafa\" />\r\n      <rect\r\n        x=\"374.18\"\r\n        y=\"138.6\"\r\n        width=\"204.14\"\r\n        height=\"49.45\"\r\n        transform=\"translate(-213.58 43.93) rotate(-12.11)\"\r\n        fill=\"url(#0ee1ab3f-7ba2-4205-9d4a-9606ad702253)\"\r\n      />\r\n      <path\r\n        d=\"M460.93,91.9c-15.41,3.31-25.16,18.78-21.77,34.55s18.62,25.89,34,22.58,25.16-18.78,21.77-34.55S476.34,88.59,460.93,91.9ZM470.6,137A16.86,16.86,0,1,1,483.16,117,16.66,16.66,0,0,1,470.6,137Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        fill=\"url(#abca9755-bed1-4a97-b027-7f02ee3ffa09)\"\r\n      />\r\n      <rect x=\"375.66\" y=\"136.55\" width=\"199.84\" height=\"47.27\" transform=\"translate(-212.94 43.72) rotate(-12.11)\" className=\"text-theme-700\" />\r\n      <path\r\n        d=\"M460.93,91.9a27.93,27.93,0,1,0,33.17,21.45A27.93,27.93,0,0,0,460.93,91.9ZM470.17,135a16.12,16.12,0,1,1,12.38-19.14A16.12,16.12,0,0,1,470.17,135Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        className=\"text-theme-700\"\r\n      />\r\n      <rect x=\"257.89\" y=\"116.91\" width=\"437.02\" height=\"603.82\" fill=\"#e0e0e0\" />\r\n      <g opacity=\"0.5\">\r\n        <rect x=\"265.28\" y=\"127.12\" width=\"422.25\" height=\"583.41\" fill=\"url(#2632d424-e666-4ee4-9508-a494957e14ab)\" />\r\n      </g>\r\n      <rect x=\"270.65\" y=\"131.42\" width=\"411.5\" height=\"570.52\" fill=\"#fff\" />\r\n      <rect x=\"374.87\" y=\"106.68\" width=\"204.14\" height=\"49.45\" fill=\"url(#97571ef7-1c83-4e06-b701-c2e47e77dca3)\" />\r\n      <path\r\n        d=\"M666.86,118c-15.76,0-28.54,13.08-28.54,29.22s12.78,29.22,28.54,29.22,28.54-13.08,28.54-29.22S682.62,118,666.86,118Zm0,46.08a16.86,16.86,0,1,1,16.46-16.86A16.66,16.66,0,0,1,666.86,164Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        fill=\"url(#7d32e13e-a0c7-49c4-af0e-066a2f8cb76e)\"\r\n      />\r\n      <rect x=\"377.02\" y=\"104.56\" width=\"199.84\" height=\"47.27\" className=\"text-theme-700\" />\r\n      <path\r\n        d=\"M666.86,118a27.93,27.93,0,1,0,27.93,27.93A27.93,27.93,0,0,0,666.86,118Zm0,44.05A16.12,16.12,0,1,1,683,145.89,16.12,16.12,0,0,1,666.86,162Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        className=\"text-theme-700\"\r\n      />\r\n      <g opacity=\"0.5\">\r\n        <rect x=\"15.27\" y=\"737.05\" width=\"3.76\" height=\"21.33\" fill=\"#47e6b1\" />\r\n        <rect x=\"205.19\" y=\"796.65\" width=\"3.76\" height=\"21.33\" transform=\"translate(824.47 540.65) rotate(90)\" fill=\"#47e6b1\" />\r\n      </g>\r\n      <g opacity=\"0.5\">\r\n        <rect x=\"451.49\" width=\"3.76\" height=\"21.33\" fill=\"#47e6b1\" />\r\n        <rect x=\"641.4\" y=\"59.59\" width=\"3.76\" height=\"21.33\" transform=\"translate(523.63 -632.62) rotate(90)\" fill=\"#47e6b1\" />\r\n      </g>\r\n      <path\r\n        d=\"M961,832.15a4.61,4.61,0,0,1-2.57-5.57,2.22,2.22,0,0,0,.1-.51h0a2.31,2.31,0,0,0-4.15-1.53h0a2.22,2.22,0,0,0-.26.45,4.61,4.61,0,0,1-5.57,2.57,2.22,2.22,0,0,0-.51-.1h0a2.31,2.31,0,0,0-1.53,4.15h0a2.22,2.22,0,0,0,.45.26,4.61,4.61,0,0,1,2.57,5.57,2.22,2.22,0,0,0-.1.51h0a2.31,2.31,0,0,0,4.15,1.53h0a2.22,2.22,0,0,0,.26-.45,4.61,4.61,0,0,1,5.57-2.57,2.22,2.22,0,0,0,.51.1h0a2.31,2.31,0,0,0,1.53-4.15h0A2.22,2.22,0,0,0,961,832.15Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        fill=\"#4d8af0\"\r\n        opacity=\"0.5\"\r\n      />\r\n      <path\r\n        d=\"M326.59,627.09a4.61,4.61,0,0,1-2.57-5.57,2.22,2.22,0,0,0,.1-.51h0a2.31,2.31,0,0,0-4.15-1.53h0a2.22,2.22,0,0,0-.26.45,4.61,4.61,0,0,1-5.57,2.57,2.22,2.22,0,0,0-.51-.1h0a2.31,2.31,0,0,0-1.53,4.15h0a2.22,2.22,0,0,0,.45.26,4.61,4.61,0,0,1,2.57,5.57,2.22,2.22,0,0,0-.1.51h0a2.31,2.31,0,0,0,4.15,1.53h0a2.22,2.22,0,0,0,.26-.45A4.61,4.61,0,0,1,325,631.4a2.22,2.22,0,0,0,.51.1h0a2.31,2.31,0,0,0,1.53-4.15h0A2.22,2.22,0,0,0,326.59,627.09Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        fill=\"#fdd835\"\r\n        opacity=\"0.5\"\r\n      />\r\n      <path\r\n        d=\"M855,127.77a4.61,4.61,0,0,1-2.57-5.57,2.22,2.22,0,0,0,.1-.51h0a2.31,2.31,0,0,0-4.15-1.53h0a2.22,2.22,0,0,0-.26.45,4.61,4.61,0,0,1-5.57,2.57,2.22,2.22,0,0,0-.51-.1h0a2.31,2.31,0,0,0-1.53,4.15h0a2.22,2.22,0,0,0,.45.26,4.61,4.61,0,0,1,2.57,5.57,2.22,2.22,0,0,0-.1.51h0a2.31,2.31,0,0,0,4.15,1.53h0a2.22,2.22,0,0,0,.26-.45,4.61,4.61,0,0,1,5.57-2.57,2.22,2.22,0,0,0,.51.1h0a2.31,2.31,0,0,0,1.53-4.15h0A2.22,2.22,0,0,0,855,127.77Z\"\r\n        transform=\"translate(-189.92 -59.59)\"\r\n        fill=\"#fdd835\"\r\n        opacity=\"0.5\"\r\n      />\r\n      <circle cx=\"812.64\" cy=\"314.47\" r=\"7.53\" fill=\"#f55f44\" opacity=\"0.5\" />\r\n      <circle cx=\"230.73\" cy=\"746.65\" r=\"7.53\" fill=\"#f55f44\" opacity=\"0.5\" />\r\n      <circle cx=\"735.31\" cy=\"477.23\" r=\"7.53\" fill=\"#f55f44\" opacity=\"0.5\" />\r\n      <circle cx=\"87.14\" cy=\"96.35\" r=\"7.53\" fill=\"#4d8af0\" opacity=\"0.5\" />\r\n      <circle cx=\"7.53\" cy=\"301.76\" r=\"7.53\" fill=\"#47e6b1\" opacity=\"0.5\" />\r\n    </svg>\r\n  );\r\n}\r\n", "import ButtonSecondary from \"../buttons/ButtonSecondary\";\r\nimport IconEmptyResults from \"~/assets/icons/IconEmptyResults\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface Captions {\r\n  description?: string;\r\n  thereAreNo?: string;\r\n  new?: string;\r\n}\r\n\r\ninterface Props {\r\n  className?: string;\r\n  captions: Captions;\r\n  to?: string;\r\n  icon?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport default function EmptyState({ className, captions, to, icon, onClick }: Props) {\r\n  return (\r\n    <div className={clsx(className, \"px-1.6 rounded-md border-2 border-dashed border-gray-200 py-16 text-center text-gray-900\")}>\r\n      <IconEmptyResults className=\"mx-auto w-10\" />\r\n      <h3 className=\"mt-2 text-sm font-medium\">{captions.thereAreNo}</h3>\r\n      <p className=\"mt-1 text-sm text-gray-500\">{captions.description}</p>\r\n      {captions.new && (\r\n        <div className=\"mt-6\">\r\n          {(() => {\r\n            if (to) {\r\n              return (\r\n                <ButtonSecondary to={to}>\r\n                  {(() => {\r\n                    if (icon === \"plus\") {\r\n                      return (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\r\n                        </svg>\r\n                      );\r\n                    } else if (icon === \"refresh\") {\r\n                      return (\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth=\"2\"\r\n                            d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n                          />\r\n                        </svg>\r\n                      );\r\n                    } else {\r\n                      return <div></div>;\r\n                    }\r\n                  })()}\r\n                  <div>{captions.new}</div>\r\n                </ButtonSecondary>\r\n              );\r\n            } else {\r\n              return (\r\n                <ButtonSecondary onClick={onClick} type=\"button\">\r\n                  <div>\r\n                    {icon === \"plus\" && (\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\r\n                      </svg>\r\n                    )}\r\n                  </div>\r\n                  <div>{captions.new}</div>\r\n                </ButtonSecondary>\r\n              );\r\n            }\r\n          })()}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport RightIcon from \"~/components/icons/RightIcon\";\r\nimport clsx from \"clsx\";\r\nimport ColorHoverUtils from \"~/utils/shared/colors/ColorHoverUtils\";\r\nimport type { KnowledgeBaseDto } from \"../../dtos/KnowledgeBaseDto\";\r\n\r\nexport default function KbArticles({\r\n  kb,\r\n  items,\r\n}: {\r\n  kb: KnowledgeBaseDto;\r\n  items: {\r\n    order: number;\r\n    title: string;\r\n    description: string;\r\n    href: string;\r\n    sectionId: string | null;\r\n  }[];\r\n}) {\r\n  return (\r\n    <div className=\"bg-white border border-gray-300 rounded-md py-3\">\r\n      {items.map((item) => {\r\n        return (\r\n          <div key={item.title} className={clsx(\"group\", ColorHoverUtils.getBorder500(kb.color))}>\r\n            <Link to={item.href}>\r\n              <div className=\"flex justify-between space-x-2 px-6 py-3 hover:bg-gray-50 items-center\">\r\n                <div className=\"\">\r\n                  <div className={clsx(\"text-gray-600 group-hover:text-gray-900\")}>{item.title}</div>\r\n                </div>\r\n                <RightIcon className={clsx(\"h-5 w-5 text-gray-300 flex-shrink-0 group-hover:text-gray-600\")} />\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n", "export default function RightIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nfunction getBorder500(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"border-gray-500\";\r\n    case Colors.SLATE:\r\n      return \"border-slate-500\";\r\n    case Colors.GRAY:\r\n      return \"border-gray-500\";\r\n    case Colors.NEUTRAL:\r\n      return \"border-neutral-500\";\r\n    case Colors.STONE:\r\n      return \"border-stone-500\";\r\n    case Colors.RED:\r\n      return \"border-red-500\";\r\n    case Colors.ORANGE:\r\n      return \"border-orange-500\";\r\n    case Colors.AMBER:\r\n      return \"border-amber-500\";\r\n    case Colors.YELLOW:\r\n      return \"border-yellow-500\";\r\n    case Colors.LIME:\r\n      return \"border-lime-500\";\r\n    case Colors.GREEN:\r\n      return \"border-green-500\";\r\n    case Colors.EMERALD:\r\n      return \"border-emerald-500\";\r\n    case Colors.TEAL:\r\n      return \"border-teal-500\";\r\n    case Colors.CYAN:\r\n      return \"border-cyan-500\";\r\n    case Colors.SKY:\r\n      return \"border-sky-500\";\r\n    case Colors.BLUE:\r\n      return \"border-blue-500\";\r\n    case Colors.INDIGO:\r\n      return \"border-indigo-500\";\r\n    case Colors.VIOLET:\r\n      return \"border-violet-500\";\r\n    case Colors.PURPLE:\r\n      return \"border-purple-500\";\r\n    case Colors.FUCHSIA:\r\n      return \"border-fuchsia-500\";\r\n    case Colors.PINK:\r\n      return \"border-pink-500\";\r\n    case Colors.ROSE:\r\n      return \"border-rose-500\";\r\n  }\r\n}\r\n\r\nexport default {\r\n  getBorder500,\r\n};\r\n", "import EmptyState from \"~/components/ui/emptyState/EmptyState\";\r\nimport type { KbCategoryDto } from \"../../dtos/KbCategoryDto\";\r\nimport type { KbCategorySectionDto } from \"../../dtos/KbCategorySectionDto\";\r\nimport type { KnowledgeBaseDto } from \"../../dtos/KnowledgeBaseDto\";\r\nimport KbArticles from \"./KbArticles\";\r\n\r\nexport default function KbArticlesBySection({ kb, item }: { kb: KnowledgeBaseDto; item: KbCategoryDto }) {\r\n  // function getArticleSlug(item: KbArticleDto) {\r\n  //   return `/${kb.slug}/${item.language}/articles/${item.slug}-${item.id}`;\r\n  // }\r\n  function getSections() {\r\n    let sections: {\r\n      section: KbCategorySectionDto | null;\r\n      articles: {\r\n        order: number;\r\n        title: string;\r\n        description: string;\r\n        href: string;\r\n        sectionId: string | null;\r\n      }[];\r\n    }[] = [];\r\n    item.articles.forEach((article) => {\r\n      const section = item.sections.find((item) => item.id === article.sectionId) ?? null;\r\n      const sectionIndex = sections.findIndex((item) => item.section?.id === section?.id);\r\n      if (sectionIndex === -1) {\r\n        sections.push({\r\n          section,\r\n          articles: [article],\r\n        });\r\n      } else {\r\n        sections[sectionIndex].articles.push(article);\r\n      }\r\n    });\r\n    sections.forEach((item) => {\r\n      item.articles = item.articles.sort((a, b) => {\r\n        if (a.order && b.order) {\r\n          return a.order - b.order;\r\n        }\r\n        return 0;\r\n      });\r\n    });\r\n    sections = sections.sort((a, b) => {\r\n      if (a.section?.order && b.section?.order) {\r\n        return a.section.order - b.section.order;\r\n      }\r\n      return -1;\r\n    });\r\n    return sections;\r\n  }\r\n  return (\r\n    <div>\r\n      {item.articles.length === 0 ? (\r\n        <EmptyState className=\"bg-white\" captions={{ thereAreNo: \"No articles\" }} />\r\n      ) : (\r\n        <div className=\"space-y-6\">\r\n          {getSections().map((item) => {\r\n            return (\r\n              <div key={item.section?.id} className=\"space-y-3\">\r\n                {item.section && (\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"text-xl font-bold\">{item.section.title}</div>\r\n                  </div>\r\n                )}\r\n                <KbArticles kb={kb} items={item.articles} />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import ServerError from \"~/components/ServerError\";\r\nimport type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { defer, json, redirect } from \"@remix-run/node\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbHeader from \"~/modules/knowledgeBase/components/KbHeader\";\r\nimport type { KbArticleDto } from \"~/modules/knowledgeBase/dtos/KbArticleDto\";\r\nimport type { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KbArticle from \"~/modules/knowledgeBase/components/articles/KbArticle\";\r\nimport type { KbCategoryDto } from \"~/modules/knowledgeBase/dtos/KbCategoryDto\";\r\nimport type { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { createKnowledgeBaseArticleView, getArticleStateByUserAnalyticsId, voteArticle } from \"~/modules/knowledgeBase/db/kbAnalytics.db.server\";\r\nimport { getUserInfo } from \"~/utils/session/session.server\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  metatags?: MetaTagsDto;\r\n  kb: KnowledgeBaseDto;\r\n  item: {\r\n    article: KbArticleDto;\r\n    category: KbCategoryDto;\r\n  } | null;\r\n  userState: {\r\n    hasThumbsUp: boolean;\r\n    hasThumbsDown: boolean;\r\n  };\r\n};\r\nexport let loader = async ({ request, params }: LoaderArgs) => {\r\n  const userInfo = await getUserInfo(request);\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug!, enabled: true });\r\n  const item = await KnowledgeBaseService.getArticle({\r\n    kb,\r\n    slug: params.article ?? \"\",\r\n    params,\r\n  });\r\n  if (!item) {\r\n    return redirect(KnowledgeBaseUtils.getKbUrl({ kb, params }));\r\n  }\r\n\r\n  if (item?.article) {\r\n    await createKnowledgeBaseArticleView({ userAnalyticsId: userInfo.userAnalyticsId, articleId: item.article.id });\r\n  }\r\n  let userState = await getArticleStateByUserAnalyticsId({\r\n    userAnalyticsId: userInfo.userAnalyticsId,\r\n    articleId: item?.article.id ?? \"\",\r\n  });\r\n  const data: LoaderData = {\r\n    metatags: item?.article.metatags,\r\n    kb,\r\n    item,\r\n    userState,\r\n  };\r\n  return defer(data);\r\n};\r\n\r\nexport const action = async ({ request, params }: LoaderArgs) => {\r\n  const userInfo = await getUserInfo(request);\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\") as string;\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug!, enabled: true });\r\n  const item = await KnowledgeBaseService.getArticle({\r\n    kb,\r\n    slug: params.article ?? \"\",\r\n    params,\r\n  });\r\n  if (!item) {\r\n    return json({ error: \"Not found\" }, { status: 404 });\r\n  }\r\n  if (action === \"thumbsUp\") {\r\n    await voteArticle({ userAnalyticsId: userInfo.userAnalyticsId, articleId: item.article.id, type: \"up\" });\r\n    return json({ success: true });\r\n  } else if (action === \"thumbsDown\") {\r\n    await voteArticle({ userAnalyticsId: userInfo.userAnalyticsId, articleId: item.article.id, type: \"down\" });\r\n    return json({ success: true });\r\n  }\r\n\r\n  return json({ error: \"Invalid action\" }, { status: 400 });\r\n};\r\n\r\nexport const meta: V2_MetaFunction = ({ data }) => data?.metatags;\r\n\r\nexport default function Index() {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const submit = useSubmit();\r\n\r\n  function onAction(name: string) {\r\n    const form = new FormData();\r\n    form.set(\"action\", name);\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <KbHeader kb={data.kb} withTitleAndDescription={false} />\r\n\r\n      <div className=\"max-w-5xl mx-auto py-8 px-8\">\r\n        <div className=\"space-y-3\">\r\n          {!data.item ? (\r\n            <div>Not found</div>\r\n          ) : (\r\n            <KbArticle\r\n              kb={data.kb}\r\n              category={data.item.category}\r\n              item={data.item.article}\r\n              userState={{\r\n                hasThumbsUp: data.userState.hasThumbsUp,\r\n                hasThumbsDown: data.userState.hasThumbsDown,\r\n              }}\r\n              actions={{\r\n                onThumbsUp: () => onAction(\"thumbsUp\"),\r\n                onThumbsDown: () => onAction(\"thumbsDown\"),\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary() {\r\n  return <ServerError />;\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { marked } from \"marked\";\r\nimport ThumbsDownIcon from \"~/components/ui/icons/ThumbsDownIcon\";\r\nimport ThumbsDownIconFilled from \"~/components/ui/icons/ThumbsDownIconFilled\";\r\nimport ThumbsUpIcon from \"~/components/ui/icons/ThumbsUpIcon\";\r\nimport ThumbsUpIconFilled from \"~/components/ui/icons/ThumbsUpIconFilled\";\r\nimport { KbArticleDto } from \"~/modules/knowledgeBase/dtos/KbArticleDto\";\r\nimport DateUtils from \"~/utils/shared/DateUtils\";\r\n\r\nexport default function KbArticleContent({\r\n  item,\r\n  content,\r\n  actions,\r\n  userState,\r\n}: {\r\n  item: KbArticleDto;\r\n  content: string;\r\n  userState?: {\r\n    hasThumbsUp: boolean;\r\n    hasThumbsDown: boolean;\r\n  };\r\n  actions?: {\r\n    onThumbsUp: () => void;\r\n    onThumbsDown: () => void;\r\n  };\r\n}) {\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex flex-col space-y-6\">\r\n        <div className=\"flex items-center space-x-8\">\r\n          <div className=\"flex flex-col w-full\">\r\n            <div className=\"flex space-x-3 items-center\">\r\n              <div className=\"text-xl md:text-3xl font-bold group-hover:text-gray-700\">{item.title}</div>\r\n            </div>\r\n            <div className=\"mt-2 text-gray-700 font-light\">{item.description}</div>\r\n            <div className=\"flex justify-between space-x-2\">\r\n              <li className=\"flex items-center space-x-2 mt-5\">\r\n                {item.author && <img src={item.author.avatar} alt=\"\" className=\"h-8 w-8 rounded-full\" />}\r\n                <div>\r\n                  <dl className=\"whitespace-no-wrap text-sm font-medium leading-5\">\r\n                    <dt className=\"sr-only\">Author</dt>\r\n                    <dd className=\"text-gray-900 dark:text-white\">\r\n                      {item.author.firstName} {item.author.lastName}\r\n                    </dd>\r\n                  </dl>\r\n                  <dl className=\"whitespace-no-wrap text-xs leading-5\">{DateUtils.dateAgo(item.createdAt)}</dl>\r\n                </div>\r\n              </li>\r\n              {actions && (\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button type=\"button\" onClick={actions.onThumbsUp} className=\"flex items-center space-x-2  hover:text-gray-800 text-gray-500\">\r\n                    {userState?.hasThumbsUp ? <ThumbsUpIconFilled className=\"h-4 w-4\" /> : <ThumbsUpIcon className=\"h-4 w-4\" />}\r\n                  </button>\r\n                  <button type=\"button\" onClick={actions.onThumbsDown} className=\"flex items-center space-x-2  hover:text-gray-800 text-gray-500\">\r\n                    {userState?.hasThumbsDown ? <ThumbsDownIconFilled className=\"h-4 w-4\" /> : <ThumbsDownIcon className=\"h-4 w-4\" />}\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"border-b border-gray-200\"></div>\r\n\r\n      <div className=\"grid grid-cols-12 gap-8\">\r\n        <div className=\"col-span-9\">\r\n          <div className=\"prose\">\r\n            <div dangerouslySetInnerHTML={{ __html: marked(content) }} />\r\n          </div>\r\n        </div>\r\n        {item.relatedArticles.length > 0 && (\r\n          <div className=\"col-span-3 space-y-3 py-5\">\r\n            <div className=\"font-medium text-sm text-gray-600\">Related Articles</div>\r\n            <div className=\"space-y-2\">\r\n              {item.relatedArticles.map((x) => (\r\n                <Link to={x.href} key={x.href} className=\"flex items-center space-x-2 hover:underline\">\r\n                  <div className=\"text-sm\">{x.title}</div>\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "/**\n * marked v4.3.0 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    hooks: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n      const top = this.lexer.state.top;\n      this.lexer.state.top = true;\n      const tokens = this.lexer.blockTokens(text);\n      this.lexer.state.top = top;\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens,\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            nextLine = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(nextLine)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(nextLine)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n              itemContents += '\\n' + nextLine.slice(indent);\n            } else {\n              // not enough indentation\n              if (blankLine) {\n                break;\n              }\n\n              // paragraph continuation unless last line was a different block level element\n              if (line.search(/[^ ]/) >= 4) { // indented code block\n                break;\n              }\n              if (fencesBeginRegex.test(line)) {\n                break;\n              }\n              if (headingBeginRegex.test(line)) {\n                break;\n              }\n              if (hrRegex.test(line)) {\n                break;\n              }\n\n              itemContents += '\\n' + nextLine;\n            }\n\n            if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n            line = nextLine.slice(indent);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n        if (!list.loose) {\n          // Check if list should be loose\n          const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n          const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n\n          list.loose = hasMultipleLineBreaks;\n        }\n      }\n\n      // Set all items to loose if list is loose\n      if (list.loose) {\n        for (i = 0; i < l; i++) {\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n      const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href,\n        title\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        const raw = src.slice(0, lLength + match.index + (match[0].length - rDelim.length) + rLength);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = raw.slice(1, -1);\n          return {\n            type: 'em',\n            raw,\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = raw.slice(2, -2);\n        return {\n          type: 'strong',\n          raw,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + cap[0];\n        } else {\n          href = cap[0];\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^((?:.|\\n(?!\\n))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = { ...block };\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = {\n  ...block.normal,\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = {\n  ...block.normal,\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n};\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong                                      () Consume to delim     (1) #***                (2) a***#, a***                             (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^(?:[^_*\\\\]|\\\\.)*?\\_\\_(?:[^_*\\\\]|\\\\.)*?\\*(?:[^_*\\\\]|\\\\.)*?(?=\\_\\_)|(?:[^*\\\\]|\\\\.)+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|(?:[^punct*_\\s\\\\]|\\\\.)(\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^(?:[^_*\\\\]|\\\\.)*?\\*\\*(?:[^_*\\\\]|\\\\.)*?\\_(?:[^_*\\\\]|\\\\.)*?(?=\\*\\*)|(?:[^_\\\\]|\\\\.)+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|(?:[^punct*_\\s\\\\]|\\\\.)(\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n// lookbehind is not available on Safari as of version 16\n// inline.escapedEmSt = /(?<=(?:^|[^\\\\)(?:\\\\[^])*)\\\\[*_]/g;\ninline.escapedEmSt = /(?:^|[^\\\\])(?:\\\\\\\\)*\\\\[*_]/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = { ...inline };\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = {\n  ...inline.normal,\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n};\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = {\n  ...inline.normal,\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = {\n  ...inline.gfm,\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n};\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index + match[0].length - 2) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      this.tokenizer.rules.inline.escapedEmSt.lastIndex--;\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + href + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\nclass Hooks {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  static passThroughHooks = new Set([\n    'preprocess',\n    'postprocess'\n  ]);\n\n  /**\n   * Process markdown before marked\n   */\n  preprocess(markdown) {\n    return markdown;\n  }\n\n  /**\n   * Process HTML after marked is finished\n   */\n  postprocess(html) {\n    return html;\n  }\n}\n\nfunction onError(silent, async, callback) {\n  return (e) => {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n    if (silent) {\n      const msg = '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n      if (async) {\n        return Promise.resolve(msg);\n      }\n      if (callback) {\n        callback(null, msg);\n        return;\n      }\n      return msg;\n    }\n\n    if (async) {\n      return Promise.reject(e);\n    }\n    if (callback) {\n      callback(e);\n      return;\n    }\n    throw e;\n  };\n}\n\nfunction parseMarkdown(lexer, parser) {\n  return (src, opt, callback) => {\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    const origOpt = { ...opt };\n    opt = { ...marked.defaults, ...origOpt };\n    const throwError = onError(opt.silent, opt.async, callback);\n\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      return throwError(new Error('marked(): input parameter is undefined or null'));\n    }\n    if (typeof src !== 'string') {\n      return throwError(new Error('marked(): input parameter is of type '\n        + Object.prototype.toString.call(src) + ', string expected'));\n    }\n\n    checkSanitizeDeprecation(opt);\n\n    if (opt.hooks) {\n      opt.hooks.options = opt;\n    }\n\n    if (callback) {\n      const highlight = opt.highlight;\n      let tokens;\n\n      try {\n        if (opt.hooks) {\n          src = opt.hooks.preprocess(src);\n        }\n        tokens = lexer(src, opt);\n      } catch (e) {\n        return throwError(e);\n      }\n\n      const done = function(err) {\n        let out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n            out = parser(tokens, opt);\n            if (opt.hooks) {\n              out = opt.hooks.postprocess(out);\n            }\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n\n        return err\n          ? throwError(err)\n          : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n\n      if (!tokens.length) return done();\n\n      let pending = 0;\n      marked.walkTokens(tokens, function(token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(() => {\n            highlight(token.text, token.lang, function(err, code) {\n              if (err) {\n                return done(err);\n              }\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    if (opt.async) {\n      return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n        .then(src => lexer(src, opt))\n        .then(tokens => opt.walkTokens ? Promise.all(marked.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n        .then(tokens => parser(tokens, opt))\n        .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n        .catch(throwError);\n    }\n\n    try {\n      if (opt.hooks) {\n        src = opt.hooks.preprocess(src);\n      }\n      const tokens = lexer(src, opt);\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n      let html = parser(tokens, opt);\n      if (opt.hooks) {\n        html = opt.hooks.postprocess(html);\n      }\n      return html;\n    } catch (e) {\n      return throwError(e);\n    }\n  };\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  return parseMarkdown(Lexer.lex, Parser.parse)(src, opt, callback);\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  marked.defaults = { ...marked.defaults, ...opt };\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n\n  args.forEach((pack) => {\n    // copy options to new object\n    const opts = { ...pack };\n\n    // set async to true if it was set to true before\n    opts.async = marked.defaults.async || opts.async || false;\n\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers[ext.name];\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n      opts.extensions = extensions;\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse Hooks extensions --== //\n    if (pack.hooks) {\n      const hooks = marked.defaults.hooks || new Hooks();\n      for (const prop in pack.hooks) {\n        const prevHook = hooks[prop];\n        if (Hooks.passThroughHooks.has(prop)) {\n          hooks[prop] = (arg) => {\n            if (marked.defaults.async) {\n              return Promise.resolve(pack.hooks[prop].call(hooks, arg)).then(ret => {\n                return prevHook.call(hooks, ret);\n              });\n            }\n\n            const ret = pack.hooks[prop].call(hooks, arg);\n            return prevHook.call(hooks, ret);\n          };\n        } else {\n          hooks[prop] = (...args) => {\n            let ret = pack.hooks[prop].apply(hooks, args);\n            if (ret === false) {\n              ret = prevHook.apply(hooks, args);\n            }\n            return ret;\n          };\n        }\n      }\n      opts.hooks = hooks;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = parseMarkdown(Lexer.lexInline, Parser.parseInline);\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.Hooks = Hooks;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Hooks, Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n", "export default function ThumbsDownIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n      <path d=\"M 17 5 C 12.054688 5 8 9.054688 8 14 L 8 23.40625 C 8 25.300781 8.570313 27.121094 9.6875 28.6875 L 20.84375 44 C 20.867188 44.039063 20.910156 44.054688 20.9375 44.09375 C 21.691406 45.273438 22.824219 46 24 46 C 24.851563 46 25.789063 45.660156 26.59375 44.90625 C 27.398438 44.152344 28 42.949219 28 41.40625 C 28 40.285156 27.609375 39.667969 27.34375 38.875 C 27.042969 38.03125 26.0625 35.785156 25.125 33.65625 C 24.511719 32.265625 24.269531 31.746094 23.9375 31 C 25.800781 31 33.300781 30.996094 36.40625 30.90625 C 36.417969 30.90625 36.425781 30.90625 36.4375 30.90625 C 39.152344 30.890625 41 29.050781 41 27.09375 C 41 26.179688 40.835938 25.421875 40.75 24.90625 C 41.578125 24.472656 43 23.554688 43 21.3125 C 43 19.816406 42.308594 18.828125 41.625 18.15625 C 42.308594 17.546875 43 16.613281 43 15.1875 C 43 12.921875 41.566406 11.929688 40.59375 11.40625 C 40.800781 10.871094 41 10.167969 41 9.3125 C 41 8.277344 40.480469 7.261719 39.625 6.4375 C 38.769531 5.613281 37.515625 5 36 5 Z M 17 7 L 36 7 C 36.984375 7 37.730469 7.375 38.25 7.875 C 38.769531 8.375 39 9.046875 39 9.3125 C 39 10.5 38.46875 11.21875 38.46875 11.21875 C 38.28125 11.472656 38.226563 11.800781 38.320313 12.101563 C 38.410156 12.402344 38.640625 12.644531 38.9375 12.75 C 38.9375 12.75 41 13.539063 41 15.1875 C 41 16.652344 39.625 17.15625 39.625 17.15625 C 39.261719 17.300781 39.019531 17.644531 39 18.03125 C 38.980469 18.421875 39.1875 18.785156 39.53125 18.96875 C 39.53125 18.96875 41 19.847656 41 21.3125 C 41 22.945313 39.375 23.46875 39.375 23.46875 C 38.921875 23.628906 38.644531 24.085938 38.71875 24.5625 C 38.71875 24.5625 39 26.292969 39 27.09375 C 39 27.726563 38.269531 28.90625 36.40625 28.90625 C 36.394531 28.90625 36.386719 28.90625 36.375 28.90625 C 33.035156 29.003906 22.40625 29 22.40625 29 C 22.070313 29.003906 21.757813 29.175781 21.574219 29.457031 C 21.390625 29.742188 21.363281 30.097656 21.5 30.40625 C 21.5 30.40625 22.375 32.347656 23.3125 34.46875 C 24.25 36.589844 25.269531 38.972656 25.46875 39.53125 L 25.4375 39.53125 C 25.773438 40.535156 26 40.726563 26 41.40625 C 26 42.460938 25.640625 43.042969 25.21875 43.4375 C 24.796875 43.832031 24.246094 44 24 44 C 23.617188 44 23.011719 43.746094 22.5625 43 C 22.542969 42.96875 22.523438 42.9375 22.5 42.90625 L 11.3125 27.53125 C 11.308594 27.523438 11.316406 27.507813 11.3125 27.5 C 10.441406 26.269531 10 24.902344 10 23.40625 L 10 14 C 10 10.144531 13.144531 7 17 7 Z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n", "export default function ThumbsDownIconFilled({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n      <path d=\"M 24 46 C 22.769531 46 21.589844 45.257813 20.84375 44.015625 L 9.691406 28.6875 C 8.566406 27.113281 8 25.339844 8 23.398438 L 8 14 C 8 9.039063 12.039063 5 17 5 L 36 5 C 39.097656 5 41 7.503906 41 9.300781 C 41 10.132813 40.824219 10.835938 40.628906 11.359375 C 41.617188 11.976563 43 13.195313 43 15.199219 C 43 16.609375 42.335938 17.566406 41.675781 18.175781 C 42.324219 18.851563 43 19.894531 43 21.300781 C 43 23.324219 41.683594 24.445313 40.804688 24.96875 C 40.894531 25.585938 41 26.457031 41 27.101563 C 41 28.96875 39.277344 30.902344 36.398438 30.902344 C 33.832031 30.976563 27.015625 30.996094 23.941406 31 C 24.980469 33.324219 26.964844 37.804688 27.34375 38.863281 C 27.429688 39.121094 27.507813 39.320313 27.578125 39.503906 C 27.796875 40.046875 28 40.566406 28 41.398438 C 28 44.574219 25.660156 46 24 46 Z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n", "export default function ThumbsUpIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n      <path d=\"M 24 4 C 22.824219 4 21.691406 4.726563 20.9375 5.90625 C 20.910156 5.945313 20.867188 5.960938 20.84375 6 L 9.6875 21.3125 C 8.570313 22.878906 8 24.699219 8 26.59375 L 8 36 C 8 40.945313 12.054688 45 17 45 L 36 45 C 37.515625 45 38.769531 44.386719 39.625 43.5625 C 40.480469 42.738281 41 41.722656 41 40.6875 C 41 39.832031 40.800781 39.128906 40.59375 38.59375 C 41.566406 38.070313 43 37.078125 43 34.8125 C 43 33.386719 42.308594 32.453125 41.625 31.84375 C 42.308594 31.171875 43 30.183594 43 28.6875 C 43 26.445313 41.578125 25.527344 40.75 25.09375 C 40.835938 24.578125 41 23.820313 41 22.90625 C 41 20.949219 39.152344 19.109375 36.4375 19.09375 C 36.429688 19.09375 36.414063 19.09375 36.40625 19.09375 C 33.300781 19.003906 25.800781 19 23.9375 19 C 24.269531 18.253906 24.511719 17.734375 25.125 16.34375 C 26.058594 14.226563 27.039063 12.007813 27.34375 11.15625 C 27.34375 11.152344 27.34375 11.128906 27.34375 11.125 C 27.613281 10.410156 28 9.703125 28 8.59375 C 28 7.050781 27.398438 5.847656 26.59375 5.09375 C 25.789063 4.339844 24.851563 4 24 4 Z M 24 6 C 24.246094 6 24.796875 6.167969 25.21875 6.5625 C 25.640625 6.957031 26 7.539063 26 8.59375 C 26 9.273438 25.796875 9.558594 25.46875 10.4375 C 25.46875 10.449219 25.46875 10.457031 25.46875 10.46875 C 25.269531 11.027344 24.25 13.410156 23.3125 15.53125 C 22.375 17.652344 21.5 19.59375 21.5 19.59375 C 21.363281 19.902344 21.390625 20.257813 21.574219 20.542969 C 21.757813 20.824219 22.070313 20.996094 22.40625 21 C 22.40625 21 33.035156 20.996094 36.375 21.09375 C 36.386719 21.09375 36.394531 21.09375 36.40625 21.09375 C 38.269531 21.09375 39 22.273438 39 22.90625 C 39 23.707031 38.71875 25.4375 38.71875 25.4375 C 38.644531 25.914063 38.921875 26.371094 39.375 26.53125 C 39.375 26.53125 41 27.054688 41 28.6875 C 41 30.152344 39.53125 31.03125 39.53125 31.03125 C 39.1875 31.214844 38.980469 31.578125 39 31.96875 C 39.019531 32.355469 39.261719 32.699219 39.625 32.84375 C 39.625 32.84375 41 33.347656 41 34.8125 C 41 36.460938 38.9375 37.25 38.9375 37.25 C 38.640625 37.355469 38.410156 37.597656 38.320313 37.898438 C 38.226563 38.199219 38.28125 38.527344 38.46875 38.78125 C 38.46875 38.78125 39 39.5 39 40.6875 C 39 40.953125 38.769531 41.625 38.25 42.125 C 37.730469 42.625 36.984375 43 36 43 L 17 43 C 13.144531 43 10 39.855469 10 36 L 10 26.59375 C 10 25.097656 10.441406 23.730469 11.3125 22.5 C 11.316406 22.492188 11.308594 22.476563 11.3125 22.46875 L 22.5 7.09375 C 22.523438 7.0625 22.542969 7.03125 22.5625 7 C 23.011719 6.253906 23.617188 6 24 6 Z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n", "export default function ThumbsUpIconFilled({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n      <path d=\"M 36 45 L 17 45 C 12.039063 45 8 40.964844 8 36 L 8 26.601563 C 8 24.660156 8.566406 22.886719 9.6875 21.320313 L 20.890625 5.910156 C 21.589844 4.742188 22.769531 4 24 4 C 25.660156 4 28 5.425781 28 8.601563 C 28 9.507813 27.753906 10.117188 27.511719 10.707031 C 27.453125 10.847656 27.394531 10.992188 27.335938 11.148438 C 26.960938 12.199219 24.980469 16.675781 23.941406 19 C 27.019531 19.003906 33.839844 19.023438 36.429688 19.101563 C 39.28125 19.101563 41 21.03125 41 22.898438 C 41 23.539063 40.894531 24.414063 40.804688 25.03125 C 41.683594 25.554688 43 26.679688 43 28.699219 C 43 30.105469 42.324219 31.144531 41.675781 31.824219 C 42.335938 32.433594 43 33.390625 43 34.800781 C 43 36.808594 41.617188 38.023438 40.628906 38.640625 C 40.824219 39.164063 41 39.867188 41 40.699219 C 41 42.496094 39.097656 45 36 45 Z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n", "import moment from \"moment\";\r\n\r\nexport type DateFormatType = \"YYYY-MM-DD\" | \"DD-MM-YYYY\" | \"MM-DD-YYYY\" | \"diff\";\r\nexport const DateFormats: { name: string; value: DateFormatType }[] = [\r\n  { name: \"YYYY-MM-DD\", value: \"YYYY-MM-DD\" },\r\n  { name: \"DD-MM-YYYY\", value: \"DD-MM-YYYY\" },\r\n  { name: \"MM-DD-YYYY\", value: \"MM-DD-YYYY\" },\r\n  { name: \"Diff\", value: \"diff\" },\r\n];\r\nexport type DateDisplay = \"ymd\" | \"ago\" | \"dm\" | \"mdy\";\r\nconst dateAgo = (value: Date | string | null | undefined): string => {\r\n  const today = moment(new Date());\r\n  const at = moment(value);\r\n  const days = Math.abs(today.diff(at, \"days\"));\r\n  // if (unitOfTime) {\r\n  //   return moment(at)\r\n  //     .startOf(unitOfTime)\r\n  //     .fromNow();\r\n  // }\r\n  if (days <= 1) {\r\n    return moment(at).startOf(\"minute\").fromNow();\r\n  } else if (days <= 7) {\r\n    return moment(at).startOf(\"day\").fromNow();\r\n  } else if (days <= 30) {\r\n    return moment(at).startOf(\"week\").fromNow();\r\n  } else if (days <= 30 * 12) {\r\n    return moment(at).startOf(\"month\").fromNow();\r\n  } else if (days <= 30 * 12 * 2) {\r\n    return moment(at).startOf(\"year\").fromNow();\r\n  } else {\r\n    return moment(at).format(\"YYYY-MM-DD\");\r\n  }\r\n};\r\nconst dateYMD = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"YYYY-MM-DD\");\r\n};\r\nconst dateDMY = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"DD-MM-YYYY\");\r\n};\r\nconst dateMDY = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"MM-DD-YYYY\");\r\n};\r\nconst dateLL = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"YYYY-MM-DD\");\r\n};\r\nconst dateYMDHMS = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"YYYY-MM-DD HH:mm:ss\");\r\n};\r\nconst dateMonthName = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"MMMM YYYY\");\r\n};\r\nconst dateDM = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"D MMM\");\r\n};\r\nconst dateMonthDayYear = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"MMMM D, YYYY\");\r\n};\r\nconst dateHMS = (value: Date | string | null | undefined): string => {\r\n  return moment(value).format(\"HH:mm:ss\");\r\n};\r\n\r\nconst daysFromDate = (value: Date, days: number) => {\r\n  return new Date(new Date().setDate(value.getDate() + days));\r\n};\r\n\r\nconst diffDays = (a: Date, b: Date) => {\r\n  const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\r\n  const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\r\n\r\n  const _MS_PER_DAY = 1000 * 60 * 60 * 24;\r\n  return (utc2 - utc1) / _MS_PER_DAY;\r\n};\r\n\r\nconst add = (value: Date, days: number) => {\r\n  return new Date(new Date().setDate(value.getDate() + days));\r\n};\r\n\r\nconst getMonths = () => {\r\n  return [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n};\r\n\r\nconst getMonthName = (month: number): string => {\r\n  const months: string[] = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n  if (month >= 1 && month <= 12) {\r\n    return months[month - 1].substring(0, 3);\r\n  }\r\n  return \"\";\r\n};\r\n\r\nconst isCurrentMonth = (year: number, month: number): boolean => {\r\n  const today = new Date();\r\n  return today.getFullYear() === year && today.getMonth() + 1 === month;\r\n};\r\n\r\nconst gteFromFilter = (filter: string, from?: Date) => {\r\n  let gte: Date | undefined = undefined;\r\n  if (!from) {\r\n    from = new Date();\r\n  }\r\n\r\n  if (filter === \"last-24-hours\") {\r\n    gte = daysFromDate(from, 1 * -1);\r\n  } else if (filter === \"last-7-days\") {\r\n    gte = daysFromDate(from, 7 * -1);\r\n  } else if (filter === \"last-30-days\") {\r\n    gte = daysFromDate(from, 30 * -1);\r\n  } else if (filter === \"last-3-months\") {\r\n    gte = daysFromDate(from, 30 * 3 * -1);\r\n  } else if (filter === \"last-6-months\") {\r\n    gte = daysFromDate(from, 30 * 6 * -1);\r\n  } else if (filter === \"last-year\") {\r\n    gte = daysFromDate(from, 30 * 12 * -1);\r\n  } else {\r\n    // eslint-disable-next-line no-console\r\n    console.log(\"gteFromFilter: filter not found\", filter);\r\n  }\r\n  return gte;\r\n};\r\n\r\nconst getDuration = ({ start, end, format = \"s\" }: { start: Date; end: Date; format: \"ms\" | \"s\" | \"m\" | \"h\" | \"d\" | \"w\" | \"M\" | \"y\" }) => {\r\n  const diff = +new Date(end) - +new Date(start);\r\n  const seconds = Math.floor(diff / 1000);\r\n  switch (format) {\r\n    case \"ms\":\r\n      return diff;\r\n    case \"s\":\r\n      return seconds;\r\n    case \"m\":\r\n      return Math.floor(seconds / 60);\r\n    case \"h\":\r\n      return Math.floor(seconds / 3600);\r\n    case \"d\":\r\n      return Math.floor(seconds / 86400);\r\n    case \"w\":\r\n      return Math.floor(seconds / 604800);\r\n    case \"M\":\r\n      return Math.floor(seconds / 2592000);\r\n    case \"y\":\r\n      return Math.floor(seconds / 31536000);\r\n    default:\r\n      return diff;\r\n  }\r\n};\r\n\r\nfunction getDurationInSeconds({ start, end }: { start: Date | null; end: Date | null }) {\r\n  if (start && end) {\r\n    const diff = +new Date(end) - +new Date(start);\r\n    const seconds = Math.floor(diff / 1000);\r\n\r\n    if (seconds < 60) {\r\n      return `${seconds}s`;\r\n    } else {\r\n      return `${Math.floor(seconds / 60)}m ${seconds % 60}s`;\r\n    }\r\n  }\r\n  return \"-\";\r\n}\r\n\r\nexport default {\r\n  dateAgo,\r\n  dateYMD,\r\n  dateDMY,\r\n  dateMDY,\r\n  dateLL,\r\n  dateYMDHMS,\r\n  dateMonthName,\r\n  dateDM,\r\n  dateHMS,\r\n  dateMonthDayYear,\r\n  daysFromDate,\r\n  diffDays,\r\n  add,\r\n  getMonths,\r\n  getMonthName,\r\n  isCurrentMonth,\r\n  gteFromFilter,\r\n  getDuration,\r\n  getDurationInSeconds,\r\n};\r\n", "import type { KnowledgeBaseDto } from \"../../dtos/KnowledgeBaseDto\";\r\nimport BreadcrumbSimple from \"~/components/ui/breadcrumbs/BreadcrumbSimple\";\r\nimport type { KbArticleDto } from \"~/modules/knowledgeBase/dtos/KbArticleDto\";\r\nimport type { KbCategoryDto } from \"~/modules/knowledgeBase/dtos/KbCategoryDto\";\r\nimport KbArticleContent from \"./KbArticleContent\";\r\nimport { useParams } from \"@remix-run/react\";\r\nimport KnowledgeBaseUtils from \"../../utils/KnowledgeBaseUtils\";\r\n\r\nexport default function KbArticle({\r\n  kb,\r\n  category,\r\n  item,\r\n  userState,\r\n  actions,\r\n}: {\r\n  kb: KnowledgeBaseDto;\r\n  category: KbCategoryDto;\r\n  item: KbArticleDto;\r\n  userState: {\r\n    hasThumbsUp: boolean;\r\n    hasThumbsDown: boolean;\r\n  };\r\n  actions: {\r\n    onThumbsUp: () => void;\r\n    onThumbsDown: () => void;\r\n  };\r\n}) {\r\n  const params = useParams();\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      <BreadcrumbSimple\r\n        menu={[\r\n          {\r\n            title: kb.title,\r\n            routePath: KnowledgeBaseUtils.getKbUrl({ kb, params }),\r\n          },\r\n          {\r\n            title: category.title,\r\n            routePath: KnowledgeBaseUtils.getCategoryUrl({ kb, category, params }),\r\n          },\r\n          {\r\n            title: item.title,\r\n            routePath: item.href,\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <KbArticleContent item={item} content={item.contentPublished} userState={userState} actions={actions} />\r\n    </div>\r\n  );\r\n}\r\n", "import { db } from \"~/lib/db.server\";\r\n\r\nexport async function createKnowledgeBaseView({ userAnalyticsId, knowledgeBaseId }: { userAnalyticsId: string; knowledgeBaseId: string }) {\r\n  if (!userAnalyticsId) {\r\n    return;\r\n  }\r\n  const existing = await db.knowledgeBaseViews.findUnique({\r\n    where: {\r\n      knowledgeBaseId_userAnalyticsId: {\r\n        userAnalyticsId,\r\n        knowledgeBaseId,\r\n      },\r\n    },\r\n  });\r\n  if (!existing) {\r\n    await db.knowledgeBaseViews.create({\r\n      data: {\r\n        userAnalyticsId,\r\n        knowledgeBaseId,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport async function createKnowledgeBaseArticleView({ userAnalyticsId, articleId }: { userAnalyticsId: string; articleId: string }) {\r\n  if (!userAnalyticsId) {\r\n    return;\r\n  }\r\n  const existing = await db.knowledgeBaseArticleViews.findUnique({\r\n    where: {\r\n      knowledgeBaseArticleId_userAnalyticsId: {\r\n        userAnalyticsId,\r\n        knowledgeBaseArticleId: articleId,\r\n      },\r\n    },\r\n  });\r\n  if (!existing) {\r\n    await db.knowledgeBaseArticleViews.create({\r\n      data: {\r\n        userAnalyticsId,\r\n        knowledgeBaseArticleId: articleId,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport async function voteArticle({ userAnalyticsId, articleId, type }: { userAnalyticsId: string; articleId: string; type: \"up\" | \"down\" }) {\r\n  if (!userAnalyticsId) {\r\n    return;\r\n  }\r\n  if (type === \"up\") {\r\n    await db.knowledgeBaseArticleDownvotes.deleteMany({\r\n      where: {\r\n        userAnalyticsId,\r\n        knowledgeBaseArticleId: articleId,\r\n      },\r\n    });\r\n    const existing = await db.knowledgeBaseArticleUpvotes.findUnique({\r\n      where: {\r\n        knowledgeBaseArticleId_userAnalyticsId: {\r\n          userAnalyticsId,\r\n          knowledgeBaseArticleId: articleId,\r\n        },\r\n      },\r\n    });\r\n    if (!existing) {\r\n      await db.knowledgeBaseArticleUpvotes.create({\r\n        data: {\r\n          userAnalyticsId,\r\n          knowledgeBaseArticleId: articleId,\r\n        },\r\n      });\r\n    } else {\r\n      await db.knowledgeBaseArticleUpvotes.delete({\r\n        where: {\r\n          knowledgeBaseArticleId_userAnalyticsId: {\r\n            userAnalyticsId,\r\n            knowledgeBaseArticleId: articleId,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  } else {\r\n    await db.knowledgeBaseArticleUpvotes.deleteMany({\r\n      where: {\r\n        userAnalyticsId,\r\n        knowledgeBaseArticleId: articleId,\r\n      },\r\n    });\r\n    const existing = await db.knowledgeBaseArticleDownvotes.findUnique({\r\n      where: {\r\n        knowledgeBaseArticleId_userAnalyticsId: {\r\n          userAnalyticsId,\r\n          knowledgeBaseArticleId: articleId,\r\n        },\r\n      },\r\n    });\r\n    if (!existing) {\r\n      await db.knowledgeBaseArticleDownvotes.create({\r\n        data: {\r\n          userAnalyticsId,\r\n          knowledgeBaseArticleId: articleId,\r\n        },\r\n      });\r\n    } else {\r\n      await db.knowledgeBaseArticleDownvotes.delete({\r\n        where: {\r\n          knowledgeBaseArticleId_userAnalyticsId: {\r\n            userAnalyticsId,\r\n            knowledgeBaseArticleId: articleId,\r\n          },\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getArticleStateByUserAnalyticsId({ userAnalyticsId, articleId }: { userAnalyticsId: string; articleId: string }) {\r\n  return {\r\n    hasThumbsUp: !!(await db.knowledgeBaseArticleUpvotes.findUnique({\r\n      where: {\r\n        knowledgeBaseArticleId_userAnalyticsId: {\r\n          userAnalyticsId,\r\n          knowledgeBaseArticleId: articleId,\r\n        },\r\n      },\r\n    })),\r\n    hasThumbsDown: !!(await db.knowledgeBaseArticleDownvotes.findUnique({\r\n      where: {\r\n        knowledgeBaseArticleId_userAnalyticsId: {\r\n          userAnalyticsId,\r\n          knowledgeBaseArticleId: articleId,\r\n        },\r\n      },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function countAllKbsViews() {\r\n  return await db.knowledgeBaseViews.count();\r\n}\r\n\r\nexport async function countAllKbsArticleViews() {\r\n  return await db.knowledgeBaseArticleViews.count();\r\n}\r\n\r\nexport async function countAllKbsArticleUpvotes() {\r\n  return await db.knowledgeBaseArticleUpvotes.count();\r\n}\r\n\r\nexport async function countAllKbsArticleDownvotes() {\r\n  return await db.knowledgeBaseArticleDownvotes.count();\r\n}\r\n", "import type { ActionArgs } from \"@vercel/remix\";\r\nimport OpenAIService from \"~/modules/ai/lib/OpenAIStream\";\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  let { prompt } = (await request.json()) as {\r\n    prompt?: string;\r\n  };\r\n\r\n  if (!prompt) {\r\n    return new Response(\"No prompt in the request\", { status: 400 });\r\n  }\r\n\r\n  prompt = prompt.replace(/\\n/g, \" \").replace(/\\/$/, \"\").slice(0, 5000);\r\n\r\n  if (!prompt) {\r\n    return new Response(\"Start typing to get suggestions\", { status: 400 });\r\n  }\r\n  const stream = await OpenAIService.chatCompletionStream({\r\n    model: \"gpt-3.5-turbo\",\r\n    messages: [\r\n      {\r\n        role: \"system\",\r\n        content:\r\n          \"You are an AI writing assistant that continues existing text based on context from prior text. \" +\r\n          \"Give more weight/priority to the later characters than the beginning ones. Make sure to construct complete sentences.\",\r\n      },\r\n      {\r\n        role: \"user\",\r\n        content: prompt,\r\n      },\r\n    ],\r\n    stream: true,\r\n    temperature: 0.7,\r\n    top_p: 1,\r\n    frequency_penalty: 0,\r\n    presence_penalty: 0,\r\n    n: 1,\r\n  });\r\n  return new Response(stream, {});\r\n};\r\n", "import type { ParsedEvent, ReconnectInterval } from \"eventsource-parser\";\r\nimport { createParser } from \"eventsource-parser\";\r\n\r\nexport type ChatGPTAgent = \"user\" | \"assistant\" | \"system\";\r\n\r\nexport interface ChatGPTMessage {\r\n  role: ChatGPTAgent;\r\n  content: string;\r\n}\r\n\r\nexport interface OpenAIStreamPayload {\r\n  model: string;\r\n  messages: ChatGPTMessage[];\r\n  temperature: number;\r\n  top_p?: number;\r\n  frequency_penalty?: number;\r\n  presence_penalty?: number;\r\n  // max_tokens: number;\r\n  stream: boolean;\r\n  n: number;\r\n}\r\n\r\nasync function chatCompletionStream(payload: OpenAIStreamPayload) {\r\n  const apiKey = process.env.OPENAI_API_KEY;\r\n  if (!apiKey) {\r\n    throw new Error(\"No OpenAI API key found\");\r\n  }\r\n\r\n  const encoder = new TextEncoder();\r\n  const decoder = new TextDecoder();\r\n\r\n  let counter = 0;\r\n\r\n  const res = await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${apiKey}`,\r\n    },\r\n    method: \"POST\",\r\n    body: JSON.stringify(payload),\r\n  });\r\n\r\n  const stream = new ReadableStream({\r\n    async start(controller) {\r\n      // callback\r\n      function onParse(event: ParsedEvent | ReconnectInterval) {\r\n        if (event.type === \"event\") {\r\n          const data = event.data;\r\n          if (data === \"[DONE]\") {\r\n            controller.close();\r\n            return;\r\n          }\r\n          try {\r\n            const json = JSON.parse(data);\r\n            const text = json.choices[0].delta?.content || \"\";\r\n            if (counter < 2 && (text.match(/\\n/) || []).length) {\r\n              // this is a prefix character (i.e., \"\\n\\n\"), do nothing\r\n              return;\r\n            }\r\n            const queue = encoder.encode(text);\r\n            controller.enqueue(queue);\r\n            counter++;\r\n          } catch (e) {\r\n            // maybe parse error\r\n            controller.error(e);\r\n          }\r\n        }\r\n      }\r\n\r\n      // stream response (SSE) from OpenAI may be fragmented into multiple chunks\r\n      // this ensures we properly read chunks and invoke an event for each SSE event stream\r\n      const parser = createParser(onParse);\r\n      // https://web.dev/streams/#asynchronous-iteration\r\n      for await (const chunk of res.body as any) {\r\n        parser.feed(decoder.decode(chunk));\r\n      }\r\n    },\r\n  });\r\n\r\n  return stream;\r\n}\r\n\r\nexport default {\r\n  chatCompletionStream,\r\n};\r\n", "import ServerError from \"~/components/ServerError\";\r\nimport type { LoaderArgs, V2_MetaFunction } from \"@remix-run/node\";\r\nimport { defer } from \"@remix-run/node\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbHeader from \"~/modules/knowledgeBase/components/KbHeader\";\r\nimport KbCategories from \"~/modules/knowledgeBase/components/categories/KbCategories\";\r\nimport type { KbCategoryDto } from \"~/modules/knowledgeBase/dtos/KbCategoryDto\";\r\nimport type { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport type { KbArticleDto } from \"~/modules/knowledgeBase/dtos/KbArticleDto\";\r\nimport type { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport KbFeaturedArticles from \"~/modules/knowledgeBase/components/KbFeaturedArticles\";\r\nimport { createKnowledgeBaseView } from \"~/modules/knowledgeBase/db/kbAnalytics.db.server\";\r\nimport { getUserInfo } from \"~/utils/session/session.server\";\r\n\r\ntype LoaderData = {\r\n  metatags: MetaTagsDto;\r\n  kb: KnowledgeBaseDto;\r\n  categories: KbCategoryDto[];\r\n  featured: KbArticleDto[];\r\n  query?: string;\r\n};\r\nexport let loader = async ({ request, params }: LoaderArgs) => {\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug!, enabled: true });\r\n\r\n  const userInfo = await getUserInfo(request);\r\n\r\n  await createKnowledgeBaseView({ userAnalyticsId: userInfo.userAnalyticsId, knowledgeBaseId: kb.id });\r\n  const searchParams = new URL(request.url).searchParams;\r\n  const query = searchParams.get(\"q\")?.toString();\r\n  const data: LoaderData = {\r\n    metatags: kb.metatags,\r\n    kb,\r\n    categories: await KnowledgeBaseService.getCategories({\r\n      kb,\r\n      params,\r\n    }),\r\n    featured: await KnowledgeBaseService.getFeaturedArticles({\r\n      kb,\r\n      params,\r\n    }),\r\n    query,\r\n    // searchResult,\r\n  };\r\n  return defer(data);\r\n};\r\n\r\nexport const meta: V2_MetaFunction = ({ data }) => data?.metatags;\r\n\r\nexport default function Index() {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      <KbHeader kb={data.kb} withTitleAndDescription={true} />\r\n      <div className=\"max-w-5xl mx-auto py-6 px-8\">\r\n        <div className=\"space-y-8\">\r\n          <KbFeaturedArticles kb={data.kb} items={data.featured} />\r\n          <KbCategories kb={data.kb} items={data.categories} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary() {\r\n  return <ServerError />;\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport type { KbCategoryDto } from \"~/modules/knowledgeBase/dtos/KbCategoryDto\";\r\n\r\nexport default function KbCategoriesList({ items }: { items: KbCategoryDto[] }) {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <h2 className=\"text-2xl font-bold\">Categories</h2>\r\n      <div className={clsx(\"grid gap-4 grid-cols-1\")}>\r\n        {items.map((item) => {\r\n          return (\r\n            <div key={item.title} className=\"rounded-md border border-gray-300 bg-white hover:border-slate-400 group\">\r\n              <Link to={item.href} className=\"w-full\">\r\n                <div className=\"flex items-center space-x-8 p-6\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    {item.icon.startsWith(\"<svg\") ? (\r\n                      <div\r\n                        dangerouslySetInnerHTML={{\r\n                          __html: item.icon.replace(\"<svg\", `<svg class='${\"h-12 w-12 text-gray-400 group-hover:text-gray-700\"}'`) ?? \"\",\r\n                        }}\r\n                      />\r\n                    ) : item.icon.includes(\"http\") ? (\r\n                      <img className=\"h-12 w-12\" src={item.icon} alt={item.title} />\r\n                    ) : (\r\n                      <></>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"flex flex-col w-full\">\r\n                    <div className=\"font-bold group-hover:text-gray-700\">{item.title}</div>\r\n                    <div className=\"mt-1 text-sm text-gray-700\">{item.description}</div>\r\n                    <div className=\"mt-6 flex items-center space-x-2 justify-between\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"text-sm\">\r\n                          {item.articles.length} <span>{item.articles.length === 1 ? \"article\" : \"articles\"}</span>\r\n                        </div>\r\n                        {/* <div className=\"text-sm text-gray-300\">|</div>\r\n                        <div className=\"text-sm\">Written by 10 authors</div> */}\r\n                      </div>\r\n                      {/* <div className=\"text-sm text-gray-400\">{item.version}</div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport clsx from \"clsx\";\r\nimport type { KbCategoryDto } from \"~/modules/knowledgeBase/dtos/KbCategoryDto\";\r\n\r\nexport default function KbCategoriesGrid({ items, columns }: { items: KbCategoryDto[]; columns: number }) {\r\n  return (\r\n    <div\r\n      className={clsx(\r\n        \"grid gap-4 grid-cols-1\",\r\n        columns === 2 && \"md:grid-cols-2\",\r\n        columns === 3 && \"md:grid-cols-3\",\r\n        columns === 4 && \"md:grid-cols-4\",\r\n        columns === 5 && \"md:grid-cols-5\",\r\n        columns === 6 && \"md:grid-cols-6\"\r\n      )}\r\n    >\r\n      {items.map((item) => {\r\n        return (\r\n          <div key={item.title} className=\"rounded-md border border-gray-300 bg-white hover:border-slate-400 group\">\r\n            <Link to={item.href} className=\"w-full\">\r\n              <div className=\"p-6 flex flex-col space-y-3\">\r\n                <div className=\"flex-shrink-0\">\r\n                  {item.icon.startsWith(\"<svg\") ? (\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: item.icon.replace(\"<svg\", `<svg class='${\"h-8 w-8 text-gray-400 group-hover:text-gray-700\"}'`) ?? \"\",\r\n                      }}\r\n                    />\r\n                  ) : item.icon.includes(\"http\") ? (\r\n                    <img className=\"h-8 w-8\" src={item.icon} alt={item.title} />\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </div>\r\n                <div className=\"flex items-center space-x-8\">\r\n                  <div className=\"flex flex-col w-full\">\r\n                    <div className=\"font-bold group-hover:text-gray-700\">{item.title}</div>\r\n                    <div className=\"mt-1 text-sm text-gray-700\">{item.description}</div>\r\n                    <div className=\"mt-6 flex items-center space-x-2 justify-between\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <div className=\"text-sm\">\r\n                          {item.articles.length} <span>{item.articles.length === 1 ? \"article\" : \"articles\"}</span>\r\n                        </div>\r\n                      </div>\r\n                      {/* <div className=\"text-sm text-gray-400\">{item.version}</div> */}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport clsx from \"clsx\";\r\nimport type { KbCategoryDto } from \"../../dtos/KbCategoryDto\";\r\n\r\nexport default function KbCategoriesTopArticles({ items }: { items: KbCategoryDto[] }) {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {items.map((item) => {\r\n        return (\r\n          <div key={item.slug} className=\"space-y-4\">\r\n            <div className=\"flex justify-between space-x-2 items-baseline\">\r\n              <div className=\"space-x-4 flex items-center\">\r\n                {item.icon.startsWith(\"<svg\") ? (\r\n                  <div\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: item.icon.replace(\"<svg\", `<svg class='${\"h-6 w-6 text-gray-400 group-hover:text-gray-700\"}'`) ?? \"\",\r\n                    }}\r\n                  />\r\n                ) : item.icon.includes(\"http\") ? (\r\n                  <img className=\"h-6 w-6\" src={item.icon} alt={item.title} />\r\n                ) : null}\r\n                <Link to={item.href} className=\"hover:underline\">\r\n                  <h2 className=\"text-2xl font-bold\">{item.title}</h2>\r\n                </Link>\r\n              </div>\r\n              <Link to={item.href} className=\"text-sm text-gray-500 hover:underline\">\r\n                View all\r\n              </Link>\r\n            </div>\r\n            <div className={clsx(\"grid gap-4 grid-cols-3\")}>\r\n              {item.articles.slice(0, 3).map((item) => {\r\n                return (\r\n                  <div key={item.title} className=\"rounded-md border border-gray-300 bg-white hover:border-slate-400 group\">\r\n                    <Link to={item.href} className=\"w-full\">\r\n                      <div className=\"flex items-center space-x-8 p-6\">\r\n                        <div className=\"flex flex-col w-full\">\r\n                          <div className=\"font-medium group-hover:text-gray-700\">{item.title}</div>\r\n                        </div>\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n", "import type { KnowledgeBaseDto } from \"../../dtos/KnowledgeBaseDto\";\r\nimport type { KbCategoryDto } from \"../../dtos/KbCategoryDto\";\r\nimport KbCategoriesList from \"./KbCategoriesList\";\r\nimport KbCategoriesGrid from \"./KbCategoriesGrid\";\r\nimport KbCategoriesTopArticles from \"./KbCategoriesTopArticles\";\r\nimport EmptyState from \"~/components/ui/emptyState/EmptyState\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport default function KbCategories({ items, kb }: { items: KbCategoryDto[]; kb: KnowledgeBaseDto }) {\r\n  return (\r\n    <div>\r\n      {items.length === 0 ? (\r\n        <div className=\"space-y-4\">\r\n          <h2 className=\"text-2xl font-bold\">Categories</h2>\r\n          <EmptyState className=\"bg-white\" captions={{ thereAreNo: \"There are no categories\" }} />\r\n        </div>\r\n      ) : (\r\n        <Fragment>\r\n          {kb.layout === \"list\" ? (\r\n            <KbCategoriesList items={items} />\r\n          ) : kb.layout === \"articles\" ? (\r\n            <KbCategoriesTopArticles items={items} />\r\n          ) : kb.layout === \"grid\" ? (\r\n            <KbCategoriesGrid items={items} columns={3} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport type { KbArticleDto } from \"../dtos/KbArticleDto\";\r\nimport ColorTextUtils from \"~/utils/shared/colors/ColorTextUtils\";\r\nimport type { Colors } from \"~/application/enums/shared/Colors\";\r\nimport clsx from \"clsx\";\r\nimport type { KnowledgeBaseDto } from \"../dtos/KnowledgeBaseDto\";\r\nimport EmptyState from \"~/components/ui/emptyState/EmptyState\";\r\n\r\nexport default function KbFeaturedArticles({ kb, items }: { kb: KnowledgeBaseDto; items: KbArticleDto[] }) {\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div className=\"space-x-4 flex items-center\">\r\n        <FeaturedArticlesIcon color={kb.color} />\r\n        <h2 className=\"text-2xl font-bold\">Featured Articles</h2>\r\n      </div>\r\n      {items.length === 0 && <EmptyState className=\"bg-white\" captions={{ thereAreNo: \"No featured articles\" }} />}\r\n      <div className=\"grid gap-2 grid-cols-2\">\r\n        {items.map((item) => {\r\n          return (\r\n            <Link\r\n              to={item.href}\r\n              key={item.id}\r\n              className=\"px-3 py-4 bg-white border border-gray-200 shadow-sm rounded-md hover:bg-slate-50 hover:border-slate-400\"\r\n            >\r\n              <div className=\"flex justify-between space-x-2 items-center\">\r\n                <div className=\"font-medium text-gray-700 flex-grow\">{item.title}</div>\r\n                <div className=\"flex-shrink-0\">\r\n                  {/* <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" viewBox=\"0 0 24 24\">\r\n                    <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\r\n                  </svg> */}\r\n                  <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction FeaturedArticlesIcon({ color }: { color: Colors }) {\r\n  return (\r\n    <svg\r\n      className={clsx(\"h-5 w-5\", ColorTextUtils.getText500(color))}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      fill=\"none\"\r\n      viewBox=\"0 0 14 14\"\r\n      height=\"48\"\r\n      width=\"48\"\r\n    >\r\n      <g id=\"star-1--reward-rating-rate-social-star-media-favorite-like-stars\">\r\n        <path\r\n          id=\"Union\"\r\n          fill=\"currentColor\"\r\n          fillRule=\"evenodd\"\r\n          d=\"M7 .277a1.04 1.04 0 0 0-.94.596L4.472 4.078a.495.495 0 0 0-.012.023.486.486 0 0 0-.023.004L.94 4.623a1.04 1.04 0 0 0-.617 1.788l2.56 2.469.006.005a.03.03 0 0 1 .009.027v.004l-.61 3.568v.001a1.05 1.05 0 0 0 1.526 1.107l3.15-1.665a.09.09 0 0 1 .072 0l3.15 1.664a1.049 1.049 0 0 0 1.527-1.106l-.61-3.57v-.003c-.002-.004-.001-.01 0-.014a.03.03 0 0 1 .008-.013l.006-.005 2.559-2.47a1.04 1.04 0 0 0-.617-1.787l-3.496-.518a.486.486 0 0 0-.023-.004.495.495 0 0 0-.012-.023L7.94.873A1.04 1.04 0 0 0 7 .277Z\"\r\n          clipRule=\"evenodd\"\r\n        ></path>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n\r\n// function CategoriesIcon() {\r\n//   return (\r\n//     <svg className=\"h-7 w-7\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 48 48\">\r\n//       <path d=\"M 10.5 5 C 8.019 5 6 7.019 6 9.5 L 6 31.5 C 6 33.981 8.019 36 10.5 36 L 16 36 L 16 33 L 10.5 33 C 9.673 33 9 32.327 9 31.5 L 9 31 L 16 31 L 16 16.5 C 16 16.331 16.013391 16.166 16.025391 16 L 13.5 16 C 12.671 16 12 15.329 12 14.5 C 12 13.671 12.671 13 13.5 13 L 17.03125 13 C 18.18825 11.199 20.205 10 22.5 10 L 30 10 L 30 9.5 C 30 7.019 27.981 5 25.5 5 L 10.5 5 z M 22.5 12 C 20.019 12 18 14.019 18 16.5 L 18 38.5 C 18 40.981 20.019 43 22.5 43 L 40.5 43 C 41.329 43 42 42.329 42 41.5 C 42 40.671 41.329 40 40.5 40 L 22.5 40 C 21.673 40 21 39.327 21 38.5 L 21 38 L 40.5 38 C 41.329 38 42 37.329 42 36.5 L 42 16.5 C 42 14.019 39.981 12 37.5 12 L 22.5 12 z M 25.5 20 L 34.5 20 C 35.329 20 36 20.671 36 21.5 C 36 22.329 35.329 23 34.5 23 L 25.5 23 C 24.671 23 24 22.329 24 21.5 C 24 20.671 24.671 20 25.5 20 z\"></path>\r\n//     </svg>\r\n//   );\r\n// }\r\n", "import { ActionArgs, json } from \"@remix-run/node\";\r\nimport { createClient } from \"@supabase/supabase-js\";\r\nimport SupabaseService from \"~/modules/supabase/SupabaseService\";\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const requiredEnvVars = [\"SUPABASE_API_URL\", \"SUPABASE_KEY\", \"SUPABASE_ANON_PUBLIC_KEY\"];\r\n  const missingEnvVars = requiredEnvVars.filter((envVar) => !process.env[envVar]);\r\n  if (missingEnvVars.length) {\r\n    return json(\"Missing env vars: \" + missingEnvVars.join(\", \"), {\r\n      status: 401,\r\n    });\r\n  }\r\n  try {\r\n    const file = request.body || \"\";\r\n    const filename = request.headers.get(\"x-filename\") || \"file.txt\";\r\n    const contentType = request.headers.get(\"content-type\") || \"text/plain\";\r\n    const fileType = `.${contentType.split(\"/\")[1]}`;\r\n\r\n    const finalName = filename.includes(fileType) ? filename : `${filename}${fileType}`;\r\n\r\n    const now = new Date().getTime();\r\n    const path = `${now}-${finalName}`;\r\n\r\n    const response = await SupabaseService.createSupabaseFile(\"saasrock-knowledge-bucket\", path, file, contentType);\r\n\r\n    return json({ success: true, url: response.publicUrl });\r\n  } catch (error: any) {\r\n    // eslint-disable-next-line no-console\r\n    console.error(\"Error uploading file\", error.message);\r\n    return new Response(error.message, { status: 500 });\r\n  }\r\n};\r\n", "import { createClient } from \"@supabase/supabase-js\";\r\n\r\nfunction getClient() {\r\n  const supabaseUrl = process.env.SUPABASE_API_URL?.toString() ?? \"\";\r\n  const supabaseKey = process.env.SUPABASE_KEY?.toString() ?? \"\";\r\n  return createClient(supabaseUrl, supabaseKey);\r\n}\r\n\r\nasync function createSupabaseFile(\r\n  bucketId: string,\r\n  path: string,\r\n  file: File | ReadableStream<Uint8Array> | \"\",\r\n  contentType?: string\r\n): Promise<{\r\n  id: string;\r\n  publicUrl: string | null;\r\n}> {\r\n  const client = getClient();\r\n  const bucket = await getOrCreateSupabaseBucket(bucketId, true);\r\n  if (!bucket.data) {\r\n    if (bucket.error) {\r\n      throw Error(\"Could not create supabase bucket: \" + bucket.error.message);\r\n    } else {\r\n      throw Error(\"Could not create supabase bucket: Unknown error\");\r\n    }\r\n  }\r\n\r\n  const createdSupabaseFile = await client.storage.from(bucket.data.id).upload(path, file, {\r\n    contentType,\r\n  });\r\n  if (!createdSupabaseFile.data) {\r\n    if (createdSupabaseFile.error) {\r\n      throw Error(\"Could not create supabase file: \" + JSON.stringify({ error: createdSupabaseFile.error.message, path }));\r\n    } else {\r\n      throw Error(\"Could not create supabase file: Unknown error\");\r\n    }\r\n  }\r\n\r\n  return {\r\n    id: createdSupabaseFile.data.path,\r\n    publicUrl: await getSupabaseFilePublicUrl(bucketId, path),\r\n  };\r\n}\r\n\r\nasync function getOrCreateSupabaseBucket(id: string, isPublic: boolean) {\r\n  const client = getClient();\r\n\r\n  const existingBucket = await client.storage.getBucket(id);\r\n  if (existingBucket.data) {\r\n    return {\r\n      data: existingBucket.data,\r\n      error: existingBucket.error,\r\n    };\r\n  }\r\n  const newBucketId = await client.storage.createBucket(id, {\r\n    public: isPublic,\r\n  });\r\n  if (newBucketId.data) {\r\n    const newBucket = await client.storage.getBucket(newBucketId.data.name);\r\n    if (newBucket.data) {\r\n      return {\r\n        data: newBucket.data,\r\n        error: newBucket.error,\r\n      };\r\n    }\r\n  }\r\n  return {\r\n    data: null,\r\n    error: newBucketId.error,\r\n  };\r\n}\r\n\r\nasync function getSupabaseFilePublicUrl(bucketId: string, path: string): Promise<string | null> {\r\n  const client = getClient();\r\n\r\n  const supabaseFile = client.storage.from(bucketId).getPublicUrl(path);\r\n  if (!supabaseFile.data.publicUrl) {\r\n    throw Error(\"Could not get supabase file: Unknown error\");\r\n  }\r\n  return supabaseFile.data.publicUrl;\r\n}\r\n\r\nexport default {\r\n  createSupabaseFile,\r\n};\r\n", "import { V2_MetaFunction } from \"@remix-run/node\";\r\nimport { Outlet } from \"@remix-run/react\";\r\nimport SidebarLayout from \"~/components/layouts/SidebarLayout\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div>\r\n      <SidebarLayout layout=\"admin\">\r\n        <Outlet />\r\n      </SidebarLayout>\r\n    </div>\r\n  );\r\n}\r\n", "import { Transition } from \"@headlessui/react\";\r\nimport type { ReactNode } from \"react\";\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport SidebarMenu from \"./SidebarMenu\";\r\nimport { Link, useParams } from \"@remix-run/react\";\r\nimport LogoDark from \"~/assets/img/logo-dark.png\";\r\nimport { useElementScrollRestoration } from \"~/utils/app/scroll-restoration\";\r\n\r\ninterface Props {\r\n  layout: \"app\" | \"admin\" | \"docs\";\r\n  children: ReactNode;\r\n}\r\n\r\nexport default function SidebarLayout({ layout, children }: Props) {\r\n  const params = useParams();\r\n\r\n  const mainElement = useRef<HTMLElement>(null);\r\n  useElementScrollRestoration({ apply: true }, mainElement);\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <div className=\"flex h-screen overflow-hidden bg-gray-100 text-gray-800\">\r\n        {/*Mobile sidebar */}\r\n        <div className=\"md:hidden\">\r\n          {sidebarOpen && (\r\n            <div className=\"fixed inset-0 z-40 flex\">\r\n              <Transition\r\n                as={Fragment}\r\n                show={sidebarOpen}\r\n                enter=\"transition-opacity ease-linear duration-300\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100\"\r\n                leave=\"transition-opacity ease-linear duration-300\"\r\n                leaveFrom=\"opacity-100\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <div className=\"fixed inset-0\">\r\n                  <div className=\"absolute inset-0 bg-gray-800 opacity-75\" />\r\n                </div>\r\n              </Transition>\r\n\r\n              <Transition\r\n                as={Fragment}\r\n                show={sidebarOpen}\r\n                enter=\"transition ease-in-out duration-300 transform\"\r\n                enterFrom=\"-translate-x-full\"\r\n                enterTo=\"translate-x-0\"\r\n                leave=\"transition ease-in-out duration-300 transform\"\r\n                leaveFrom=\"translate-x-0\"\r\n                leaveTo=\"-translate-x-full\"\r\n              >\r\n                <div className=\"relative flex w-full max-w-xs flex-1 flex-col bg-gray-900\">\r\n                  <div className=\"absolute right-0 top-0 -mr-14 mt-2 p-1\">\r\n                    <button\r\n                      className=\"flex h-12 w-12 items-center justify-center rounded-sm focus:bg-gray-600 focus:outline-none\"\r\n                      aria-label=\"Close sidebar\"\r\n                      onClick={() => setSidebarOpen(!sidebarOpen)}\r\n                    >\r\n                      <svg className=\"h-7 w-7 text-white\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"mt-5 h-0 flex-1 overflow-y-auto\">\r\n                    <nav className=\"space-y-3 px-2\">\r\n                      <div className=\"flex flex-col space-y-2\">\r\n                        <Link to={\"/\"}>\r\n                          <img className={\"mx-auto h-8 w-auto\"} src={LogoDark} alt=\"Logo\" />\r\n                        </Link>\r\n                      </div>\r\n                      <SidebarMenu layout={layout} onSelected={() => setSidebarOpen(!sidebarOpen)} />\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n              </Transition>\r\n              <div className=\"w-14 flex-shrink-0\">{/*Dummy element to force sidebar to shrink to fit close icon */}</div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/*Desktop sidebar */}\r\n        <div\r\n          className={\r\n            sidebarOpen\r\n              ? \"hidden transition duration-1000 ease-in\"\r\n              : \"hidden overflow-x-hidden border-r border-theme-200 shadow-sm dark:border-r-0 dark:border-theme-800 dark:shadow-lg md:flex md:flex-shrink-0\"\r\n          }\r\n        >\r\n          <div className=\"flex w-64 flex-col\">\r\n            <div className=\"flex h-0 flex-1 flex-col bg-theme-600 shadow-md\">\r\n              <div className=\"flex flex-1 flex-col overflow-y-auto\">\r\n                <nav className=\"flex-1 select-none space-y-3 bg-gray-900 px-2 py-4\">\r\n                  <div className=\"flex flex-col space-y-2\">\r\n                    <Link to={\"/\"}>\r\n                      <img className={\"mx-auto h-8 w-auto\"} src={LogoDark} alt=\"Logo\" />\r\n                    </Link>\r\n                  </div>\r\n                  <SidebarMenu layout={layout} />\r\n                </nav>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/*Content */}\r\n        <div className=\"flex w-0 flex-1 flex-col overflow-hidden\">\r\n          <div className=\"relative flex h-14 flex-shrink-0 border-b border-gray-200 bg-white shadow-inner\">\r\n            <button\r\n              className=\"border-r border-gray-200 px-4 text-gray-600 focus:bg-gray-100 focus:text-gray-600 focus:outline-none\"\r\n              aria-label=\"Open sidebar\"\r\n              onClick={() => setSidebarOpen(!sidebarOpen)}\r\n            >\r\n              <svg className=\"h-5 w-5\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h7\" />\r\n              </svg>\r\n            </button>\r\n\r\n            <NavBar title={\"Admin\"} />\r\n          </div>\r\n\r\n          <main ref={mainElement} className=\"flex-1 overflow-y-auto bg-gray-50 focus:outline-none\" tabIndex={0}>\r\n            <div key={params.tenant} className=\"pb-20 sm:pb-0\">\r\n              {children}\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NavBar({ title }: { title?: string }) {\r\n  return (\r\n    <div className=\"flex flex-1 justify-between space-x-2 px-3\">\r\n      <div className=\"flex flex-1 items-center\">\r\n        <div className=\"font-extrabold\">{title}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { Link, useLocation } from \"@remix-run/react\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport type { SideBarItem } from \"~/application/sidebar/SidebarItem\";\r\nimport { AdminSidebar } from \"~/application/sidebar/AdminSidebar\";\r\nimport type { SidebarGroup } from \"~/application/sidebar/SidebarGroup\";\r\nimport { useParams } from \"@remix-run/react\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\nimport clsx from \"clsx\";\r\nimport EntityIcon from \"./icons/EntityIcon\";\r\n\r\ninterface Props {\r\n  layout: \"app\" | \"admin\" | \"docs\";\r\n  onSelected?: () => void;\r\n}\r\n\r\nexport default function SidebarMenu({ layout, onSelected }: Props) {\r\n  const params = useParams();\r\n  const location = useLocation();\r\n\r\n  const [menu, setMenu] = useState<SideBarItem[]>([]);\r\n  const [expanded, setExpanded] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    let menu: SideBarItem[] = [];\r\n    if (layout === \"admin\") {\r\n      menu = AdminSidebar();\r\n    } else if (layout === \"app\") {\r\n      menu = [];\r\n    } else if (layout === \"docs\") {\r\n      menu = [];\r\n    }\r\n\r\n    function clearItemsIfNotCollapsible(items: SideBarItem[]) {\r\n      items.forEach((item) => {\r\n        if (item.isCollapsible !== undefined && !item.isCollapsible) {\r\n          item.items = [];\r\n        }\r\n        if (item.items) {\r\n          clearItemsIfNotCollapsible(item.items);\r\n        }\r\n      });\r\n    }\r\n    clearItemsIfNotCollapsible(menu);\r\n\r\n    menu.forEach((item) => {\r\n      if (item.isCollapsible !== undefined && !item.isCollapsible) {\r\n        item.items = [];\r\n      }\r\n      item.items?.forEach((subitem) => {\r\n        if (subitem.isCollapsible !== undefined && !subitem.isCollapsible) {\r\n          subitem.items = [];\r\n        }\r\n      });\r\n    });\r\n    // setMenu(layout === \"admin\" ? AdminSidebar : );\r\n    menu.forEach((group) => {\r\n      group.items?.forEach((element) => {\r\n        if (element.open || isCurrent(element) || currentIsChild(element)) {\r\n          expanded.push(element.path);\r\n        } else {\r\n          setExpanded(expanded.filter((f) => f !== element.path));\r\n        }\r\n      });\r\n    });\r\n\r\n    setMenu(menu);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  function menuItemIsExpanded(path: string) {\r\n    return expanded.includes(path);\r\n  }\r\n  function toggleMenuItem(path: string) {\r\n    if (expanded.includes(path)) {\r\n      setExpanded(expanded.filter((item) => item !== path));\r\n    } else {\r\n      setExpanded([...expanded, path]);\r\n    }\r\n  }\r\n  function getPath(item: SideBarItem) {\r\n    return UrlUtils.replaceVariables(params, item.path) ?? \"\";\r\n  }\r\n  function isCurrent(menuItem: SideBarItem) {\r\n    if (menuItem.path) {\r\n      if (menuItem.exact) {\r\n        return location.pathname === getPath(menuItem);\r\n      }\r\n      return location.pathname?.includes(getPath(menuItem));\r\n    }\r\n  }\r\n  function currentIsChild(menuItem: SideBarItem) {\r\n    let hasOpenChild = false;\r\n    menuItem.items?.forEach((item) => {\r\n      if (isCurrent(item)) {\r\n        hasOpenChild = true;\r\n      }\r\n    });\r\n    return hasOpenChild;\r\n  }\r\n\r\n  const getMenu = (): SidebarGroup[] => {\r\n    function filterItem(f: SideBarItem) {\r\n      return f;\r\n    }\r\n    const _menu: SidebarGroup[] = [];\r\n    menu\r\n      .filter((f) => filterItem(f))\r\n      .forEach(({ title, items }) => {\r\n        _menu.push({\r\n          title: title.toString(),\r\n          items:\r\n            items\r\n              ?.filter((f) => filterItem(f))\r\n              .map((f) => {\r\n                return {\r\n                  ...f,\r\n                  items: f.items?.filter((f) => filterItem(f)),\r\n                };\r\n              }) ?? [],\r\n        });\r\n      });\r\n    return _menu.filter((f) => f.items.length > 0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Mobile */}\r\n      <div className=\"space-y-1 divide-y-2 divide-slate-800 sm:hidden\">\r\n        {getMenu().map((group, index) => {\r\n          return (\r\n            <div key={index} className=\"mt-2\">\r\n              <div id={group.title} className=\"mt-2\">\r\n                <h3 className=\"px-1 text-xs font-semibold uppercase leading-4 tracking-wider text-slate-500\">{group.title}</h3>\r\n              </div>\r\n              {group.items.map((menuItem, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    {(() => {\r\n                      if (!menuItem.items || menuItem.items.length === 0) {\r\n                        return (\r\n                          <div>\r\n                            {menuItem.path.includes(\"://\") ? (\r\n                              <a\r\n                                target=\"_blank\"\r\n                                href={menuItem.path}\r\n                                rel=\"noreferrer\"\r\n                                className={clsx(\r\n                                  \"group mt-1 flex items-center space-x-4 rounded-sm px-4 py-2 text-base leading-5 text-slate-300 transition duration-150 ease-in-out hover:bg-slate-800 hover:text-white focus:bg-slate-800 focus:text-gray-50 focus:outline-none\"\r\n                                )}\r\n                                onClick={onSelected}\r\n                              >\r\n                                {menuItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={menuItem.icon} />}\r\n                                <div>{menuItem.title}</div>\r\n                              </a>\r\n                            ) : (\r\n                              <Link\r\n                                id={UrlUtils.slugify(getPath(menuItem))}\r\n                                to={menuItem.redirectTo ?? getPath(menuItem)}\r\n                                className={clsx(\r\n                                  \"group mt-1 flex items-center space-x-4 rounded-sm px-4 py-2 text-base leading-5 text-slate-300 transition duration-150 ease-in-out hover:text-white focus:text-gray-50 focus:outline-none\",\r\n                                  isCurrent(menuItem) && \"bg-theme-600 text-slate-300 focus:bg-theme-700\",\r\n                                  !isCurrent(menuItem) && \"text-slate-200 hover:bg-slate-800 focus:bg-slate-800\"\r\n                                )}\r\n                                onClick={onSelected}\r\n                              >\r\n                                {menuItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={menuItem.icon} />}\r\n                                <div>{menuItem.title}</div>\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div>\r\n                            <div\r\n                              className=\"group mt-1 flex items-center justify-between rounded-sm px-4 py-2 text-base leading-5 text-slate-200 transition duration-150 ease-in-out hover:bg-slate-800 hover:text-white focus:bg-slate-800 focus:text-gray-50 focus:outline-none\"\r\n                              onClick={() => toggleMenuItem(menuItem.path)}\r\n                            >\r\n                              <div className=\"flex items-center space-x-4\">\r\n                                {menuItem.icon !== undefined && (\r\n                                  <span className=\"h-5 w-5 text-slate-200 transition ease-in-out\">\r\n                                    <EntityIcon className=\"h-5 w-5 text-white\" icon={menuItem.icon} />\r\n                                  </span>\r\n                                )}\r\n                                <div>{menuItem.title}</div>\r\n                              </div>\r\n                              {/*Expanded: \"text-gray-400 rotate-90\", Collapsed: \"text-slate-200\" */}\r\n                              <svg\r\n                                className={clsx(\r\n                                  \"ml-auto h-5 w-5 transform transition-colors duration-150 ease-in-out\",\r\n                                  menuItemIsExpanded(menuItem.path)\r\n                                    ? \"ml-auto h-3 w-3 rotate-90 transform transition-colors duration-150 ease-in-out group-hover:text-gray-400 group-focus:text-gray-400\"\r\n                                    : \"ml-auto h-3 w-3 transform transition-colors duration-150 ease-in-out group-hover:text-gray-400 group-focus:text-gray-400\"\r\n                                )}\r\n                                viewBox=\"0 0 20 20\"\r\n                              >\r\n                                <path d=\"M6 6L14 10L6 14V6Z\" fill=\"currentColor\" />\r\n                              </svg>\r\n                            </div>\r\n                            {/*Expandable link section, show/hide based on state. */}\r\n                            {menuItemIsExpanded(menuItem.path) && (\r\n                              <div className=\"mt-1\">\r\n                                {menuItem.items.map((subItem, index) => {\r\n                                  return (\r\n                                    <Fragment key={index}>\r\n                                      {menuItem.path.includes(\"://\") ? (\r\n                                        <a\r\n                                          target=\"_blank\"\r\n                                          href={menuItem.path}\r\n                                          rel=\"noreferrer\"\r\n                                          className={clsx(\r\n                                            \"group mt-1 flex items-center rounded-sm py-2 pl-14 leading-5 text-slate-200 transition duration-150 ease-in-out hover:bg-slate-800 hover:text-slate-300 focus:bg-slate-800 focus:text-slate-300 focus:outline-none sm:text-sm\"\r\n                                          )}\r\n                                          onClick={onSelected}\r\n                                        >\r\n                                          {subItem.icon !== undefined && (\r\n                                            <span className=\"mr-1 h-5 w-5 transition ease-in-out\">\r\n                                              <EntityIcon className=\"h-5 w-5 text-white\" icon={subItem.icon} />\r\n                                            </span>\r\n                                          )}\r\n                                          {subItem.title}\r\n                                        </a>\r\n                                      ) : (\r\n                                        <Link\r\n                                          key={index}\r\n                                          id={UrlUtils.slugify(getPath(subItem))}\r\n                                          to={subItem.redirectTo ?? getPath(subItem)}\r\n                                          className={clsx(\r\n                                            \"group mt-1 flex items-center rounded-sm py-2 pl-14 leading-5 transition duration-150 ease-in-out hover:text-slate-300 focus:text-slate-300 focus:outline-none sm:text-sm\",\r\n                                            isCurrent(subItem) && \"bg-theme-600 text-slate-300 focus:bg-theme-700\",\r\n                                            !isCurrent(subItem) && \"text-slate-200 hover:bg-slate-800 focus:bg-slate-800\"\r\n                                          )}\r\n                                          onClick={onSelected}\r\n                                        >\r\n                                          {subItem.icon !== undefined && (\r\n                                            <span className=\"mr-1 h-5 w-5 transition ease-in-out\">\r\n                                              <EntityIcon className=\"h-5 w-5 text-white\" icon={subItem.icon} />\r\n                                            </span>\r\n                                          )}\r\n                                          {subItem.title}\r\n                                        </Link>\r\n                                      )}{\" \"}\r\n                                    </Fragment>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Desktop */}\r\n      <div className=\"hidden space-y-1 divide-y-2 divide-slate-800 sm:block\">\r\n        {getMenu().map((group, index) => {\r\n          return (\r\n            <div key={index} className=\"select-none\">\r\n              <div className=\"mt-2\">\r\n                <h3 id=\"Group-headline\" className=\"px-1 text-xs font-semibold uppercase leading-4 tracking-wider text-slate-500\">\r\n                  {group.title}\r\n                </h3>\r\n              </div>\r\n              {group.items.map((menuItem, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    {(() => {\r\n                      if (!menuItem.items || menuItem.items.length === 0) {\r\n                        return (\r\n                          <div>\r\n                            {menuItem.path.includes(\"://\") ? (\r\n                              <a\r\n                                target=\"_blank\"\r\n                                href={menuItem.path}\r\n                                rel=\"noreferrer\"\r\n                                className={clsx(\r\n                                  \"group mt-1 flex items-center justify-between truncate rounded-sm px-4 py-2 text-sm leading-5 text-slate-200 transition duration-150 ease-in-out hover:bg-slate-800 hover:text-white focus:bg-slate-800 focus:text-gray-50 focus:outline-none\",\r\n                                  menuItem.icon !== undefined && \"px-4\"\r\n                                )}\r\n                                onClick={onSelected}\r\n                              >\r\n                                <div className=\"flex items-center space-x-5\">\r\n                                  {menuItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={menuItem.icon} />}\r\n                                  <div>{menuItem.title}</div>\r\n                                </div>\r\n                                {menuItem.side}\r\n                              </a>\r\n                            ) : (\r\n                              <Link\r\n                                id={UrlUtils.slugify(getPath(menuItem))}\r\n                                to={menuItem.redirectTo ?? getPath(menuItem)}\r\n                                className={clsx(\r\n                                  \"group mt-1 flex items-center justify-between truncate rounded-sm px-4 py-2 text-sm leading-5 text-slate-300 transition duration-150 ease-in-out hover:text-white focus:text-gray-50 focus:outline-none\",\r\n                                  menuItem.icon !== undefined && \"px-4\",\r\n                                  isCurrent(menuItem) && \"bg-theme-600 text-slate-300 focus:bg-theme-700\",\r\n                                  !isCurrent(menuItem) && \"text-slate-200 hover:bg-slate-800 focus:bg-slate-800\"\r\n                                )}\r\n                                onClick={onSelected}\r\n                              >\r\n                                <div className=\"flex items-center space-x-5\">\r\n                                  {menuItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={menuItem.icon} />}\r\n                                  <div>{menuItem.title}</div>\r\n                                </div>\r\n                                {menuItem.side}\r\n                              </Link>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <div>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"group mt-1 flex w-full items-center justify-between truncate rounded-sm px-4 py-2 text-sm leading-5 text-slate-200 transition duration-150 ease-in-out hover:bg-slate-800 hover:text-white focus:bg-slate-800 focus:text-gray-50 focus:outline-none\"\r\n                              onClick={() => toggleMenuItem(menuItem.path)}\r\n                            >\r\n                              <div className=\"flex items-center space-x-5\">\r\n                                {menuItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={menuItem.icon} />}\r\n                                <div>{menuItem.title}</div>\r\n                              </div>\r\n                              {/*Expanded: \"text-gray-400 rotate-90\", Collapsed: \"text-slate-200\" */}\r\n\r\n                              {menuItem.side ?? (\r\n                                <svg\r\n                                  className={clsx(\r\n                                    \"ml-auto h-5 w-5 transform bg-slate-900 transition-colors duration-150 ease-in-out\",\r\n                                    menuItemIsExpanded(menuItem.path)\r\n                                      ? \"ml-auto h-3 w-3 rotate-90 transform  transition-colors duration-150 ease-in-out\"\r\n                                      : \"ml-auto h-3 w-3 transform  transition-colors duration-150 ease-in-out\"\r\n                                  )}\r\n                                  viewBox=\"0 0 20 20\"\r\n                                >\r\n                                  <path d=\"M6 6L14 10L6 14V6Z\" fill=\"currentColor\" />\r\n                                </svg>\r\n                              )}\r\n                            </button>\r\n\r\n                            {/*Expandable link section, show/hide based on state. */}\r\n                            {menuItemIsExpanded(menuItem.path) && (\r\n                              <div className=\"mt-1\">\r\n                                {menuItem.items.map((subItem, index) => {\r\n                                  return (\r\n                                    <Fragment key={index}>\r\n                                      {menuItem.path.includes(\"://\") ? (\r\n                                        <a\r\n                                          target=\"_blank\"\r\n                                          href={menuItem.path}\r\n                                          rel=\"noreferrer\"\r\n                                          className={clsx(\r\n                                            isCurrent(subItem) && \"bg-theme-600 text-slate-300 focus:bg-theme-700\",\r\n                                            \"group mt-1 flex items-center rounded-sm py-2 text-sm leading-5 text-slate-300 transition duration-150 ease-in-out hover:text-white focus:text-gray-50 focus:outline-none \",\r\n                                            menuItem.icon === undefined && \"pl-10\",\r\n                                            menuItem.icon !== undefined && \"pl-14\"\r\n                                          )}\r\n                                          onClick={onSelected}\r\n                                        >\r\n                                          {subItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={subItem.icon} />}\r\n                                          <div>{subItem.title}</div>\r\n                                        </a>\r\n                                      ) : (\r\n                                        <Link\r\n                                          id={UrlUtils.slugify(getPath(subItem))}\r\n                                          to={subItem.redirectTo ?? getPath(subItem)}\r\n                                          className={clsx(\r\n                                            \"group mt-1 flex items-center rounded-sm py-2 text-sm leading-5 text-slate-300 transition duration-150 ease-in-out hover:text-white focus:text-gray-50 focus:outline-none\",\r\n                                            menuItem.icon === undefined && \"pl-10\",\r\n                                            menuItem.icon !== undefined && \"pl-14\",\r\n                                            isCurrent(subItem) && \"bg-theme-600 text-slate-300 focus:bg-theme-700\",\r\n                                            !isCurrent(subItem) && \"text-slate-200 hover:bg-slate-800 focus:bg-slate-800\"\r\n                                          )}\r\n                                          onClick={onSelected}\r\n                                        >\r\n                                          {subItem.icon !== undefined && <EntityIcon className=\"h-5 w-5 text-white\" icon={subItem.icon} />}\r\n                                          <div>{subItem.title}</div>\r\n                                        </Link>\r\n                                      )}\r\n                                    </Fragment>\r\n                                  );\r\n                                })}\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })()}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import type { SideBarItem } from \"./SidebarItem\";\r\n\r\nexport const AdminSidebar = (): SideBarItem[] => [\r\n  {\r\n    title: \"\",\r\n    path: \"\",\r\n    items: [\r\n      {\r\n        title: \"Dashboard\",\r\n        path: `/admin`,\r\n        exact: true,\r\n        icon: `<svg className={className} xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"30\" height=\"30\" viewBox=\"0 0 172 172\" fill=\"currentColor\"> <g fill=\"none\" fillRule=\"nonzero\" stroke=\"none\" strokeWidth=\"1\" strokeLinecap=\"butt\" strokeLinejoin=\"miter\" strokeMiterlimit=\"10\" strokeDasharray=\"\" strokeDashoffset=\"0\" fontFamily=\"none\" fontWeight=\"none\" fontSize=\"none\" textAnchor=\"none\" // style=\"mix-blend-mode: normal\" > <path d=\"M0,172v-172h172v172z\" fill=\"none\" /> <g fill=\"currentColor\"> <path d=\"M86,11.46667c-1.4986,0.0001 -2.93759,0.58695 -4.00886,1.6349l-62.54036,51.15208c-0.07223,0.05431 -0.14317,0.11031 -0.21276,0.16797l-0.21276,0.17917v0.0112c-1.16235,1.08285 -1.82332,2.59943 -1.82526,4.18802c0,3.16643 2.5669,5.73333 5.73333,5.73333h5.73333v63.06667c0,6.33533 5.13133,11.46667 11.46667,11.46667h91.73333c6.33533,0 11.46667,-5.13133 11.46667,-11.46667v-63.06667h5.73333c3.16643,0 5.73333,-2.5669 5.73333,-5.73333c0.00117,-1.59249 -0.66006,-3.11372 -1.82526,-4.19922l-0.08958,-0.06719c-0.12577,-0.11399 -0.25654,-0.22235 -0.39193,-0.32474l-9.15989,-7.49141v-22.31745c0,-3.1648 -2.56853,-5.73333 -5.73333,-5.73333h-5.73333c-3.1648,0 -5.73333,2.56853 -5.73333,5.73333v8.25286l-36.24766,-29.65208c-1.0562,-0.98184 -2.44361,-1.52961 -3.88567,-1.53411zM103.2,86h22.93333v45.86667h-22.93333z\" /> </g> </g> </svg>`,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Manage\",\r\n    path: \"\",\r\n    items: [\r\n      {\r\n        title: \"Knowledge Base\",\r\n        path: `/admin/knowledge-base`,\r\n        icon: '<svg fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\"> <path d=\"M 13 2 C 10.792969 2 9 3.792969 9 6 L 9 44.3125 L 9.03125 44.3125 C 9.195313 46.363281 10.910156 48 13 48 L 42 48 L 42 46 L 13 46 C 11.882813 46 11 45.117188 11 44 C 11 42.882813 11.882813 42 13 42 L 42 42 L 42 40 L 13 40 C 11.898438 40 11 39.101563 11 38 C 11 36.898438 11.898438 36 13 36 L 42 36 L 42 2 Z M 16 8 L 35 8 C 35.550781 8 36 8.449219 36 9 L 36 12 C 36 12.550781 35.550781 13 35 13 L 16 13 C 15.449219 13 15 12.550781 15 12 L 15 9 C 15 8.449219 15.449219 8 16 8 Z\"></path> </svg>',\r\n      },\r\n    ],\r\n  },\r\n];\r\n", "export default function EntityIcon({ className, icon, title }: { className?: string; icon?: string; title?: string }) {\r\n  return (\r\n    <>\r\n      {icon && (\r\n        <>\r\n          {icon.startsWith(\"<svg\") ? (\r\n            <div dangerouslySetInnerHTML={{ __html: icon.replace(\"<svg\", `<svg class='${className}'`) ?? \"\" }} />\r\n          ) : icon.includes(\"http\") ? (\r\n            <img className={className} src={icon} alt={title} />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n", "import { MutableRefObject, useCallback, useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useLayoutEffect } from \"react\";\r\nimport { useBeforeUnload, useLocation, useTransition } from \"@remix-run/react\";\r\n\r\nlet STORAGE_KEY = \"positions\";\r\n\r\nlet positions: { [key: string]: number } = {};\r\n\r\nif (typeof document !== \"undefined\") {\r\n  let sessionPositions = sessionStorage.getItem(STORAGE_KEY);\r\n  if (sessionPositions) {\r\n    positions = JSON.parse(sessionPositions);\r\n  }\r\n}\r\n\r\n/**\r\n * This component will emulate the browser's scroll restoration on location\r\n * changes.\r\n *\r\n * @see https://remix.run/api/remix#scrollrestoration\r\n */\r\nexport function ScrollRestoration({ nonce = undefined }: { nonce?: string }) {\r\n  useScrollRestoration();\r\n\r\n  // wait for the browser to restore it on its own\r\n  useEffect(() => {\r\n    window.history.scrollRestoration = \"manual\";\r\n  }, []);\r\n\r\n  // let the browser restore on it's own for refresh\r\n  useBeforeUnload(\r\n    useCallback(() => {\r\n      window.history.scrollRestoration = \"auto\";\r\n    }, [])\r\n  );\r\n\r\n  let restoreScroll = ((STORAGE_KEY: string) => {\r\n    if (!window.history.state || !window.history.state.key) {\r\n      let key = Math.random().toString(32).slice(2);\r\n      window.history.replaceState({ key }, \"\");\r\n    }\r\n    try {\r\n      let positions = JSON.parse(sessionStorage.getItem(STORAGE_KEY) || \"{}\");\r\n      let storedY = positions[window.history.state.key];\r\n      if (typeof storedY === \"number\") {\r\n        window.scrollTo(0, storedY);\r\n      }\r\n    } catch (error) {\r\n      sessionStorage.removeItem(STORAGE_KEY);\r\n    }\r\n  }).toString();\r\n\r\n  return (\r\n    <script\r\n      nonce={nonce}\r\n      suppressHydrationWarning\r\n      dangerouslySetInnerHTML={{\r\n        __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)})`,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nlet hydrated = false;\r\n\r\nfunction useScrollRestoration() {\r\n  let location = useLocation();\r\n  let transition = useTransition();\r\n\r\n  let wasSubmissionRef = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (transition.submission) {\r\n      wasSubmissionRef.current = true;\r\n    }\r\n  }, [transition]);\r\n\r\n  useEffect(() => {\r\n    if (transition.location) {\r\n      positions[location.key] = window.scrollY;\r\n    }\r\n  }, [transition, location]);\r\n\r\n  useBeforeUnload(\r\n    useCallback(() => {\r\n      sessionStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\r\n    }, [])\r\n  );\r\n\r\n  if (typeof document !== \"undefined\") {\r\n    // eslint-disable-next-line\r\n    useLayoutEffect(() => {\r\n      // don't do anything on hydration, the component already did this with an\r\n      // inline script.\r\n      if (!hydrated) {\r\n        hydrated = true;\r\n        return;\r\n      }\r\n\r\n      let y = positions[location.key];\r\n\r\n      // been here before, scroll to it\r\n      if (y != undefined) {\r\n        window.scrollTo(0, y);\r\n        return;\r\n      }\r\n\r\n      // try to scroll to the hash\r\n      if (location.hash) {\r\n        let el = document.getElementById(location.hash.slice(1));\r\n        if (el) {\r\n          el.scrollIntoView();\r\n          return;\r\n        }\r\n      }\r\n\r\n      // don't do anything on submissions\r\n      if (wasSubmissionRef.current === true) {\r\n        wasSubmissionRef.current = false;\r\n        return;\r\n      }\r\n\r\n      // otherwise go to the top on new locations\r\n      window.scrollTo(0, 0);\r\n    }, [location]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (transition.submission) {\r\n      wasSubmissionRef.current = true;\r\n    }\r\n  }, [transition]);\r\n}\r\n\r\nexport function useElementScrollRestoration({ apply }: { apply: boolean }, ref: MutableRefObject<HTMLElement | null>) {\r\n  let positions = useRef<Map<string, number>>(new Map()).current;\r\n  let location = useLocation();\r\n  let pendingLocation = useTransition().location;\r\n\r\n  useEffect(() => {\r\n    if (!ref.current || !apply) return;\r\n    if (pendingLocation) {\r\n      positions.set(location.key, ref.current.scrollTop);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pendingLocation, location]);\r\n\r\n  if (typeof window !== \"undefined\") {\r\n    // seriously, chill\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useLayoutEffect(() => {\r\n      if (!ref.current || !apply) return;\r\n      let y = positions.get(location.key);\r\n      ref.current.scrollTo(0, y || 0);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [location]);\r\n  }\r\n}\r\n", "import type { LoaderFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { Outlet } from \"@remix-run/react\";\r\nimport type { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport ServerError from \"~/components/ui/errors/ServerError\";\r\nimport SidebarIconsLayout from \"~/components/ui/layouts/SidebarIconsLayout\";\r\n\r\ntype LoaderData = {\r\n  metatags: MetaTagsDto;\r\n};\r\n\r\nexport let loader: LoaderFunction = async ({ request, params }) => {\r\n  const data: LoaderData = {\r\n    metatags: [{ title: `Knowledge Base` }],\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport default () => {\r\n  return (\r\n    <SidebarIconsLayout\r\n      label={{ align: \"right\" }}\r\n      items={[\r\n        {\r\n          name: \"Overview\",\r\n          href: \"/admin/knowledge-base\",\r\n          exact: true,\r\n          icon: (\r\n            <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"currentColor\">\r\n              <path d=\"M 39 0 L 39 2 L 46.5625 2 L 34 14.5625 L 30.71875 11.28125 L 30 10.59375 L 29.28125 11.28125 L 18 22.5625 L 14.71875 19.28125 L 14 18.59375 L 13.28125 19.28125 L 0.28125 32.28125 L 1.71875 33.71875 L 14 21.4375 L 17.28125 24.71875 L 18 25.40625 L 18.71875 24.71875 L 30 13.4375 L 33.28125 16.71875 L 34 17.40625 L 34.71875 16.71875 L 48 3.4375 L 48 11 L 50 11 L 50 0 Z M 42 14 L 42 50 L 44 50 L 44 14 Z M 48 15 L 48 50 L 50 50 L 50 15 Z M 30 20 L 30 50 L 32 50 L 32 20 Z M 36 20 L 36 50 L 38 50 L 38 20 Z M 24 24 L 24 50 L 26 50 L 26 24 Z M 12 28 L 12 50 L 14 50 L 14 28 Z M 18 30 L 18 50 L 20 50 L 20 30 Z M 6 34 L 6 50 L 8 50 L 8 34 Z M 0 38 L 0 50 L 2 50 L 2 38 Z\"></path>\r\n            </svg>\r\n          ),\r\n          iconSelected: (\r\n            <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"currentColor\">\r\n              <path d=\"M 38 0 L 38 4 L 43.1875 4 L 34 13.1875 L 31.40625 10.59375 L 30 9.15625 L 28.59375 10.59375 L 18 21.1875 L 15.40625 18.59375 L 14 17.15625 L 12.59375 18.59375 L 0.59375 30.59375 L 3.40625 33.40625 L 14 22.8125 L 16.59375 25.40625 L 18 26.84375 L 19.40625 25.40625 L 30 14.8125 L 32.59375 17.40625 L 34 18.84375 L 35.40625 17.40625 L 46 6.8125 L 46 12 L 50 12 L 50 0 Z M 44 15 L 44 50 L 48 50 L 48 15 Z M 30 20 L 30 50 L 34 50 L 34 20 Z M 37 20 L 37 50 L 41 50 L 41 20 Z M 23 24 L 23 50 L 27 50 L 27 24 Z M 16 30 L 16 50 L 20 50 L 20 30 Z M 9 31 L 9 50 L 13 50 L 13 31 Z M 2 38 L 2 50 L 6 50 L 6 38 Z\"></path>\r\n            </svg>\r\n          ),\r\n        },\r\n        {\r\n          name: \"Bases\",\r\n          href: \"/admin/knowledge-base/bases\",\r\n          icon: (\r\n            <svg className=\"h-5 w-5\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n              <path d=\"M 13 2 C 10.800781 2 9 3.800781 9 6 L 9 44.3125 L 9.03125 44.3125 C 9.195313 46.363281 10.910156 48 13 48 L 42 48 L 42 46 L 13 46 C 11.882813 46 11 45.117188 11 44 C 11 42.882813 11.882813 42 13 42 L 42 42 L 42 40 L 13 40 C 11.882813 40 11 39.117188 11 38 C 11 36.882813 11.882813 36 13 36 L 42 36 L 42 2 Z M 13 4 L 40 4 L 40 34 L 13 34 C 12.257813 34 11.597656 34.261719 11 34.621094 L 11 6 C 11 4.882813 11.882813 4 13 4 Z M 16 7 C 14.90625 7 14 7.90625 14 9 L 14 12 C 14 13.09375 14.90625 14 16 14 L 35 14 C 36.09375 14 37 13.09375 37 12 L 37 9 C 37 7.90625 36.09375 7 35 7 Z M 16 9 L 35 9 L 35 12 L 16 12 Z\"></path>\r\n            </svg>\r\n          ),\r\n          iconSelected: (\r\n            <svg className=\"h-5 w-5\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n              <path d=\"M 13 2 C 10.792969 2 9 3.792969 9 6 L 9 44.3125 L 9.03125 44.3125 C 9.195313 46.363281 10.910156 48 13 48 L 42 48 L 42 46 L 13 46 C 11.882813 46 11 45.117188 11 44 C 11 42.882813 11.882813 42 13 42 L 42 42 L 42 40 L 13 40 C 11.898438 40 11 39.101563 11 38 C 11 36.898438 11.898438 36 13 36 L 42 36 L 42 2 Z M 16 8 L 35 8 C 35.550781 8 36 8.449219 36 9 L 36 12 C 36 12.550781 35.550781 13 35 13 L 16 13 C 15.449219 13 15 12.550781 15 12 L 15 9 C 15 8.449219 15.449219 8 16 8 Z\"></path>\r\n            </svg>\r\n          ),\r\n        },\r\n        {\r\n          name: \"Danger\",\r\n          href: \"/admin/knowledge-base/danger\",\r\n          bottom: true,\r\n          icon: (\r\n            <svg className=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"\r\n              />\r\n            </svg>\r\n          ),\r\n          iconSelected: (\r\n            <svg className=\"h-5 w-5\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          ),\r\n        },\r\n      ]}\r\n    >\r\n      <Outlet />\r\n    </SidebarIconsLayout>\r\n  );\r\n};\r\n\r\nexport function ErrorBoundary() {\r\n  return <ServerError />;\r\n}\r\n", "import { useRouteError } from \"@remix-run/react\";\r\nimport Page404 from \"~/components/pages/Page404\";\r\n\r\nexport default function ServerError() {\r\n  const error = useRouteError();\r\n\r\n  // @ts-ignore\r\n  if (error?.status === 404) {\r\n    return <Page404 />;\r\n  }\r\n  return (\r\n    <div className=\"px-4 py-4\">\r\n      <div className=\"mx-auto w-full space-y-2 rounded-md border-2 border-dashed border-gray-300 bg-white p-12 text-center text-gray-800 shadow-md\">\r\n        <div className=\"flex flex-col justify-center space-y-1\">\r\n          <div className=\"mx-auto text-red-500\">\r\n            <svg className=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"currentColor\">\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          {/* @ts-ignore */}\r\n          <div className=\"text-2xl font-bold text-gray-800\">{error?.data?.message ?? error?.message ?? \"Error\"}</div>\r\n        </div>\r\n        {/* @ts-ignore */}\r\n        {error?.data?.description && <div className=\"text-gray-800\">{error?.data?.description}</div>}\r\n        {/* @ts-ignore */}\r\n        {error?.stack && (\r\n          <div className=\"pt-4\">\r\n            {/* @ts-ignore */}\r\n            <div className=\"break-words border-t border-dashed border-gray-300 pt-3 text-left text-sm text-gray-600\">{error.stack}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { Link, useLocation } from \"@remix-run/react\";\r\nimport clsx from \"clsx\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\nimport Tabs from \"../tabs/Tabs\";\r\nimport { useElementScrollRestoration } from \"~/utils/app/scroll-restoration\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\n\r\nexport type IconDto = {\r\n  name: string;\r\n  href: string;\r\n  icon?: React.ReactNode;\r\n  iconSelected?: React.ReactNode;\r\n  bottom?: boolean;\r\n  exact?: boolean;\r\n  textIcon?: string;\r\n  textIconSelected?: string;\r\n};\r\nexport default function SidebarIconsLayout({\r\n  children,\r\n  items,\r\n  label,\r\n}: {\r\n  children: React.ReactNode;\r\n  items: IconDto[];\r\n  label?: {\r\n    align: \"bottom\" | \"right\";\r\n  };\r\n}) {\r\n  const location = useLocation();\r\n  const [currentTab, setCurrentTab] = useState<IconDto>();\r\n\r\n  const mainElement = useRef<HTMLDivElement>(null);\r\n  useElementScrollRestoration({ apply: true }, mainElement);\r\n\r\n  useEffect(() => {\r\n    function findExactRoute(element: IconDto) {\r\n      if (element.exact) {\r\n        return UrlUtils.stripTrailingSlash(location.pathname) === UrlUtils.stripTrailingSlash(element.href);\r\n      } else {\r\n        return (location.pathname + location.search).includes(element.href);\r\n      }\r\n    }\r\n    const current = items.find((element) => findExactRoute(element));\r\n    setCurrentTab(current);\r\n  }, [items, location.pathname, location.search]);\r\n\r\n  return (\r\n    <div className=\"sm:flex sm:h-[calc(100vh-56px)] sm:flex-row sm:bg-gray-50\">\r\n      <div\r\n        className={clsx(\r\n          \"hidden flex-none flex-col items-center justify-between border-r border-gray-200 bg-gray-100 shadow-sm sm:flex\",\r\n          label?.align === \"bottom\" && \"lg:text-center\"\r\n        )}\r\n      >\r\n        <div className=\"flex w-full flex-col items-center \">\r\n          {items\r\n            .filter((f) => !f.bottom)\r\n            .map((item, idx) => {\r\n              return <IconLink key={idx} {...item} current={currentTab?.name === item.name} label={label} />;\r\n            })}\r\n        </div>\r\n        {items.filter((f) => f.bottom).length > 0 && (\r\n          <div className=\"flex w-full flex-col space-y-2 pb-5\">\r\n            {items\r\n              .filter((f) => f.bottom)\r\n              .map((item, idx) => {\r\n                return <IconLink key={idx} {...item} current={currentTab?.name === item.name} label={label} />;\r\n              })}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"w-full border-b border-gray-300 bg-white py-2 shadow-sm sm:hidden\">\r\n        <div className=\"mx-auto flex max-w-5xl items-center justify-between space-x-2 px-4 sm:px-6 lg:px-8 xl:max-w-7xl 2xl:max-w-screen-2xl\">\r\n          <Tabs\r\n            tabs={items.map((i) => {\r\n              return { name: i.name, routePath: i.href };\r\n            })}\r\n            className=\"flex-grow\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={mainElement} className=\"w-full overflow-x-hidden\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction IconLink({\r\n  name,\r\n  href,\r\n  icon,\r\n  current,\r\n  iconSelected,\r\n  label,\r\n  textIcon,\r\n  textIconSelected,\r\n}: {\r\n  name: string;\r\n  href: string;\r\n  icon?: React.ReactNode;\r\n  iconSelected?: React.ReactNode;\r\n  current: boolean;\r\n  label?: {\r\n    align: \"bottom\" | \"right\";\r\n  };\r\n  textIcon?: string;\r\n  textIconSelected?: string;\r\n}) {\r\n  return (\r\n    <div className={clsx(\"w-full px-1 py-1\")}>\r\n      <Link\r\n        to={href}\r\n        className={clsx(\r\n          \"flex w-11 items-center justify-center rounded-md border px-2 py-2 text-xs hover:border-gray-300 hover:bg-gray-200 hover:text-gray-900\",\r\n          current ? \" border-gray-300 bg-gray-200 text-gray-800\" : \"border-transparent text-gray-500\",\r\n          !label ? \"w-11\" : \"lg:w-auto lg:justify-start\",\r\n          label?.align === \"bottom\" && \"flex-col space-y-1\",\r\n          label?.align === \"right\" && \"flex-row space-x-2\"\r\n        )}\r\n      >\r\n        {textIcon !== undefined && textIconSelected !== undefined ? (\r\n          <div>\r\n            {current ? (\r\n              <EntityIcon className=\"h-5 w-5 text-gray-500\" icon={textIconSelected} />\r\n            ) : (\r\n              <EntityIcon className=\"h-5 w-5 text-gray-400\" icon={textIcon} />\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>{current ? iconSelected : icon}</div>\r\n        )}\r\n        {label !== undefined && (\r\n          <div className={clsx([icon, iconSelected, textIcon, textIconSelected].some((f) => f !== undefined) && \"hidden lg:block\")}>{name}</div>\r\n        )}\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n", "import { Link, useLocation, useNavigate } from \"@remix-run/react\";\r\nimport clsx from \"clsx\";\r\nimport { useEffect, useState } from \"react\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\n\r\nexport interface TabItem {\r\n  name: any;\r\n  routePath?: string;\r\n}\r\n\r\ninterface Props {\r\n  className?: string;\r\n  tabs: TabItem[];\r\n  asLinks?: boolean;\r\n  onSelected?: (idx: number) => void;\r\n  breakpoint?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\";\r\n  exact?: boolean;\r\n  selectedTab?: number;\r\n}\r\n\r\nexport default function Tabs({ className = \"\", breakpoint = \"md\", tabs = [], asLinks = true, onSelected, exact, selectedTab = 0 }: Props) {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const [selected, setSelected] = useState(selectedTab);\r\n\r\n  useEffect(() => {\r\n    if (selectedTab !== selected) {\r\n      setSelected(selectedTab);\r\n    }\r\n  }, [selected, selectedTab]);\r\n\r\n  useEffect(() => {\r\n    if (asLinks) {\r\n      let index = 0;\r\n      tabs.forEach((tab, idx) => {\r\n        if (exact) {\r\n          if (tab.routePath && UrlUtils.stripTrailingSlash(location.pathname) === UrlUtils.stripTrailingSlash(tab.routePath)) {\r\n            index = idx;\r\n          }\r\n        } else {\r\n          if (tab.routePath && (location.pathname + location.search).includes(tab.routePath)) {\r\n            index = idx;\r\n          }\r\n        }\r\n      });\r\n      setSelected(index);\r\n    }\r\n  }, [location.pathname, location.search, tabs, asLinks, exact]);\r\n\r\n  function selectTab(idx: number) {\r\n    const tab = tabs[idx];\r\n    setSelected(idx);\r\n    if (asLinks) {\r\n      if (tab?.routePath) {\r\n        navigate(tab.routePath);\r\n      }\r\n    } else {\r\n      if (onSelected) {\r\n        onSelected(idx);\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div className={className}>\r\n      <div\r\n        className={clsx(\r\n          breakpoint === \"sm\" && \"sm:hidden\",\r\n          breakpoint === \"md\" && \"md:hidden\",\r\n          breakpoint === \"lg\" && \"lg:hidden\",\r\n          breakpoint === \"xl\" && \"xl:hidden\",\r\n          breakpoint === \"2xl\" && \"2xl:hidden\"\r\n        )}\r\n      >\r\n        <label htmlFor=\"tabs\" className=\"sr-only\">\r\n          Select\r\n        </label>\r\n        <select\r\n          id=\"tabs\"\r\n          name=\"tabs\"\r\n          className=\"block w-full rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500\"\r\n          onChange={(e) => selectTab(Number(e.target.value))}\r\n          value={selected}\r\n        >\r\n          {tabs.map((tab, idx) => {\r\n            return (\r\n              <option key={tab.name} value={Number(idx)}>\r\n                {tab.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div\r\n        className={clsx(\r\n          breakpoint === \"sm\" && \"hidden sm:block\",\r\n          breakpoint === \"md\" && \"hidden md:block\",\r\n          breakpoint === \"lg\" && \"hidden lg:block\",\r\n          breakpoint === \"xl\" && \"hidden xl:block\",\r\n          breakpoint === \"2xl\" && \"hidden 2xl:block\"\r\n        )}\r\n      >\r\n        {(() => {\r\n          if (asLinks) {\r\n            return (\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {tabs\r\n                  .filter((f) => f.routePath)\r\n                  .map((tab, idx) => {\r\n                    return (\r\n                      <Link\r\n                        key={tab.name}\r\n                        to={tab.routePath ?? \"\"}\r\n                        className={clsx(\r\n                          \"truncate border\",\r\n                          idx === selected ? \"border-accent-300 bg-accent-100 text-accent-700\" : \"text-gray-500 hover:bg-gray-50 hover:text-gray-700\",\r\n                          \"rounded-sm border-transparent px-3 py-2 text-sm font-medium\"\r\n                        )}\r\n                        aria-current={idx === selected ? \"page\" : undefined}\r\n                      >\r\n                        {tab.name}\r\n                      </Link>\r\n                    );\r\n                  })}\r\n              </nav>\r\n            );\r\n          } else {\r\n            return (\r\n              <nav className=\"flex space-x-4\" aria-label=\"Tabs\">\r\n                {tabs.map((tab, idx) => {\r\n                  return (\r\n                    <button\r\n                      type=\"button\"\r\n                      key={idx}\r\n                      onClick={() => selectTab(idx)}\r\n                      className={clsx(\r\n                        \"truncate\",\r\n                        idx === selected ? \"border border-accent-300 bg-accent-100 text-accent-700\" : \"text-gray-500 hover:bg-gray-50 hover:text-gray-700\",\r\n                        \"rounded-sm border-transparent px-3 py-2 text-sm font-medium\"\r\n                      )}\r\n                    >\r\n                      {tab.name}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </nav>\r\n            );\r\n          }\r\n        })()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { Form, useNavigate, useOutlet, useParams } from \"@remix-run/react\";\r\nimport { useTypedActionData, useTypedLoaderData } from \"remix-typedjson\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport ActionResultModal from \"~/components/ui/modals/ActionResultModal\";\r\nimport SlideOverWideEmpty from \"~/components/ui/slideOvers/SlideOverWideEmpty\";\r\nimport KbArticleForm from \"~/modules/knowledgeBase/components/bases/KbArticleForm\";\r\nimport { KnowledgeBaseArticleWithDetails, getKbArticleById, updateKnowledgeBaseArticle } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  item: KnowledgeBaseArticleWithDetails;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const item = await getKbArticleById(params.id!);\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug!}/articles`);\r\n  }\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    item,\r\n  };\r\n  return json(data);\r\n};\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n};\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString() ?? \"\";\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const item = await getKbArticleById(params.id!);\r\n  if (!item) {\r\n    return json({ error: \"Article not found\" }, { status: 400 });\r\n  }\r\n\r\n  if (action === \"edit\") {\r\n    const content = form.get(\"content\")?.toString() ?? \"\";\r\n    const contentType = form.get(\"contentType\")?.toString() ?? \"\";\r\n\r\n    await updateKnowledgeBaseArticle(item.id, {\r\n      contentDraft: content,\r\n      contentType,\r\n    });\r\n\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}/${params.id}`);\r\n  }\r\n  return json({ error: \"Invalid action\" }, { status: 400 });\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const params = useParams();\r\n  const outlet = useOutlet();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Form method=\"post\" className=\"space-y-6\">\r\n      <input type=\"hidden\" readOnly name=\"action\" value=\"edit\" />\r\n      <EditPageLayout\r\n        title={`${data.item.title}`}\r\n        withHome={false}\r\n        menu={[\r\n          { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n          { title: \"Articles\", routePath: `/admin/knowledge-base/bases/${params.slug}/articles` },\r\n          { title: params.lang!, routePath: `/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}` },\r\n          {\r\n            title: data.item.title,\r\n            routePath: `/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}/${params.id}`,\r\n          },\r\n        ]}\r\n        buttons={\r\n          <>\r\n            <ButtonSecondary to={`/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}/${params.id}`}>\r\n              <div>Cancel</div>\r\n            </ButtonSecondary>\r\n            <LoadingButton type=\"submit\">\r\n              <div>Save draft</div>\r\n            </LoadingButton>\r\n          </>\r\n        }\r\n      >\r\n        <div className=\"space-y-2\">\r\n          <KbArticleForm item={data.item} />\r\n        </div>\r\n\r\n        <ActionResultModal actionData={actionData} showSuccess={false} />\r\n\r\n        <SlideOverWideEmpty\r\n          title={\"Article settings\"}\r\n          open={!!outlet}\r\n          onClose={() => {\r\n            navigate(\".\", { replace: true });\r\n          }}\r\n          className=\"sm:max-w-sm\"\r\n          overflowYScroll={true}\r\n        >\r\n          <div className=\"-mx-1 -mt-3\">\r\n            <div className=\"space-y-4\">{outlet}</div>\r\n          </div>\r\n        </SlideOverWideEmpty>\r\n      </EditPageLayout>\r\n    </Form>\r\n  );\r\n}\r\n", "import type { MouseEventHandler, ReactNode } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport LinkOrAhref from \"./LinkOrAhref\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  to?: string;\r\n  target?: undefined | \"_blank\";\r\n  disabled?: boolean;\r\n  destructive?: boolean;\r\n  isExternal?: boolean;\r\n  children: ReactNode;\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nexport default function ButtonPrimary({ className = \"\", type = \"button\", onClick, disabled, destructive, to, target, isExternal = false, children }: Props) {\r\n  const combinedClassName = clsx(\r\n    className,\r\n    \"inline-flex items-center space-x-2 px-3 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-gray-300\",\r\n    disabled && \"cursor-not-allowed opacity-75\",\r\n    !destructive && \"bg-gray-800\",\r\n    destructive && \"bg-red-600\",\r\n    !disabled && !destructive && !className && \"hover:bg-gray-900 focus:ring-gray-500 hover:text-gray-100\",\r\n    !disabled && destructive && \"hover:bg-red-700 focus:ring-red-500\"\r\n  );\r\n\r\n  return (\r\n    <span>\r\n      {(() => {\r\n        if (!to || disabled) {\r\n          return (\r\n            <button\r\n              onClick={onClick}\r\n              type={type}\r\n              disabled={disabled}\r\n              className={clsx(\r\n                className,\r\n                \"inline-flex items-center space-x-2 rounded-md border border-transparent px-3 py-2 text-sm font-medium text-white shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-300\",\r\n                disabled && \"cursor-not-allowed opacity-75\",\r\n                !destructive && \"bg-gray-800\",\r\n                destructive && \"bg-red-600\",\r\n                !disabled && !destructive && !className && \"hover:bg-gray-900 hover:text-gray-100 focus:ring-gray-500\",\r\n                !disabled && destructive && \"hover:bg-red-700 focus:ring-red-500\"\r\n              )}\r\n            >\r\n              {children}\r\n            </button>\r\n          );\r\n        } else if (to && isExternal) {\r\n          return (\r\n            <a href={to} className={combinedClassName} target={target}>\r\n              {children}\r\n            </a>\r\n          );\r\n        } else {\r\n          return (\r\n            <LinkOrAhref\r\n              to={disabled ? \"\" : to}\r\n              target={target}\r\n              className={clsx(\r\n                className,\r\n                \"borde1-transparent inline-flex items-center space-x-2 rounded-md border px-3 py-2 text-sm font-medium text-white shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-300\",\r\n                disabled && \"cursor-not-allowed opacity-75\",\r\n                !destructive && \"bg-gray-800\",\r\n                destructive && \"bg-red-600\",\r\n                !disabled && !destructive && !className && \"hover:bg-gray-900 hover:text-gray-100 focus:ring-gray-500\",\r\n                !disabled && destructive && \"hover:bg-red-700 focus:ring-red-500\"\r\n              )}\r\n            >\r\n              {children}\r\n            </LinkOrAhref>\r\n          );\r\n        }\r\n      })()}\r\n    </span>\r\n  );\r\n}\r\n", "import ButtonPrimary from \"./ButtonPrimary\";\r\nimport { forwardRef, MouseEventHandler, ReactNode, Ref, useImperativeHandle, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useNavigation } from \"@remix-run/react\";\r\n\r\nexport interface RefLoadingButton {\r\n  start: () => void;\r\n  stop: () => void;\r\n}\r\n\r\ninterface Props {\r\n  className?: string;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  disabled?: boolean;\r\n  children: ReactNode;\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n  to?: string;\r\n  actionName?: string;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst LoadingButton = ({ className, type = \"button\", children, disabled, onClick, to, actionName, isLoading }: Props, ref: Ref<RefLoadingButton>) => {\r\n  const navigation = useNavigation();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    start,\r\n    stop,\r\n  }));\r\n\r\n  function start() {\r\n    setLoading(true);\r\n  }\r\n  function stop() {\r\n    setLoading(false);\r\n  }\r\n  const submitting = navigation.state === \"submitting\";\r\n\r\n  function checkIsLoading() {\r\n    if (isLoading) {\r\n      return true;\r\n    }\r\n    const loadingOrSubmitting = loading || submitting;\r\n    if (actionName) {\r\n      return loadingOrSubmitting && navigation.state === \"submitting\" && navigation.formData.get(\"action\") === actionName;\r\n    }\r\n    return loadingOrSubmitting;\r\n  }\r\n\r\n  return (\r\n    <ButtonPrimary\r\n      disabled={disabled || checkIsLoading()}\r\n      className={clsx(className, \"relative justify-center\", checkIsLoading() && \"base-spinner cursor-not-allowed\")}\r\n      type={type}\r\n      onClick={onClick}\r\n      to={to}\r\n    >\r\n      {children}\r\n    </ButtonPrimary>\r\n  );\r\n};\r\n\r\nexport default forwardRef(LoadingButton);\r\n", "import { ReactNode } from \"react\";\r\nimport { useParams } from \"@remix-run/react\";\r\nimport BreadcrumbSimple from \"../breadcrumbs/BreadcrumbSimple\";\r\nimport Tabs, { TabItem } from \"../tabs/Tabs\";\r\n\r\ninterface Props {\r\n  title?: ReactNode;\r\n  menu?: {\r\n    title: string;\r\n    routePath?: string;\r\n  }[];\r\n  buttons?: ReactNode;\r\n  children: ReactNode;\r\n  withHome?: boolean;\r\n  tabs?: TabItem[];\r\n}\r\nexport default function EditPageLayout({ title, menu, buttons, children, withHome = true, tabs }: Props) {\r\n  const params = useParams();\r\n  const home = params.tenant ? `/app/${params.tenant}/dashboard` : \"/admin/dashboard\";\r\n  return (\r\n    <div className=\"mx-auto max-w-5xl space-y-3 px-4 pb-6 pt-3 sm:px-6 lg:px-8 xl:max-w-7xl 2xl:max-w-screen-2xl\">\r\n      <div className=\"space-y-1\">\r\n        <div className=\"flex items-center justify-between space-x-2\">\r\n          <h1 className=\"flex flex-1 items-center truncate text-xl font-medium\">{title}</h1>\r\n          <div className=\"flex items-center space-x-2\">{buttons}</div>\r\n        </div>\r\n\r\n        {menu && <BreadcrumbSimple home={withHome ? home : undefined} menu={menu} />}\r\n\r\n        {tabs && <Tabs tabs={tabs} className=\"flex-grow\" />}\r\n      </div>\r\n\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n", "import { Fragment, useEffect, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport clsx from \"clsx\";\r\n\r\nexport type ActionResultDto = { success?: ResultMessageDto; error?: ResultMessageDto };\r\ntype ResultMessageDto = { title?: string; description: string; closeText?: string };\r\ninterface Props {\r\n  actionResult?: ActionResultDto;\r\n  className?: string;\r\n  actionData?: { error?: string; success?: string } | null;\r\n  showSuccess?: boolean;\r\n  showError?: boolean;\r\n  onClosed?: () => void;\r\n}\r\n\r\nexport default function ActionResultModal({ actionResult, className, actionData, showSuccess = true, showError = true, onClosed }: Props) {\r\n  const [data, setData] = useState<ResultMessageDto>();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [status, setStatus] = useState(actionResult);\r\n\r\n  useEffect(() => {\r\n    setStatus(actionResult);\r\n  }, [actionResult]);\r\n\r\n  useEffect(() => {\r\n    if (actionData?.error && showError) {\r\n      setStatus({ error: { description: actionData.error } });\r\n    } else if (actionData?.success && showSuccess) {\r\n      setStatus({ success: { description: actionData.success } });\r\n    }\r\n  }, [actionData, showError, showSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (status?.success) {\r\n      setData({\r\n        title: status.success.title ?? \"Success\",\r\n        description: status.success.description,\r\n        closeText: status.success.closeText ?? \"Close\",\r\n      });\r\n      setOpen(true);\r\n    } else if (status?.error) {\r\n      setData({\r\n        title: status.error.title ?? \"Error\",\r\n        description: status.error.description,\r\n        closeText: status.error.closeText ?? \"Close\",\r\n      });\r\n      setOpen(true);\r\n    }\r\n  }, [status]);\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog as=\"div\" className={clsx(className, \"fixed inset-0 z-10 overflow-y-auto\")} onClose={() => setOpen(false)}>\r\n        <div className=\"flex min-h-screen items-end justify-center px-4 pb-20 pt-4 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span className=\"hidden sm:inline-block sm:h-screen sm:align-middle\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block w-full transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left align-bottom shadow-xl transition-all sm:my-8 sm:max-w-sm sm:p-6 sm:align-middle\">\r\n              <div>\r\n                {status?.success && (\r\n                  <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-100\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 text-green-600\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                    >\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n                {status?.error && (\r\n                  <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-red-100\">\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      className=\"h-6 w-6 text-red-600\"\r\n                      fill=\"none\"\r\n                      viewBox=\"0 0 24 24\"\r\n                      stroke=\"currentColor\"\r\n                      strokeWidth=\"2\"\r\n                    >\r\n                      <path\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                      />\r\n                    </svg>\r\n                  </div>\r\n                )}\r\n                <div className=\"mt-3 text-center sm:mt-5\">\r\n                  <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900\">\r\n                    {data?.title ?? \"\"}\r\n                  </Dialog.Title>\r\n                  <div className=\"mt-2\">\r\n                    <p className=\"text-sm text-gray-500\">{data?.description ?? \"\"}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-5 sm:mt-6\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={clsx(\r\n                    \"inline-flex w-full justify-center rounded-md border border-transparent px-4 py-2 text-base font-medium text-white shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 sm:text-sm\",\r\n                    status?.success && \"bg-teal-600 hover:bg-teal-700 focus:ring-teal-500\",\r\n                    status?.error && \"bg-gray-600 hover:bg-gray-700 focus:ring-gray-500\"\r\n                  )}\r\n                  onClick={() => {\r\n                    setOpen(false);\r\n                    if (onClosed) {\r\n                      onClosed();\r\n                    }\r\n                  }}\r\n                >\r\n                  {data?.closeText ?? \"Close\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n", "import { Fragment, ReactNode } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport XIcon from \"../icons/XIcon\";\r\nimport clsx from \"clsx\";\r\n\r\nexport default function SlideOverWideEmpty({\r\n  title,\r\n  description,\r\n  open,\r\n  children,\r\n  onClose,\r\n  className,\r\n  buttons,\r\n  withTitle = true,\r\n  withClose = true,\r\n  overflowYScroll,\r\n}: {\r\n  title?: string;\r\n  description?: string;\r\n  open: boolean;\r\n  children: ReactNode;\r\n  onClose: () => void;\r\n  className?: string;\r\n  buttons?: ReactNode;\r\n  withTitle?: boolean;\r\n  withClose?: boolean;\r\n  overflowYScroll?: boolean;\r\n}) {\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"relative\" onClose={onClose}>\r\n        <Transition.Child\r\n          as={Fragment}\r\n          enter=\"ease-in-out duration-500\"\r\n          enterFrom=\"opacity-0\"\r\n          enterTo=\"opacity-100\"\r\n          leave=\"ease-in-out duration-500\"\r\n          leaveFrom=\"opacity-100\"\r\n          leaveTo=\"opacity-0\"\r\n        >\r\n          <div className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n        </Transition.Child>\r\n\r\n        <div className=\"fixed inset-0 z-10 overflow-hidden\">\r\n          <div className=\"absolute inset-0 overflow-hidden\">\r\n            <div className=\"pointer-events-none fixed inset-y-0 right-0 flex max-w-full sm:pl-16\">\r\n              <Transition.Child\r\n                as={Fragment}\r\n                enter=\"transform transition ease-in-out duration-500 sm:duration-300\"\r\n                enterFrom=\"translate-x-full\"\r\n                enterTo=\"translate-x-0\"\r\n                leave=\"transform transition ease-in-out duration-500 sm:duration-300\"\r\n                leaveFrom=\"translate-x-0\"\r\n                leaveTo=\"translate-x-full\"\r\n              >\r\n                <Dialog.Panel\r\n                  className={clsx(\"pointer-events-auto w-screen max-w-2xl overflow-auto border border-gray-200 text-gray-800 shadow-lg\", className)}\r\n                >\r\n                  <div className=\"flex h-full flex-col overflow-y-auto bg-white pt-6 shadow-xl\">\r\n                    <div className=\"px-4 sm:px-6\">\r\n                      <div className=\"flex items-start justify-between\">\r\n                        {withTitle ? (\r\n                          <div className=\"flex flex-col\">\r\n                            <Dialog.Title className=\"text-lg font-medium text-gray-900\">{title}</Dialog.Title>\r\n                            {description && <p className=\"mt-1 text-sm text-gray-500\">{description}</p>}\r\n                          </div>\r\n                        ) : (\r\n                          <div>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\r\n                              onClick={onClose}\r\n                            >\r\n                              <span className=\"sr-only\">Close panel</span>\r\n                              <svg\r\n                                className=\"h-6 w-6\"\r\n                                aria-hidden=\"true\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                fill=\"none\"\r\n                                viewBox=\"0 0 24 24\"\r\n                                strokeWidth={1.5}\r\n                                stroke=\"currentColor\"\r\n                              >\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M11.25 4.5l7.5 7.5-7.5 7.5m-6-15l7.5 7.5-7.5 7.5\" />\r\n                              </svg>\r\n                            </button>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"ml-3 flex h-7 items-center space-x-4\">\r\n                          {buttons}\r\n                          {withClose && (\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"rounded-md bg-white text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2\"\r\n                              onClick={onClose}\r\n                            >\r\n                              <span className=\"sr-only\">Close panel</span>\r\n                              <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={clsx(\"relative mt-6 flex-1 border-t bg-gray-50 px-4 pb-6 pt-5 sm:px-6\", overflowYScroll && \"overflow-y-scroll\")}>\r\n                      {children}\r\n                    </div>\r\n                  </div>\r\n                </Dialog.Panel>\r\n              </Transition.Child>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n", "export default function XIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { useState } from \"react\";\r\nimport InputText from \"~/components/ui/input/InputText\";\r\nimport { KnowledgeBaseArticleWithDetails } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport NovelEditor from \"~/modules/novel/ui/editor\";\r\nimport useLocalStorage from \"~/utils/hooks/use-local-storage\";\r\n\r\nexport default function KbArticleForm({ item }: { item: KnowledgeBaseArticleWithDetails }) {\r\n  const [content, setContent] = useLocalStorage(item.id, item.contentDraft);\r\n  const [contentType, setContentType] = useState(item?.contentType ?? \"wysiwyg\");\r\n\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <div className=\"grid gap-3\">\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex justify-between space-x-2\">\r\n            {/* <label className=\"text-sm font-medium text-gray-600\">Article</label> */}\r\n            <div className=\"flex space-x-1 items-center\">\r\n              <button type=\"button\" onClick={() => setContentType(\"wysiwyg\")} className=\"text-xs hover:underline text-gray-600\">\r\n                <div className={clsx(contentType === \"wysiwyg\" ? \"font-bold\" : \"\")}>WYSIWYG</div>\r\n              </button>\r\n              <div>\u2022</div>\r\n              <button type=\"button\" onClick={() => setContentType(\"markdown\")} className=\"text-xs hover:underline text-gray-600\">\r\n                <div className={clsx(contentType === \"markdown\" ? \"font-bold\" : \"\")}>Markdown</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <input name=\"contentType\" value={contentType} readOnly hidden />\r\n          {contentType === \"wysiwyg\" ? (\r\n            <div>\r\n              <input type=\"hidden\" name=\"content\" value={content} readOnly hidden />\r\n              <NovelEditor content={content} onChange={(e) => setContent(e.html ?? \"\")} />\r\n              {/* <InputText autoFocus name=\"content\" placeholder=\"Content\" value={content} setValue={setContent} /> */}\r\n            </div>\r\n          ) : contentType === \"markdown\" ? (\r\n            <InputText\r\n              className=\"col-span-12\"\r\n              rows={6}\r\n              editor=\"monaco\"\r\n              editorLanguage=\"markdown\"\r\n              editorTheme=\"vs-dark\"\r\n              editorSize=\"screen\"\r\n              editorFontSize={14}\r\n              name=\"content\"\r\n              value={content}\r\n              setValue={(e) => setContent(e.toString())}\r\n            />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { forwardRef, ReactNode, Ref, RefObject, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\nimport HintTooltip from \"~/components/ui/tooltips/HintTooltip\";\r\nimport Editor from \"@monaco-editor/react\";\r\n\r\nexport interface RefInputText {\r\n  input: RefObject<HTMLInputElement> | RefObject<HTMLTextAreaElement>;\r\n}\r\n\r\nexport interface InputTextProps {\r\n  id?: string;\r\n  name?: string;\r\n  title?: string;\r\n  withLabel?: boolean;\r\n  value?: string;\r\n  setValue?: React.Dispatch<React.SetStateAction<string>>;\r\n  className?: string;\r\n  classNameBg?: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  readOnly?: boolean;\r\n  disabled?: boolean;\r\n  required?: boolean;\r\n  autoComplete?: string;\r\n  withTranslation?: boolean;\r\n  translationParams?: string[];\r\n  placeholder?: string;\r\n  pattern?: string;\r\n  rows?: number;\r\n  button?: ReactNode;\r\n  lowercase?: boolean;\r\n  uppercase?: boolean;\r\n  type?: string;\r\n  darkMode?: boolean;\r\n  hint?: ReactNode;\r\n  help?: string;\r\n  icon?: string;\r\n  editor?: string; // monaco\r\n  editorLanguage?: string; // \"javascript\" | \"typescript\" | \"html\" | \"css\" | \"json\";\r\n  editorHideLineNumbers?: boolean;\r\n  editorTheme?: \"vs-dark\" | \"light\";\r\n  editorFontSize?: number;\r\n  onBlur?: () => void;\r\n  borderless?: boolean;\r\n  editorSize?: \"sm\" | \"md\" | \"lg\" | \"auto\" | \"full\" | \"screen\";\r\n  autoFocus?: boolean;\r\n  isError?: boolean;\r\n  isSuccess?: boolean;\r\n}\r\nconst InputText = (\r\n  {\r\n    id,\r\n    name,\r\n    title,\r\n    withLabel = true,\r\n    value,\r\n    setValue,\r\n    className,\r\n    classNameBg,\r\n    help,\r\n    disabled = false,\r\n    readOnly = false,\r\n    required = false,\r\n    minLength,\r\n    maxLength,\r\n    autoComplete,\r\n    withTranslation = false,\r\n    translationParams = [],\r\n    placeholder,\r\n    pattern,\r\n    hint,\r\n    rows,\r\n    button,\r\n    lowercase,\r\n    uppercase,\r\n    type = \"text\",\r\n    darkMode,\r\n    icon,\r\n    editor,\r\n    editorLanguage,\r\n    editorHideLineNumbers,\r\n    editorTheme = \"vs-dark\",\r\n    editorFontSize,\r\n    onBlur,\r\n    borderless,\r\n    editorSize = \"sm\",\r\n    autoFocus,\r\n    isError,\r\n    isSuccess,\r\n  }: InputTextProps,\r\n  ref: Ref<RefInputText>\r\n) => {\r\n  const [actualValue, setActualValue] = useState<string>(value ?? \"\");\r\n\r\n  useEffect(() => {\r\n    setActualValue(value ?? \"\");\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange(actualValue);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [actualValue]);\r\n\r\n  useImperativeHandle(ref, () => ({ input }));\r\n  const input = useRef<HTMLInputElement>(null);\r\n  const textArea = useRef<HTMLTextAreaElement>(null);\r\n\r\n  function onChange(value: string) {\r\n    if (setValue) {\r\n      if (lowercase) {\r\n        setValue(value.toLowerCase());\r\n      } else if (uppercase) {\r\n        setValue(value.toUpperCase());\r\n      } else {\r\n        setValue(value);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={clsx(className, !darkMode && \"text-gray-800\")}>\r\n      {withLabel && (\r\n        <label htmlFor={name} className=\"mb-1 flex justify-between space-x-2 truncate text-xs font-medium text-gray-600\">\r\n          <div className=\"flex items-center space-x-1 truncate\">\r\n            <div className=\"flex space-x-1 truncate\">\r\n              <div className=\"truncate\">{title}</div>\r\n              {required && <div className=\"ml-1 text-red-500\">*</div>}\r\n            </div>\r\n            <div className=\"\">{help && <HintTooltip text={help} />}</div>\r\n          </div>\r\n          {/* {withTranslation && value?.includes(\".\") && (\r\n            <div className=\"truncate font-light italic text-slate-600\" title={t(value, translationParams ?? [])}>\r\n              {t(\"admin.pricing.i18n\")}:{\" \"}\r\n              {getTranslation(value) ? (\r\n                <span className=\"text-slate-600\">{t(value, translationParams ?? [])}</span>\r\n              ) : (\r\n                <span className=\"text-red-600\">{t(\"shared.invalid\")}</span>\r\n              )}\r\n            </div>\r\n          )} */}\r\n          {hint}\r\n        </label>\r\n      )}\r\n      <div className={clsx(\"relative flex w-full rounded-md\")}>\r\n        {editor === \"monaco\" && editorLanguage ? (\r\n          <>\r\n            <textarea hidden readOnly name={name} value={actualValue} />\r\n            <Editor\r\n              theme={editorTheme}\r\n              className={clsx(\r\n                \"block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500 sm:text-sm\",\r\n                editorSize === \"sm\" && \"h-32\",\r\n                editorSize === \"md\" && \"h-64\",\r\n                editorSize === \"lg\" && \"h-96\",\r\n                editorSize === \"auto\" && \"h-auto\",\r\n                editorSize === \"full\" && \"h-full\",\r\n                editorSize === \"screen\" && \"h-screen\",\r\n                className,\r\n                classNameBg,\r\n                editorHideLineNumbers && \"-ml-10\",\r\n                borderless && \"border-transparent\"\r\n              )}\r\n              defaultLanguage={editorLanguage}\r\n              language={editorLanguage}\r\n              options={{\r\n                fontSize: editorFontSize,\r\n                renderValidationDecorations: \"off\",\r\n              }}\r\n              value={actualValue}\r\n              onChange={(e) => setActualValue(e?.toString() ?? \"\")}\r\n            />\r\n          </>\r\n        ) : !rows ? (\r\n          <>\r\n            {icon && (\r\n              <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                <EntityIcon className=\"h-5 w-5 text-gray-400\" icon={icon} />\r\n              </div>\r\n            )}\r\n            <input\r\n              ref={input}\r\n              type={type}\r\n              id={id ?? name}\r\n              name={name}\r\n              autoComplete={autoComplete}\r\n              required={required}\r\n              minLength={minLength}\r\n              maxLength={maxLength}\r\n              // defaultValue={value}\r\n              value={actualValue}\r\n              onChange={(e) => setActualValue(e.currentTarget.value)}\r\n              onBlur={onBlur}\r\n              disabled={disabled}\r\n              readOnly={readOnly}\r\n              placeholder={placeholder}\r\n              pattern={pattern !== \"\" && pattern !== undefined ? pattern : undefined}\r\n              autoFocus={autoFocus}\r\n              className={clsx(\r\n                \"block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500 sm:text-sm\",\r\n                className,\r\n                classNameBg,\r\n                disabled || readOnly ? \"cursor-not-allowed bg-gray-100\" : \"hover:bg-gray-50 focus:bg-gray-50\",\r\n                icon && \"pl-10\",\r\n                borderless && \"border-transparent\",\r\n                isError && \"border-red-300 bg-red-100 text-red-900\",\r\n                isSuccess && \"bg-real-100 border-real-300 text-real-900\"\r\n              )}\r\n            />\r\n            {button}\r\n          </>\r\n        ) : (\r\n          <textarea\r\n            rows={rows}\r\n            ref={textArea}\r\n            id={id ?? name}\r\n            name={name}\r\n            autoComplete={autoComplete}\r\n            required={required}\r\n            minLength={minLength}\r\n            maxLength={maxLength}\r\n            // defaultValue={value}\r\n            value={actualValue}\r\n            onChange={(e) => setActualValue(e.currentTarget.value)}\r\n            disabled={disabled}\r\n            readOnly={readOnly}\r\n            placeholder={placeholder}\r\n            autoFocus={autoFocus}\r\n            className={clsx(\r\n              \"block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500 sm:text-sm\",\r\n              className,\r\n              classNameBg,\r\n              disabled || readOnly ? \"cursor-not-allowed bg-gray-100\" : \"hover:bg-gray-50 focus:bg-gray-50\",\r\n              borderless && \"border-transparent\",\r\n              isError && \"border-red-300 bg-red-100 text-red-900\",\r\n              isSuccess && \"bg-real-100 border-real-300 text-real-900\"\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default forwardRef(InputText);\r\n", "import clsx from \"clsx\";\r\n\r\ninterface Props {\r\n  text: string;\r\n  alwaysVisible?: boolean;\r\n}\r\n\r\nexport default function HintTooltip({ text, alwaysVisible }: Props) {\r\n  return (\r\n    <div className=\"group relative flex flex-col items-center\">\r\n      {!alwaysVisible && (\r\n        <svg className=\"h-4 w-4 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      )}\r\n      <div className={clsx(alwaysVisible ? \"\" : \"hidden\", \"absolute bottom-0 mb-6 w-40 flex-col items-center group-hover:flex sm:w-72 md:w-96\")}>\r\n        <span className=\"whitespace-no-wrap relative z-10 bg-black p-2 text-xs leading-none text-white shadow-lg\">{text}</span>\r\n        <div className=\"-mt-2 h-3 w-3 rotate-45 bg-black\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { useEffect, useRef, useState } from \"react\";\r\nimport { useEditor, EditorContent } from \"@tiptap/react\";\r\nimport { TiptapEditorProps } from \"./props\";\r\nimport { TiptapExtensions } from \"./extensions\";\r\nimport { useDebouncedCallback } from \"use-debounce\";\r\nimport { useCompletion } from \"../../lib/ai/react/useCompletion\";\r\nimport { toast } from \"react-hot-toast\";\r\n// import DEFAULT_EDITOR_CONTENT from \"./default-content\";\r\n\r\nimport { EditorBubbleMenu } from \"./components\";\r\nimport { Editor, JSONContent } from \"@tiptap/core\";\r\n\r\ntype ValueDto = {\r\n  html?: string;\r\n  json?: JSONContent;\r\n  text?: string;\r\n};\r\ninterface Props {\r\n  content: string | JSONContent;\r\n  onChange: (value: ValueDto) => void;\r\n}\r\nexport default function NovelEditor({ content, onChange }: Props) {\r\n  const [saveStatus, setSaveStatus] = useState(\"Saved\");\r\n\r\n  const [hydrated, setHydrated] = useState(false);\r\n\r\n  const debouncedUpdates = useDebouncedCallback(async ({ editor }: { editor: Editor }) => {\r\n    const json = editor.getJSON();\r\n    const html = editor.getHTML();\r\n    const text = editor.getText();\r\n    setSaveStatus(\"Saving...\");\r\n    // onChange(json);\r\n    onChange({\r\n      json,\r\n      html,\r\n      text,\r\n    });\r\n    // Simulate a delay in saving.\r\n    setTimeout(() => {\r\n      setSaveStatus(\"Saved\");\r\n    }, 500);\r\n  }, 750);\r\n\r\n  const editor = useEditor({\r\n    extensions: TiptapExtensions,\r\n    editorProps: TiptapEditorProps,\r\n    onUpdate: (e) => {\r\n      setSaveStatus(\"Unsaved\");\r\n      const selection = e.editor.state.selection;\r\n      const lastTwo = e.editor.state.doc.textBetween(selection.from - 2, selection.from, \"\\n\");\r\n      if (lastTwo === \"++\" && !isLoading) {\r\n        e.editor.commands.deleteRange({\r\n          from: selection.from - 2,\r\n          to: selection.from,\r\n        });\r\n        complete(e.editor.getText());\r\n        // va.track(\"Autocomplete Shortcut Used\");\r\n      } else {\r\n        debouncedUpdates(e);\r\n      }\r\n    },\r\n    autofocus: \"start\",\r\n  });\r\n\r\n  const { complete, completion, isLoading, stop } = useCompletion({\r\n    id: \"novel\",\r\n    api: \"/api/ai/generate\",\r\n    onResponse: (response) => {\r\n      if (response.status === 429) {\r\n        toast.error(\"You have reached your request limit for the day.\");\r\n        // va.track(\"Rate Limit Reached\");\r\n        return;\r\n      }\r\n    },\r\n    onFinish: (_prompt, completion) => {\r\n      editor?.commands.setTextSelection({\r\n        from: editor.state.selection.from - completion.length,\r\n        to: editor.state.selection.from,\r\n      });\r\n    },\r\n    onError: () => {\r\n      toast.error(\"Something went wrong.\");\r\n    },\r\n  });\r\n\r\n  const prev = useRef(\"\");\r\n\r\n  // Insert chunks of the generated text\r\n  useEffect(() => {\r\n    const diff = completion.slice(prev.current.length);\r\n    prev.current = completion;\r\n    editor?.commands.insertContent(diff, {\r\n      parseOptions: {\r\n        preserveWhitespace: \"full\",\r\n      },\r\n    });\r\n  }, [isLoading, editor, completion]);\r\n\r\n  useEffect(() => {\r\n    // if user presses escape or cmd + z and it's loading,\r\n    // stop the request, delete the completion, and insert back the \"++\"\r\n    const onKeyDown = (e: KeyboardEvent) => {\r\n      if (e.key === \"Escape\" || (e.metaKey && e.key === \"z\")) {\r\n        stop();\r\n        if (e.key === \"Escape\") {\r\n          editor?.commands.deleteRange({\r\n            from: editor.state.selection.from - completion.length,\r\n            to: editor.state.selection.from,\r\n          });\r\n        }\r\n        editor?.commands.insertContent(\"++\");\r\n      }\r\n    };\r\n    const mousedownHandler = (e: MouseEvent) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      stop();\r\n      if (window.confirm(\"AI writing paused. Continue?\")) {\r\n        complete(editor?.getText() || \"\");\r\n      }\r\n    };\r\n    if (isLoading) {\r\n      document.addEventListener(\"keydown\", onKeyDown);\r\n      window.addEventListener(\"mousedown\", mousedownHandler);\r\n    } else {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n      window.removeEventListener(\"mousedown\", mousedownHandler);\r\n    }\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n      window.removeEventListener(\"mousedown\", mousedownHandler);\r\n    };\r\n  }, [stop, isLoading, editor, complete, completion.length]);\r\n\r\n  // Hydrate the editor with the content from localStorage.\r\n  useEffect(() => {\r\n    if (editor && content && !hydrated) {\r\n      editor.commands.setContent(content);\r\n      setHydrated(true);\r\n    }\r\n  }, [editor, content, hydrated]);\r\n\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        editor?.chain().focus().run();\r\n      }}\r\n      className=\"relative min-h-[500px] w-full max-w-screen-lg border-stone-200 bg-white p-12 px-8 sm:mb-[calc(20vh)] sm:rounded-lg sm:border sm:px-12 sm:shadow-lg\"\r\n    >\r\n      <div className=\"absolute right-5 top-5 mb-5 rounded-lg bg-stone-100 px-2 py-1 text-sm text-stone-400\">{saveStatus}</div>\r\n      {/* value: {JSON.stringify(value)} */}\r\n      {editor ? (\r\n        <>\r\n          <EditorContent editor={editor} />\r\n          <EditorBubbleMenu editor={editor} />\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n", "import { EditorView } from \"@tiptap/pm/view\";\r\n// import { BlobResult } from \"@vercel/blob\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nexport const handleImageUpload = (file: File, view: EditorView, event: ClipboardEvent | DragEvent | Event) => {\r\n  // check if the file is an image\r\n  if (!file.type.includes(\"image/\")) {\r\n    toast.error(\"File type not supported.\");\r\n\r\n    // check if the file size is less than 50MB\r\n  } else if (file.size / 1024 / 1024 > 50) {\r\n    toast.error(\"File size too big (max 50MB).\");\r\n  } else {\r\n    // const reader = new FileReader();\r\n    // reader.onload = (e) => {\r\n    //   const { schema } = view.state;\r\n    //   const node = schema.nodes.image.create({\r\n    //     src: e.target?.result,\r\n    //     alt: file,\r\n    //     title: file.name,\r\n    //   }); // creates the image element\r\n    //   const transaction = view.state.tr.replaceSelectionWith(node);\r\n    //   view.dispatch(transaction);\r\n    // };\r\n    // reader.readAsDataURL(file);\r\n\r\n    // upload to Vercel Blob\r\n    toast.promise(\r\n      fetch(\"/api/ai/upload\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": file?.type || \"application/octet-stream\",\r\n          \"x-filename\": file?.name || \"image.png\",\r\n        },\r\n        body: file,\r\n      }).then(async (res) => {\r\n        // Successfully uploaded image\r\n        if (res.status === 200) {\r\n          const { url } = await res.json();\r\n          // preload the image\r\n          let image = new Image();\r\n          image.src = url;\r\n          image.onload = () => {\r\n            insertImage(url);\r\n          };\r\n\r\n          // No blob store configured\r\n        } else if (res.status === 401) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e) => {\r\n            insertImage(e.target?.result as string);\r\n          };\r\n          reader.readAsDataURL(file);\r\n          throw new Error(\"`BLOB_READ_WRITE_TOKEN` environment variable not found, reading image locally instead.\");\r\n\r\n          // Unknown error\r\n        } else {\r\n          throw new Error(`Error uploading image. Please try again.`);\r\n        }\r\n      }),\r\n      {\r\n        loading: \"Uploading image...\",\r\n        success: \"Image uploaded successfully.\",\r\n        error: (e) => e.message,\r\n      }\r\n    );\r\n  }\r\n\r\n  const insertImage = (url: string) => {\r\n    // for paste events\r\n    if (event instanceof ClipboardEvent) {\r\n      return view.dispatch(\r\n        view.state.tr.replaceSelectionWith(\r\n          view.state.schema.nodes.image.create({\r\n            src: url,\r\n            alt: file.name,\r\n            title: file.name,\r\n          })\r\n        )\r\n      );\r\n\r\n      // for drag and drop events\r\n    } else if (event instanceof DragEvent) {\r\n      const { schema } = view.state;\r\n      const coordinates = view.posAtCoords({\r\n        left: event.clientX,\r\n        top: event.clientY,\r\n      });\r\n      const node = schema.nodes.image.create({\r\n        src: url,\r\n        alt: file.name,\r\n        title: file.name,\r\n      }); // creates the image element\r\n      const transaction = view.state.tr.insert(coordinates?.pos || 0, node); // places it in the correct position\r\n      return view.dispatch(transaction);\r\n\r\n      // for input upload events\r\n    } else if (event instanceof Event) {\r\n      return view.dispatch(\r\n        view.state.tr.replaceSelectionWith(\r\n          view.state.schema.nodes.image.create({\r\n            src: url,\r\n            alt: file.name,\r\n            title: file.name,\r\n          })\r\n        )\r\n      );\r\n    }\r\n  };\r\n};\r\n", "import { handleImageUpload } from \"~/modules/novel/lib/utils/editor\";\r\nimport { EditorProps } from \"@tiptap/pm/view\";\r\n\r\nexport const TiptapEditorProps: EditorProps = {\r\n  attributes: {\r\n    class: \"prose-lg prose-headings:font-display focus:outline-none\",\r\n  },\r\n  handleDOMEvents: {\r\n    keydown: (_view, event) => {\r\n      // prevent default event listeners from firing when slash command is active\r\n      if ([\"ArrowUp\", \"ArrowDown\", \"Enter\"].includes(event.key)) {\r\n        const slashCommand = document.querySelector(\"#slash-command\");\r\n        if (slashCommand) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n  },\r\n  handlePaste: (view, event, _slice) => {\r\n    if (event.clipboardData && event.clipboardData.files && event.clipboardData.files[0]) {\r\n      event.preventDefault();\r\n      const file = event.clipboardData.files[0];\r\n      return handleImageUpload(file, view, event);\r\n    }\r\n    return false;\r\n  },\r\n  handleDrop: (view, event, _slice, moved) => {\r\n    if (!moved && event.dataTransfer && event.dataTransfer.files && event.dataTransfer.files[0]) {\r\n      event.preventDefault();\r\n      const file = event.dataTransfer.files[0];\r\n      return handleImageUpload(file, view, event);\r\n    }\r\n    return false;\r\n  },\r\n};\r\n", "import StarterKit from \"@tiptap/starter-kit\";\r\nimport HorizontalRule from \"@tiptap/extension-horizontal-rule\";\r\nimport TiptapLink from \"@tiptap/extension-link\";\r\nimport TiptapImage from \"@tiptap/extension-image\";\r\nimport Placeholder from \"@tiptap/extension-placeholder\";\r\nimport TiptapUnderline from \"@tiptap/extension-underline\";\r\nimport TextStyle from \"@tiptap/extension-text-style\";\r\nimport { Color } from \"@tiptap/extension-color\";\r\n\r\nimport SlashCommand from \"./slash-command\";\r\nimport { InputRule } from \"@tiptap/core\";\r\n\r\nexport const TiptapExtensions = [\r\n  StarterKit.configure({\r\n    bulletList: {\r\n      HTMLAttributes: {\r\n        class: \"list-disc list-outside leading-3\",\r\n      },\r\n    },\r\n    orderedList: {\r\n      HTMLAttributes: {\r\n        class: \"list-decimal list-outside leading-3\",\r\n      },\r\n    },\r\n    listItem: {\r\n      HTMLAttributes: {\r\n        class: \"leading-normal\",\r\n      },\r\n    },\r\n    blockquote: {\r\n      HTMLAttributes: {\r\n        class: \"border-l-4 border-stone-700\",\r\n      },\r\n    },\r\n    codeBlock: {\r\n      HTMLAttributes: {\r\n        class: \"rounded-sm bg-stone-100 p-5 font-mono font-medium text-stone-800\",\r\n      },\r\n    },\r\n    code: {\r\n      HTMLAttributes: {\r\n        class: \"rounded-md bg-stone-200 px-1.5 py-1 font-mono font-medium text-black\",\r\n      },\r\n    },\r\n    horizontalRule: false,\r\n    dropcursor: {\r\n      color: \"#DBEAFE\",\r\n      width: 4,\r\n    },\r\n    gapcursor: false,\r\n  }),\r\n  HorizontalRule.extend({\r\n    addInputRules() {\r\n      return [\r\n        new InputRule({\r\n          find: /^(?:---|\u2014-|___\\s|\\*\\*\\*\\s)$/,\r\n          handler: ({ state, range, match }) => {\r\n            const attributes = {};\r\n\r\n            const { tr } = state;\r\n            const start = range.from;\r\n            let end = range.to;\r\n\r\n            tr.insert(start - 1, this.type.create(attributes)).delete(tr.mapping.map(start), tr.mapping.map(end));\r\n          },\r\n        }),\r\n      ];\r\n    },\r\n  }).configure({\r\n    HTMLAttributes: {\r\n      class: \"mt-4 mb-6 border-t border-stone-300\",\r\n    },\r\n  }),\r\n  TiptapLink.configure({\r\n    HTMLAttributes: {\r\n      class: \"text-stone-600 underline underline-offset-[3px] hover:text-stone-700 transition-colors cursor-pointer\",\r\n    },\r\n  }),\r\n  TiptapImage.configure({\r\n    allowBase64: true,\r\n    HTMLAttributes: {\r\n      class: \"rounded-lg border border-stone-200\",\r\n    },\r\n  }),\r\n  Placeholder.configure({\r\n    placeholder: ({ node }) => {\r\n      if (node.type.name === \"heading\") {\r\n        return `Heading ${node.attrs.level}`;\r\n      }\r\n      return \"Press '/' for commands, or '++' for AI autocomplete...\";\r\n    },\r\n    includeChildren: true,\r\n  }),\r\n  SlashCommand,\r\n  TiptapUnderline,\r\n  TextStyle,\r\n  Color,\r\n];\r\n", "import React, { useState, useEffect, useCallback, ReactNode, useRef, useLayoutEffect } from \"react\";\r\nimport { Editor, Range, Extension } from \"@tiptap/core\";\r\nimport Suggestion from \"@tiptap/suggestion\";\r\nimport { ReactRenderer } from \"@tiptap/react\";\r\nimport { useCompletion } from \"../../../lib/ai/react/useCompletion\";\r\nimport tippy from \"tippy.js\";\r\nimport { Heading1, Heading2, Heading3, List, ListOrdered, Text, TextQuote, Image as ImageIcon, Code } from \"lucide-react\";\r\nimport LoadingCircle from \"~/modules/novel/ui/shared/loading-circle\";\r\nimport { toast } from \"react-hot-toast\";\r\n// import va from \"@vercel/analytics\";\r\nimport Magic from \"~/modules/novel/ui/shared/magic\";\r\nimport { handleImageUpload } from \"~/modules/novel/lib/utils/editor\";\r\n\r\ninterface CommandItemProps {\r\n  title: string;\r\n  description: string;\r\n  icon: ReactNode;\r\n}\r\n\r\ninterface Command {\r\n  editor: Editor;\r\n  range: Range;\r\n}\r\n\r\nconst CommandExtension = Extension.create({\r\n  name: \"slash-command\",\r\n  addOptions() {\r\n    return {\r\n      suggestion: {\r\n        char: \"/\",\r\n        command: ({ editor, range, props }: { editor: Editor; range: Range; props: any }) => {\r\n          props.command({ editor, range });\r\n        },\r\n      },\r\n    };\r\n  },\r\n  addProseMirrorPlugins() {\r\n    return [\r\n      Suggestion({\r\n        editor: this.editor,\r\n        ...this.options.suggestion,\r\n      }),\r\n    ];\r\n  },\r\n});\r\n\r\nconst getSuggestionItems = ({ query }: { query: string }) => {\r\n  return [\r\n    {\r\n      title: \"Continue writing\",\r\n      description: \"Use AI to expand your thoughts.\",\r\n      icon: <Magic className=\"w-7 text-black\" />,\r\n    },\r\n    // {\r\n    //   title: \"Send Feedback\",\r\n    //   description: \"Let us know how we can improve.\",\r\n    //   icon: <MessageSquarePlus size={18} />,\r\n    //   command: ({ editor, range }: Command) => {\r\n    //     editor.chain().focus().deleteRange(range).run();\r\n    //     window.open(\"/feedback\", \"_blank\");\r\n    //   },\r\n    // },\r\n    {\r\n      title: \"Text\",\r\n      description: \"Just start typing with plain text.\",\r\n      icon: <Text size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).toggleNode(\"paragraph\", \"paragraph\").run();\r\n      },\r\n    },\r\n    {\r\n      title: \"Heading 1\",\r\n      description: \"Big section heading.\",\r\n      icon: <Heading1 size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).setNode(\"heading\", { level: 1 }).run();\r\n      },\r\n    },\r\n    {\r\n      title: \"Heading 2\",\r\n      description: \"Medium section heading.\",\r\n      icon: <Heading2 size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).setNode(\"heading\", { level: 2 }).run();\r\n      },\r\n    },\r\n    {\r\n      title: \"Heading 3\",\r\n      description: \"Small section heading.\",\r\n      icon: <Heading3 size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).setNode(\"heading\", { level: 3 }).run();\r\n      },\r\n    },\r\n    {\r\n      title: \"Bullet List\",\r\n      description: \"Create a simple bullet list.\",\r\n      icon: <List size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).toggleBulletList().run();\r\n      },\r\n    },\r\n    {\r\n      title: \"Numbered List\",\r\n      description: \"Create a list with numbering.\",\r\n      icon: <ListOrdered size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).toggleOrderedList().run();\r\n      },\r\n    },\r\n    {\r\n      title: \"Quote\",\r\n      description: \"Capture a quote.\",\r\n      icon: <TextQuote size={18} />,\r\n      command: ({ editor, range }: Command) => editor.chain().focus().deleteRange(range).toggleNode(\"paragraph\", \"paragraph\").toggleBlockquote().run(),\r\n    },\r\n    {\r\n      title: \"Code\",\r\n      description: \"Capture a code snippet.\",\r\n      icon: <Code size={18} />,\r\n      command: ({ editor, range }: Command) => editor.chain().focus().deleteRange(range).toggleCodeBlock().run(),\r\n    },\r\n    {\r\n      title: \"Image\",\r\n      description: \"Upload an image from your computer.\",\r\n      icon: <ImageIcon size={18} />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).run();\r\n        // upload image\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.accept = \"image/*\";\r\n        input.onchange = async (event) => {\r\n          if (input.files?.length) {\r\n            const file = input.files[0];\r\n            return handleImageUpload(file, editor.view, event);\r\n          }\r\n        };\r\n        input.click();\r\n      },\r\n    },\r\n    {\r\n      title: \"Divider\",\r\n      description: \"Insert a divider.\",\r\n      icon: <hr className=\"h-1 w-5\" />,\r\n      command: ({ editor, range }: Command) => {\r\n        editor.chain().focus().deleteRange(range).setHorizontalRule().run();\r\n      },\r\n    },\r\n  ].filter((item) => {\r\n    if (typeof query === \"string\" && query.length > 0) {\r\n      return item.title.toLowerCase().includes(query.toLowerCase());\r\n    }\r\n    return true;\r\n  });\r\n};\r\n\r\nexport const updateScrollView = (container: HTMLElement, item: HTMLElement) => {\r\n  const containerHeight = container.offsetHeight;\r\n  const itemHeight = item ? item.offsetHeight : 0;\r\n\r\n  const top = item.offsetTop;\r\n  const bottom = top + itemHeight;\r\n\r\n  if (top < container.scrollTop) {\r\n    container.scrollTop -= container.scrollTop - top + 5;\r\n  } else if (bottom > containerHeight + container.scrollTop) {\r\n    container.scrollTop += bottom - containerHeight - container.scrollTop + 5;\r\n  }\r\n};\r\n\r\nconst CommandList = ({ items, command, editor, range }: { items: CommandItemProps[]; command: any; editor: any; range: any }) => {\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n  const { complete, isLoading } = useCompletion({\r\n    id: \"novel\",\r\n    api: \"/api/ai/generate\",\r\n    onResponse: (response) => {\r\n      if (response.status === 429) {\r\n        toast.error(\"You have reached your request limit for the day.\");\r\n        // va.track(\"Rate Limit Reached\");\r\n        return;\r\n      }\r\n      editor.chain().focus().deleteRange(range).run();\r\n    },\r\n    onFinish: (_prompt, completion) => {\r\n      // highlight the generated text\r\n      editor.commands.setTextSelection({\r\n        from: range.from,\r\n        to: range.from + completion.length,\r\n      });\r\n    },\r\n    onError: () => {\r\n      toast.error(\"Something went wrong.\");\r\n    },\r\n  });\r\n\r\n  const selectItem = useCallback(\r\n    (index: number) => {\r\n      const item = items[index];\r\n      // va.track(\"Slash Command Used\", {\r\n      //   command: item.title,\r\n      // });\r\n      if (item) {\r\n        if (item.title === \"Continue writing\") {\r\n          const text = editor.getText();\r\n          complete(text);\r\n        } else {\r\n          command(item);\r\n        }\r\n      }\r\n    },\r\n    [complete, command, editor, items]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const navigationKeys = [\"ArrowUp\", \"ArrowDown\", \"Enter\"];\r\n    const onKeyDown = (e: KeyboardEvent) => {\r\n      if (navigationKeys.includes(e.key)) {\r\n        e.preventDefault();\r\n        if (e.key === \"ArrowUp\") {\r\n          setSelectedIndex((selectedIndex + items.length - 1) % items.length);\r\n          return true;\r\n        }\r\n        if (e.key === \"ArrowDown\") {\r\n          setSelectedIndex((selectedIndex + 1) % items.length);\r\n          return true;\r\n        }\r\n        if (e.key === \"Enter\") {\r\n          selectItem(selectedIndex);\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", onKeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown);\r\n    };\r\n  }, [items, selectedIndex, setSelectedIndex, selectItem]);\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(0);\r\n  }, [items]);\r\n\r\n  const commandListContainer = useRef<HTMLDivElement>(null);\r\n\r\n  useLayoutEffect(() => {\r\n    const container = commandListContainer?.current;\r\n\r\n    const item = container?.children[selectedIndex] as HTMLElement;\r\n\r\n    if (item && container) updateScrollView(container, item);\r\n  }, [selectedIndex]);\r\n\r\n  return items.length > 0 ? (\r\n    <div\r\n      id=\"slash-command\"\r\n      ref={commandListContainer}\r\n      className=\"z-50 h-auto max-h-[330px] w-72 overflow-y-auto scroll-smooth rounded-md border border-stone-200 bg-white px-1 py-2 shadow-md transition-all\"\r\n    >\r\n      {items.map((item: CommandItemProps, index: number) => {\r\n        return (\r\n          <button\r\n            type=\"button\"\r\n            className={`flex w-full items-center space-x-2 rounded-md px-2 py-1 text-left text-sm text-stone-900 hover:bg-stone-100 ${\r\n              index === selectedIndex ? \"bg-stone-100 text-stone-900\" : \"\"\r\n            }`}\r\n            key={index}\r\n            onClick={() => selectItem(index)}\r\n          >\r\n            <div className=\"flex h-10 w-10 items-center justify-center rounded-md border border-stone-200 bg-white\">\r\n              {item.title === \"Continue writing\" && isLoading ? <LoadingCircle /> : item.icon}\r\n            </div>\r\n            <div>\r\n              <p className=\"font-medium\">{item.title}</p>\r\n              <p className=\"text-xs text-stone-500\">{item.description}</p>\r\n            </div>\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nconst renderItems = () => {\r\n  let component: ReactRenderer | null = null;\r\n  let popup: any | null = null;\r\n\r\n  return {\r\n    onStart: (props: { editor: Editor; clientRect: DOMRect }) => {\r\n      component = new ReactRenderer(CommandList, {\r\n        props,\r\n        editor: props.editor,\r\n      });\r\n\r\n      // @ts-ignore\r\n      popup = tippy(\"body\", {\r\n        getReferenceClientRect: props.clientRect,\r\n        appendTo: () => document.body,\r\n        content: component.element,\r\n        showOnCreate: true,\r\n        interactive: true,\r\n        trigger: \"manual\",\r\n        placement: \"bottom-start\",\r\n      });\r\n    },\r\n    onUpdate: (props: { editor: Editor; clientRect: DOMRect }) => {\r\n      component?.updateProps(props);\r\n\r\n      popup &&\r\n        popup[0].setProps({\r\n          getReferenceClientRect: props.clientRect,\r\n        });\r\n    },\r\n    onKeyDown: (props: { event: KeyboardEvent }) => {\r\n      if (props.event.key === \"Escape\") {\r\n        popup?.[0].hide();\r\n\r\n        return true;\r\n      }\r\n\r\n      // @ts-ignore\r\n      return component?.ref?.onKeyDown(props);\r\n    },\r\n    onExit: () => {\r\n      popup?.[0].destroy();\r\n      component?.destroy();\r\n    },\r\n  };\r\n};\r\n\r\nconst SlashCommand = CommandExtension.configure({\r\n  suggestion: {\r\n    items: getSuggestionItems,\r\n    render: renderItems,\r\n  },\r\n});\r\n\r\nexport default SlashCommand;\r\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport useSWRMutation from \"swr/mutation\";\r\nimport useSWR from \"swr\";\r\n\r\nimport { createChunkDecoder } from \"./utils\";\r\nimport { UseCompletionOptions, RequestOptions } from \"./types\";\r\n\r\nexport type UseCompletionHelpers = {\r\n  /** The current completion result */\r\n  completion: string;\r\n  /**\r\n   * Send a new prompt to the API endpoint and update the completion state.\r\n   */\r\n  complete: (prompt: string, options?: RequestOptions) => Promise<string | null | undefined>;\r\n  /** The error object of the API request */\r\n  error: undefined | Error;\r\n  /**\r\n   * Abort the current API request but keep the generated tokens.\r\n   */\r\n  stop: () => void;\r\n  /**\r\n   * Update the `completion` state locally.\r\n   */\r\n  setCompletion: (completion: string) => void;\r\n  /** The current value of the input */\r\n  input: string;\r\n  /** setState-powered method to update the input value */\r\n  setInput: React.Dispatch<React.SetStateAction<string>>;\r\n  /**\r\n   * An input/textarea-ready onChange handler to control the value of the input\r\n   * @example\r\n   * ```jsx\r\n   * <input onChange={handleInputChange} value={input} />\r\n   * ```\r\n   */\r\n  handleInputChange: (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  /**\r\n   * Form submission handler to automattically reset input and append a user message\r\n   * @example\r\n   * ```jsx\r\n   * <form onSubmit={handleSubmit}>\r\n   *  <input onChange={handleInputChange} value={input} />\r\n   * </form>\r\n   * ```\r\n   */\r\n  handleSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\r\n  /** Whether the API request is in progress */\r\n  isLoading: boolean;\r\n};\r\n\r\nexport function useCompletion({\r\n  api,\r\n  id,\r\n  initialCompletion = \"\",\r\n  initialInput = \"\",\r\n  headers,\r\n  body,\r\n  onResponse,\r\n  onFinish,\r\n  onError,\r\n}: UseCompletionOptions): UseCompletionHelpers {\r\n  // Generate an unique id for the completion if not provided.\r\n  const completionId = id;\r\n\r\n  // Store the completion state in SWR, using the completionId as the key to share states.\r\n  const { data, mutate } = useSWR<string>([api, completionId], null, {\r\n    fallbackData: initialCompletion,\r\n  });\r\n  const completion = data!;\r\n\r\n  // Abort controller to cancel the current API call.\r\n  const [abortController, setAbortController] = useState<AbortController | null>(null);\r\n\r\n  const extraMetadataRef = useRef<any>({\r\n    headers,\r\n    body,\r\n  });\r\n  useEffect(() => {\r\n    extraMetadataRef.current = {\r\n      headers,\r\n      body,\r\n    };\r\n  }, [headers, body]);\r\n\r\n  // Actual mutation hook to send messages to the API endpoint and update the\r\n  // chat state.\r\n  const { error, trigger, isMutating } = useSWRMutation<\r\n    string | null,\r\n    any,\r\n    [string, string],\r\n    {\r\n      prompt: string;\r\n      options?: RequestOptions;\r\n    }\r\n  >(\r\n    [api, completionId],\r\n    async (_, { arg }) => {\r\n      try {\r\n        const { prompt, options } = arg;\r\n\r\n        const abortController = new AbortController();\r\n        setAbortController(abortController);\r\n\r\n        // Empty the completion immediately.\r\n        mutate(\"\", false);\r\n\r\n        const res = await fetch(api, {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            prompt,\r\n            ...extraMetadataRef.current.body,\r\n            ...options?.body,\r\n          }),\r\n          headers: {\r\n            ...extraMetadataRef.current.headers,\r\n            ...options?.headers,\r\n          },\r\n          signal: abortController.signal,\r\n        }).catch((err) => {\r\n          throw err;\r\n        });\r\n\r\n        if (onResponse) {\r\n          try {\r\n            await onResponse(res);\r\n          } catch (err) {\r\n            throw err;\r\n          }\r\n        }\r\n\r\n        if (!res.ok) {\r\n          throw new Error((await res.text()) || \"Failed to fetch the chat response.\");\r\n        }\r\n\r\n        if (!res.body) {\r\n          throw new Error(\"The response body is empty.\");\r\n        }\r\n\r\n        let result = \"\";\r\n        const reader = res.body.getReader();\r\n        const decoder = createChunkDecoder();\r\n\r\n        while (true) {\r\n          const { done, value } = await reader.read();\r\n          if (done) {\r\n            break;\r\n          }\r\n\r\n          // Update the completion state with the new message tokens.\r\n          result += decoder(value);\r\n          mutate(result, false);\r\n\r\n          // The request has been aborted, stop reading the stream.\r\n          if (abortController === null) {\r\n            reader.cancel();\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (onFinish) {\r\n          onFinish(prompt, result);\r\n        }\r\n\r\n        setAbortController(null);\r\n        return result;\r\n      } catch (err) {\r\n        // Ignore abort errors as they are expected.\r\n        if ((err as any).name === \"AbortError\") {\r\n          setAbortController(null);\r\n          return null;\r\n        }\r\n\r\n        if (onError && err instanceof Error) {\r\n          onError(err);\r\n        }\r\n\r\n        throw err;\r\n      }\r\n    },\r\n    {\r\n      populateCache: false,\r\n      revalidate: false,\r\n    }\r\n  );\r\n\r\n  const stop = useCallback(() => {\r\n    if (abortController) {\r\n      abortController.abort();\r\n      setAbortController(null);\r\n    }\r\n  }, [abortController]);\r\n\r\n  const setCompletion = useCallback(\r\n    (completion: string) => {\r\n      mutate(completion, false);\r\n    },\r\n    [mutate]\r\n  );\r\n\r\n  const complete = useCallback<UseCompletionHelpers[\"complete\"]>(\r\n    async (prompt, options) => {\r\n      return trigger({\r\n        prompt,\r\n        options,\r\n      });\r\n    },\r\n    [trigger]\r\n  );\r\n\r\n  const [input, setInput] = useState(initialInput);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e: React.FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if (!input) return;\r\n      return complete(input);\r\n    },\r\n    [input, complete]\r\n  );\r\n\r\n  const handleInputChange = (e: any) => {\r\n    setInput(e.target.value);\r\n  };\r\n\r\n  return {\r\n    completion,\r\n    complete,\r\n    error,\r\n    setCompletion,\r\n    stop,\r\n    input,\r\n    setInput,\r\n    handleInputChange,\r\n    handleSubmit,\r\n    isLoading: isMutating,\r\n  };\r\n}\r\n", "import { customAlphabet } from \"nanoid\";\r\n\r\n// 7-character random string\r\nexport const nanoid = customAlphabet(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 7);\r\n\r\nexport function createChunkDecoder() {\r\n  const decoder = new TextDecoder();\r\n  return function (chunk: Uint8Array | undefined): string {\r\n    if (!chunk) return \"\";\r\n    return decoder.decode(chunk, { stream: true });\r\n  };\r\n}\r\n", "export default function LoadingCircle({ dimensions }: { dimensions?: string }) {\r\n  return (\r\n    <svg\r\n      aria-hidden=\"true\"\r\n      className={`${\r\n        dimensions || \"h-4 w-4\"\r\n      } animate-spin fill-stone-600 text-stone-200`}\r\n      viewBox=\"0 0 100 101\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\r\n        fill=\"currentFill\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "export default function Magic({ className }: { className: string }) {\r\n  return (\r\n    <svg\r\n      width=\"469\"\r\n      height=\"469\"\r\n      viewBox=\"0 0 469 469\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      shapeRendering=\"geometricPrecision\"\r\n      stroke=\"currentColor\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n      strokeWidth=\"1.5\"\r\n      className={className}\r\n    >\r\n      <path\r\n        d=\"M237.092 62.3004L266.754 71.4198C267.156 71.5285 267.51 71.765 267.765 72.0934C268.02 72.4218 268.161 72.8243 268.166 73.2399C268.172 73.6555 268.042 74.0616 267.796 74.3967C267.55 74.7318 267.201 74.9777 266.803 75.097L237.141 84.3145C236.84 84.4058 236.566 84.5699 236.344 84.7922C236.121 85.0146 235.957 85.2883 235.866 85.5893L226.747 115.252C226.638 115.653 226.401 116.008 226.073 116.263C225.745 116.517 225.342 116.658 224.926 116.664C224.511 116.669 224.105 116.539 223.77 116.293C223.435 116.047 223.189 115.699 223.069 115.301L213.852 85.6383C213.761 85.3374 213.597 85.0636 213.374 84.8412C213.152 84.6189 212.878 84.4548 212.577 84.3635L182.914 75.2441C182.513 75.1354 182.158 74.8989 181.904 74.5705C181.649 74.2421 181.508 73.8396 181.503 73.424C181.497 73.0084 181.627 72.6023 181.873 72.2672C182.119 71.9321 182.467 71.6863 182.865 71.5669L212.528 62.3494C212.829 62.2582 213.103 62.0941 213.325 61.8717C213.547 61.6494 213.712 61.3756 213.803 61.0747L222.922 31.4121C223.031 31.0109 223.267 30.656 223.596 30.4013C223.924 30.1465 224.327 30.0057 224.742 30.0002C225.158 29.9946 225.564 30.1247 225.899 30.3706C226.234 30.6165 226.48 30.9649 226.599 31.363L235.817 61.0257C235.908 61.3266 236.072 61.6003 236.295 61.8227C236.517 62.0451 236.791 62.2091 237.092 62.3004Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M155.948 155.848L202.771 168.939C203.449 169.131 204.045 169.539 204.47 170.101C204.895 170.663 205.125 171.348 205.125 172.052C205.125 172.757 204.895 173.442 204.47 174.004C204.045 174.566 203.449 174.974 202.771 175.166L155.899 188.06C155.361 188.209 154.87 188.496 154.475 188.891C154.079 189.286 153.793 189.777 153.644 190.316L140.553 237.138C140.361 237.816 139.953 238.413 139.391 238.838C138.829 239.262 138.144 239.492 137.44 239.492C136.735 239.492 136.05 239.262 135.488 238.838C134.927 238.413 134.519 237.816 134.327 237.138L121.432 190.267C121.283 189.728 120.997 189.237 120.601 188.842C120.206 188.446 119.715 188.16 119.177 188.011L72.3537 174.92C71.676 174.728 71.0795 174.32 70.6547 173.759C70.2299 173.197 70 172.512 70 171.807C70 171.103 70.2299 170.418 70.6547 169.856C71.0795 169.294 71.676 168.886 72.3537 168.694L119.226 155.799C119.764 155.65 120.255 155.364 120.65 154.969C121.046 154.573 121.332 154.082 121.481 153.544L134.572 106.721C134.764 106.043 135.172 105.447 135.734 105.022C136.295 104.597 136.981 104.367 137.685 104.367C138.389 104.367 139.075 104.597 139.637 105.022C140.198 105.447 140.606 106.043 140.798 106.721L153.693 153.593C153.842 154.131 154.128 154.622 154.524 155.018C154.919 155.413 155.41 155.699 155.948 155.848Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n      <path\r\n        d=\"M386.827 289.992C404.33 292.149 403.84 305.828 386.876 307.299C346.623 310.829 298.869 316.271 282.199 360.005C274.844 379.192 269.942 403.2 267.49 432.029C267.427 432.846 267.211 433.626 266.856 434.319C266.501 435.012 266.015 435.602 265.431 436.05C254.988 444.041 251.212 434.186 250.183 425.606C239.2 332.353 214.588 316.909 124.668 306.122C123.892 306.031 123.151 305.767 122.504 305.35C121.857 304.933 121.322 304.375 120.942 303.72C116.399 295.679 119.324 291.038 129.718 289.796C224.688 278.47 236.062 262.83 250.183 169.331C252.177 156.355 257.259 154.083 265.431 162.516C266.51 163.593 267.202 165.099 267.392 166.782C279.257 258.564 293.328 278.617 386.827 289.992Z\"\r\n        fill=\"currentColor\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import { BubbleMenu, BubbleMenuProps } from \"@tiptap/react\";\r\nimport clsx from \"clsx\";\r\nimport { FC, useState } from \"react\";\r\nimport { BoldIcon, ItalicIcon, UnderlineIcon, StrikethroughIcon, CodeIcon } from \"lucide-react\";\r\n\r\nimport { NodeSelector } from \"./NodeSelector\";\r\nimport { ColorSelector } from \"./ColorSelector\";\r\n\r\nexport interface BubbleMenuItem {\r\n  name: string;\r\n  isActive: () => boolean;\r\n  command: () => void;\r\n  icon: typeof BoldIcon;\r\n}\r\n\r\ntype EditorBubbleMenuProps = Omit<BubbleMenuProps, \"children\">;\r\n\r\nexport const EditorBubbleMenu: FC<EditorBubbleMenuProps> = (props) => {\r\n  const items: BubbleMenuItem[] = [\r\n    {\r\n      name: \"bold\",\r\n      isActive: () => props.editor.isActive(\"bold\"),\r\n      command: () => props.editor.chain().focus().toggleBold().run(),\r\n      icon: BoldIcon,\r\n    },\r\n    {\r\n      name: \"italic\",\r\n      isActive: () => props.editor.isActive(\"italic\"),\r\n      command: () => props.editor.chain().focus().toggleItalic().run(),\r\n      icon: ItalicIcon,\r\n    },\r\n    {\r\n      name: \"underline\",\r\n      isActive: () => props.editor.isActive(\"underline\"),\r\n      command: () => props.editor.chain().focus().toggleUnderline().run(),\r\n      icon: UnderlineIcon,\r\n    },\r\n    {\r\n      name: \"strike\",\r\n      isActive: () => props.editor.isActive(\"strike\"),\r\n      command: () => props.editor.chain().focus().toggleStrike().run(),\r\n      icon: StrikethroughIcon,\r\n    },\r\n    {\r\n      name: \"code\",\r\n      isActive: () => props.editor.isActive(\"code\"),\r\n      command: () => props.editor.chain().focus().toggleCode().run(),\r\n      icon: CodeIcon,\r\n    },\r\n  ];\r\n\r\n  const bubbleMenuProps: EditorBubbleMenuProps = {\r\n    ...props,\r\n    shouldShow: ({ editor }) => {\r\n      // don't show if image is selected\r\n      if (editor.isActive(\"image\")) {\r\n        return false;\r\n      }\r\n      return editor.view.state.selection.content().size > 0;\r\n    },\r\n    tippyOptions: {\r\n      moveTransition: \"transform 0.15s ease-out\",\r\n      onHidden: () => {\r\n        setIsNodeSelectorOpen(false);\r\n        setIsColorSelectorOpen(false);\r\n      },\r\n    },\r\n  };\r\n\r\n  const [isNodeSelectorOpen, setIsNodeSelectorOpen] = useState(false);\r\n  const [isColorSelectorOpen, setIsColorSelectorOpen] = useState(false);\r\n\r\n  return (\r\n    <BubbleMenu {...bubbleMenuProps} className=\"flex overflow-hidden rounded border border-stone-200 bg-white shadow-xl\">\r\n      <NodeSelector\r\n        editor={props.editor}\r\n        isOpen={isNodeSelectorOpen}\r\n        setIsOpen={() => {\r\n          setIsNodeSelectorOpen(!isNodeSelectorOpen);\r\n          setIsColorSelectorOpen(false);\r\n        }}\r\n      />\r\n\r\n      {items.map((item, index) => (\r\n        <button key={index} onClick={item.command} type=\"button\" className=\"p-2 text-stone-600 hover:bg-stone-100 active:bg-stone-200\">\r\n          <item.icon\r\n            className={clsx(\"h-4 w-4\", {\r\n              \"text-blue-500\": item.isActive(),\r\n            })}\r\n          />\r\n        </button>\r\n      ))}\r\n      <ColorSelector\r\n        editor={props.editor}\r\n        isOpen={isColorSelectorOpen}\r\n        setIsOpen={() => {\r\n          setIsColorSelectorOpen(!isColorSelectorOpen);\r\n          setIsNodeSelectorOpen(false);\r\n        }}\r\n      />\r\n    </BubbleMenu>\r\n  );\r\n};\r\n", "import { Editor } from \"@tiptap/core\";\r\nimport clsx from \"clsx\";\r\nimport { Check, ChevronDown, Heading1, Heading2, Heading3, TextQuote, ListOrdered, TextIcon, Code } from \"lucide-react\";\r\nimport { FC } from \"react\";\r\n\r\nimport { BubbleMenuItem } from \"./EditorBubbleMenu\";\r\n\r\ninterface NodeSelectorProps {\r\n  editor: Editor;\r\n  isOpen: boolean;\r\n  setIsOpen: (isOpen: boolean) => void;\r\n}\r\n\r\nexport const NodeSelector: FC<NodeSelectorProps> = ({ editor, isOpen, setIsOpen }) => {\r\n  const items: BubbleMenuItem[] = [\r\n    {\r\n      name: \"Text\",\r\n      icon: TextIcon,\r\n      command: () => editor.chain().focus().toggleNode(\"paragraph\", \"paragraph\").run(),\r\n      // I feel like there has to be a more efficient way to do this \u2013\u00A0feel free to PR if you know how!\r\n      isActive: () => editor.isActive(\"paragraph\") && !editor.isActive(\"bulletList\") && !editor.isActive(\"orderedList\"),\r\n    },\r\n    {\r\n      name: \"Heading 1\",\r\n      icon: Heading1,\r\n      command: () => editor.chain().focus().toggleHeading({ level: 1 }).run(),\r\n      isActive: () => editor.isActive(\"heading\", { level: 1 }),\r\n    },\r\n    {\r\n      name: \"Heading 2\",\r\n      icon: Heading2,\r\n      command: () => editor.chain().focus().toggleHeading({ level: 2 }).run(),\r\n      isActive: () => editor.isActive(\"heading\", { level: 2 }),\r\n    },\r\n    {\r\n      name: \"Heading 3\",\r\n      icon: Heading3,\r\n      command: () => editor.chain().focus().toggleHeading({ level: 3 }).run(),\r\n      isActive: () => editor.isActive(\"heading\", { level: 3 }),\r\n    },\r\n    {\r\n      name: \"Bullet List\",\r\n      icon: ListOrdered,\r\n      command: () => editor.chain().focus().toggleBulletList().run(),\r\n      isActive: () => editor.isActive(\"bulletList\"),\r\n    },\r\n    {\r\n      name: \"Numbered List\",\r\n      icon: ListOrdered,\r\n      command: () => editor.chain().focus().toggleOrderedList().run(),\r\n      isActive: () => editor.isActive(\"orderedList\"),\r\n    },\r\n    {\r\n      name: \"Quote\",\r\n      icon: TextQuote,\r\n      command: () => editor.chain().focus().toggleNode(\"paragraph\", \"paragraph\").toggleBlockquote().run(),\r\n      isActive: () => editor.isActive(\"blockquote\"),\r\n    },\r\n    {\r\n      name: \"Code\",\r\n      icon: Code,\r\n      command: () => editor.chain().focus().toggleCodeBlock().run(),\r\n      isActive: () => editor.isActive(\"codeBlock\"),\r\n    },\r\n  ];\r\n\r\n  const activeItem = items.filter((item) => item.isActive()).pop() ?? {\r\n    name: \"Multiple\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative h-full\">\r\n      <button\r\n        className=\"flex h-full items-center gap-1 p-2 text-sm font-medium text-stone-600 hover:bg-stone-100 active:bg-stone-200\"\r\n        type=\"button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span>{activeItem?.name}</span>\r\n\r\n        <ChevronDown className=\"h-4 w-4\" />\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <section className=\"fixed top-full z-[99999] mt-1 flex w-48 flex-col overflow-hidden rounded border border-stone-200 bg-white p-1 shadow-xl animate-in fade-in slide-in-from-top-1\">\r\n          {items.map((item, index) => (\r\n            <button\r\n              type=\"button\"\r\n              key={index}\r\n              onClick={() => {\r\n                item.command();\r\n                setIsOpen(false);\r\n              }}\r\n              className={clsx(\"flex items-center justify-between rounded-sm px-2 py-1 text-sm text-stone-600 hover:bg-stone-100\", {\r\n                \"text-blue-600\": item.isActive(),\r\n              })}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"rounded-sm border border-stone-200 p-1\">\r\n                  <item.icon className=\"h-3 w-3\" />\r\n                </div>\r\n                <span>{item.name}</span>\r\n              </div>\r\n              {activeItem.name === item.name && <Check className=\"h-4 w-4\" />}\r\n            </button>\r\n          ))}\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n", "import { Editor } from \"@tiptap/core\";\r\nimport clsx from \"clsx\";\r\nimport { Check, ChevronDown } from \"lucide-react\";\r\nimport { FC } from \"react\";\r\n\r\nexport interface BubbleColorMenuItem {\r\n  name: string;\r\n  color: string;\r\n}\r\n\r\ninterface ColorSelectorProps {\r\n  editor: Editor;\r\n  isOpen: boolean;\r\n  setIsOpen: (isOpen: boolean) => void;\r\n}\r\n\r\nexport const ColorSelector: FC<ColorSelectorProps> = ({ editor, isOpen, setIsOpen }) => {\r\n  const items: BubbleColorMenuItem[] = [\r\n    {\r\n      name: \"Default\",\r\n      color: \"#000000\",\r\n    },\r\n    {\r\n      name: \"Purple\",\r\n      color: \"#9333EA\",\r\n    },\r\n    {\r\n      name: \"Red\",\r\n      color: \"#E00000\",\r\n    },\r\n    {\r\n      name: \"Blue\",\r\n      color: \"#2563EB\",\r\n    },\r\n    {\r\n      name: \"Green\",\r\n      color: \"#008A00\",\r\n    },\r\n    {\r\n      name: \"Orange\",\r\n      color: \"#FFA500\",\r\n    },\r\n    {\r\n      name: \"Pink\",\r\n      color: \"#BA4081\",\r\n    },\r\n    {\r\n      name: \"Gray\",\r\n      color: \"#A8A29E\",\r\n    },\r\n  ];\r\n\r\n  const activeItem = items.find(({ color }) => editor.isActive(\"textStyle\", { color }));\r\n\r\n  return (\r\n    <div className=\"relative h-full\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"flex h-full items-center gap-1 p-2 text-sm font-medium text-stone-600 hover:bg-stone-100 active:bg-stone-200\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span style={{ color: activeItem?.color || \"#000000\" }}>A</span>\r\n\r\n        <ChevronDown className=\"h-4 w-4 \" />\r\n      </button>\r\n\r\n      {isOpen && (\r\n        <section className=\"fixed top-full z-[99999] mt-1 flex w-48 flex-col overflow-hidden rounded border border-stone-200 bg-white p-1 shadow-xl animate-in fade-in slide-in-from-top-1\">\r\n          {items.map(({ name, color }, index) => (\r\n            <button\r\n              type=\"button\"\r\n              key={index}\r\n              onClick={() => {\r\n                editor.chain().focus().setColor(color).run();\r\n                setIsOpen(false);\r\n              }}\r\n              className={clsx(\"flex items-center justify-between rounded-sm px-2 py-1 text-sm text-stone-600 hover:bg-stone-100\", {\r\n                \"text-blue-600\": editor.isActive(\"textStyle\", { color }),\r\n              })}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"rounded-sm border border-stone-200 px-1 py-px font-medium\" style={{ color }}>\r\n                  A\r\n                </div>\r\n                <span>{name}</span>\r\n              </div>\r\n              {editor.isActive(\"textStyle\", { color }) && <Check className=\"h-4 w-4\" />}\r\n            </button>\r\n          ))}\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n", "import { useEffect, useState } from \"react\";\r\n\r\nconst useLocalStorage = <T>(key: string | undefined, initialValue: T): [T, (value: T) => void] => {\r\n  const [storedValue, setStoredValue] = useState(initialValue);\r\n\r\n  useEffect(() => {\r\n    if (key) {\r\n      // Retrieve from localStorage\r\n      const item = window.localStorage.getItem(key);\r\n      if (item) {\r\n        setStoredValue(JSON.parse(item));\r\n      }\r\n    }\r\n  }, [key]);\r\n\r\n  const setValue = (value: T) => {\r\n    // Save state\r\n    setStoredValue(value);\r\n    if (key) {\r\n      // Save to localStorage\r\n      window.localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n", "import { json } from \"@remix-run/node\";\r\n\r\nasync function hasPermission({ action }: { action?: string }) {\r\n  // TODO: Implement your own permission logic\r\n  if (process.env.LOGGED_AS_ADMIN !== \"true\") {\r\n    // throw new Error(\"DEMO CANNOT BE UPDATED\");\r\n    throw json({ message: \"DEMO CANNOT BE UPDATED\" }, { status: 400 });\r\n  }\r\n}\r\n\r\nexport default {\r\n  hasPermission,\r\n};\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { Form, useNavigate, useOutlet, useParams } from \"@remix-run/react\";\r\nimport { useTypedActionData, useTypedLoaderData } from \"remix-typedjson\";\r\nimport ButtonPrimary from \"~/components/ui/buttons/ButtonPrimary\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport ActionResultModal from \"~/components/ui/modals/ActionResultModal\";\r\nimport SlideOverWideEmpty from \"~/components/ui/slideOvers/SlideOverWideEmpty\";\r\nimport KbArticleContent from \"~/modules/knowledgeBase/components/articles/KbArticleContent\";\r\nimport { getKbArticleById, updateKnowledgeBaseArticle } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { KbArticleDto } from \"~/modules/knowledgeBase/dtos/KbArticleDto\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  item: KbArticleDto;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const item = await KnowledgeBaseService.getArticleById({\r\n    kb: knowledgeBase,\r\n    id: params.id!,\r\n  });\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug!}/articles`);\r\n  }\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    item,\r\n  };\r\n  return json(data);\r\n};\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n};\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString() ?? \"\";\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const item = await getKbArticleById(params.id!);\r\n  if (!item) {\r\n    return json({ error: \"Article not found\" }, { status: 400 });\r\n  }\r\n\r\n  if (action === \"togglePublish\") {\r\n    if (!item.categoryId) {\r\n      return json({ error: \"Article must have a category. Go to settings to set one.\" }, { status: 400 });\r\n    }\r\n    let publishedAt = item.publishedAt;\r\n    let contentPublished = item.contentPublished;\r\n    if (item.publishedAt) {\r\n      publishedAt = null;\r\n    } else {\r\n      publishedAt = new Date();\r\n      contentPublished = item.contentDraft;\r\n    }\r\n\r\n    await updateKnowledgeBaseArticle(item.id, {\r\n      publishedAt,\r\n      contentPublished,\r\n    });\r\n\r\n    return json({ success: true });\r\n  }\r\n  return json({ error: \"Invalid action\" }, { status: 400 });\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const params = useParams();\r\n  const outlet = useOutlet();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Form method=\"post\" className=\"space-y-6\">\r\n      <input type=\"hidden\" readOnly name=\"action\" value=\"togglePublish\" />\r\n      <EditPageLayout\r\n        title={`${data.item.title}`}\r\n        withHome={false}\r\n        menu={[\r\n          { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n          { title: \"Articles\", routePath: `/admin/knowledge-base/bases/${params.slug}/articles` },\r\n          { title: params.lang!, routePath: `/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}` },\r\n          {\r\n            title: data.item.title,\r\n            routePath: `/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}/${params.id}`,\r\n          },\r\n        ]}\r\n        buttons={\r\n          <>\r\n            <ButtonSecondary to=\"settings\">\r\n              <div>Settings</div>\r\n            </ButtonSecondary>\r\n            <ButtonSecondary to=\"edit\">\r\n              <div>Edit latest</div>\r\n            </ButtonSecondary>\r\n            {data.item.publishedAt && (\r\n              <ButtonSecondary to={data.item.href} target=\"_blank\">\r\n                <div>Preview</div>\r\n              </ButtonSecondary>\r\n            )}\r\n            <ButtonPrimary type=\"submit\" destructive={!!data.item.publishedAt}>\r\n              {data.item.publishedAt ? <div>Unpublish</div> : <div>Publish</div>}\r\n            </ButtonPrimary>\r\n          </>\r\n        }\r\n      >\r\n        <div className=\"space-y-2\">\r\n          <div className=\"space-y-3 max-w-2xl mx-auto py-12\">\r\n            <KbArticleContent item={data.item} content={data.item.contentDraft} />\r\n          </div>\r\n        </div>\r\n\r\n        <ActionResultModal actionData={actionData} showSuccess={false} />\r\n\r\n        <SlideOverWideEmpty\r\n          title={\"Article settings\"}\r\n          open={!!outlet}\r\n          onClose={() => {\r\n            navigate(\".\", { replace: true });\r\n          }}\r\n          className=\"sm:max-w-sm\"\r\n          overflowYScroll={true}\r\n        >\r\n          <div className=\"-mx-1 -mt-3\">\r\n            <div className=\"space-y-4\">{outlet}</div>\r\n          </div>\r\n        </SlideOverWideEmpty>\r\n      </EditPageLayout>\r\n    </Form>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { useRef } from \"react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport ConfirmModal, { RefConfirmModal } from \"~/components/ui/modals/ConfirmModal\";\r\nimport KbArticleSettingsForm from \"~/modules/knowledgeBase/components/bases/KbArticleSettingsForm\";\r\nimport {\r\n  KnowledgeBaseArticleWithDetails,\r\n  deleteKnowledgeBaseArticle,\r\n  getKbArticleById,\r\n  getKbArticleBySlug,\r\n  updateKnowledgeBaseArticle,\r\n} from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { getAllKnowledgeBaseCategories } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"~/modules/knowledgeBase/helpers/KbCategoryModelHelper\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  item: KnowledgeBaseArticleWithDetails;\r\n  categories: KnowledgeBaseCategoryWithDetails[];\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const item = await getKbArticleById(params.id!);\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug!}/articles`);\r\n  }\r\n  const categories = await getAllKnowledgeBaseCategories({\r\n    knowledgeBaseSlug: knowledgeBase.slug,\r\n    language: params.lang!,\r\n  });\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    item,\r\n    categories,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString() ?? \"\";\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug! });\r\n  const item = await getKbArticleById(params.id!);\r\n  if (!item) {\r\n    return json({ error: \"Article not found\" }, { status: 400 });\r\n  }\r\n\r\n  if (action === \"edit\") {\r\n    const categoryId = form.get(\"categoryId\")?.toString() ?? null;\r\n    const sectionId = form.get(\"sectionId\")?.toString() ?? null;\r\n    const slug = form.get(\"slug\")?.toString() ?? \"\";\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n    const seoImage = form.get(\"seoImage\")?.toString() ?? \"\";\r\n    const isFeatured = Boolean(form.get(\"isFeatured\"));\r\n\r\n    const existing = await getKbArticleBySlug({\r\n      knowledgeBaseId: kb.id,\r\n      slug,\r\n      language: params.lang!,\r\n    });\r\n    if (existing && existing.id !== item.id) {\r\n      return json({ error: \"Slug already exists\" }, { status: 400 });\r\n    }\r\n\r\n    let featuredOrder = item.featuredOrder;\r\n    if (isFeatured) {\r\n      if (!item.featuredOrder) {\r\n        const featuredArticles = await KnowledgeBaseService.getFeaturedArticles({\r\n          kb,\r\n          params: {},\r\n        });\r\n        let maxOrder = 0;\r\n        if (featuredArticles.length > 0) {\r\n          maxOrder = Math.max(...featuredArticles.map((p) => p.featuredOrder ?? 0));\r\n        }\r\n        featuredOrder = maxOrder + 1;\r\n      }\r\n    } else {\r\n      featuredOrder = null;\r\n    }\r\n\r\n    await updateKnowledgeBaseArticle(item.id, {\r\n      categoryId: categoryId?.length ? categoryId : null,\r\n      sectionId: sectionId?.length ? sectionId : null,\r\n      slug,\r\n      title,\r\n      description,\r\n      order: 0,\r\n      language: params.lang!,\r\n      featuredOrder,\r\n      author: \"\",\r\n      seoImage,\r\n    });\r\n\r\n    return redirect(`/admin/knowledge-base/bases/${kb.slug}/articles/${params.lang}/${item.id}`);\r\n  } else if (action === \"delete\") {\r\n    await deleteKnowledgeBaseArticle(item.id);\r\n    return redirect(`/admin/knowledge-base/bases/${kb.slug}/articles/${params.lang}`);\r\n  }\r\n  return json({ error: \"Invalid action\" }, { status: 400 });\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const submit = useSubmit();\r\n\r\n  const confirmDelete = useRef<RefConfirmModal>(null);\r\n\r\n  function onDelete() {\r\n    confirmDelete.current?.show(\"Delete article\", \"Delete\", \"Cancel\", `Are you sure you want to delete the article \"${data.item.title}\"?`);\r\n  }\r\n\r\n  function onConfirmedDelete() {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete\");\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <KbArticleSettingsForm categories={data.categories} item={data.item} onDelete={onDelete} />\r\n\r\n      <ConfirmModal ref={confirmDelete} onYes={onConfirmedDelete} destructive />\r\n    </div>\r\n  );\r\n}\r\n", "import { forwardRef, Fragment, Ref, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport clsx from \"clsx\";\r\n\r\nexport interface RefConfirmModal {\r\n  setValue: (value: any) => void;\r\n  show: (_question: string, _yesTitle?: string, _noTitle?: string, _description?: string, _inputString?: string) => void;\r\n}\r\n\r\ninterface Props {\r\n  destructive?: boolean;\r\n  inputType?: string;\r\n  onYes?: (value: any) => void;\r\n  onNo?: () => void;\r\n  placeholder?: string;\r\n}\r\n\r\nconst ConfirmModal = (props: Props, ref: Ref<RefConfirmModal>) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState<string>();\r\n  const [value, setValue] = useState<string>();\r\n  const [description, setDescription] = useState<string>();\r\n  const [inputString, setInputString] = useState<string | undefined>(\"\");\r\n  const [yesTitle, setYesTitle] = useState<string>(\"\");\r\n  const [noTitle, setNoTitle] = useState<string>(\"\");\r\n\r\n  const cancelButtonRef = useRef(null);\r\n  const inputValue = useRef() as React.MutableRefObject<HTMLInputElement>;\r\n\r\n  useEffect(() => {\r\n    setTitle(\"Confirm\".toString());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  function no() {\r\n    setOpen(false);\r\n    if (props.onNo) {\r\n      props.onNo();\r\n    }\r\n  }\r\n\r\n  function yes() {\r\n    setOpen(false);\r\n    if (props.onYes) {\r\n      props.onYes(value ?? inputString);\r\n    }\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({ show, setValue }));\r\n\r\n  function show(\r\n    _question: string,\r\n    _yesTitle: string = \"Confirm\".toString(),\r\n    _noTitle: string = \"Back\".toString(),\r\n    _description?: string,\r\n    _inputString?: string\r\n  ) {\r\n    setTitle(_question.toString());\r\n    if (_yesTitle) {\r\n      setYesTitle(_yesTitle);\r\n    }\r\n    if (_noTitle) {\r\n      setNoTitle(_noTitle);\r\n    }\r\n    if (_description) {\r\n      setDescription(_description);\r\n    }\r\n    setTimeout(() => {\r\n      if ((props.inputType === \"email\" || props.inputType === \"string\" || props.inputType === \"slug\") && inputValue.current) {\r\n        inputValue.current.focus();\r\n        inputValue.current.select();\r\n      }\r\n    }, 0);\r\n    setOpen(true);\r\n    setInputString(_inputString);\r\n  }\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"fixed inset-0 z-50 overflow-y-auto\" initialFocus={cancelButtonRef} onClose={setOpen}>\r\n        <div className=\"flex min-h-screen items-end justify-center px-4 pt-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span className=\"hidden sm:inline-block sm:h-screen sm:align-middle\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block w-full transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left align-bottom shadow-xl transition-all sm:my-8 sm:max-w-lg sm:p-6 sm:align-middle\">\r\n              <div>\r\n                <div className=\"mx-auto flex h-12 w-12 items-center justify-center rounded-full border border-yellow-300 bg-yellow-50\">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-6 w-6 text-yellow-600\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                    strokeWidth=\"2\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <div className=\"mt-3 text-center sm:mt-5\">\r\n                  <Dialog.Title as=\"h3\" className=\"text-lg font-medium leading-6 text-gray-900\">\r\n                    {title}\r\n                  </Dialog.Title>\r\n                  <div className=\"mt-2\">\r\n                    <p className=\"text-sm text-gray-500\">{description}</p>\r\n                  </div>\r\n                  {props.inputType === \"email\" && (\r\n                    <div className=\"mt-4\">\r\n                      <label htmlFor=\"value\" className=\"block text-sm font-medium text-gray-700\"></label>\r\n                      <div className=\"relative mt-1 rounded-md shadow-sm\">\r\n                        <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                          {/*Heroicon name: solid/mail */}\r\n                          <svg className=\"h-5 w-5 text-gray-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\r\n                            <path d=\"M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z\" />\r\n                            <path d=\"M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z\" />\r\n                          </svg>\r\n                        </div>\r\n                        <input\r\n                          value={inputString}\r\n                          onChange={(e) => setInputString(e.target.value)}\r\n                          ref={inputValue}\r\n                          type=\"value\"\r\n                          name=\"email\"\r\n                          id=\"email\"\r\n                          className=\"block w-full rounded-md border-gray-300 pl-10 focus:border-gray-500 focus:ring-gray-500 sm:text-sm\"\r\n                          placeholder=\"your@email.com\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {props.inputType === \"string\" && (\r\n                    <div className=\"mt-4\">\r\n                      <label htmlFor=\"value\" className=\"block text-sm font-medium text-gray-700\"></label>\r\n                      <div className=\"relative mt-1 rounded-md shadow-sm\">\r\n                        <input\r\n                          value={inputString}\r\n                          onChange={(e) => setInputString(e.target.value)}\r\n                          ref={inputValue}\r\n                          type=\"text\"\r\n                          name=\"value\"\r\n                          id=\"value\"\r\n                          className=\"block w-full rounded-md border-gray-300 focus:border-gray-500 focus:ring-gray-500 sm:text-sm\"\r\n                          placeholder={props.placeholder}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {props.inputType === \"slug\" && (\r\n                    <div className=\"mt-4\">\r\n                      <label htmlFor=\"value\" className=\"block text-sm font-medium text-gray-700\"></label>\r\n                      <div className=\"relative mt-1 rounded-md shadow-sm\">\r\n                        <input\r\n                          value={inputString}\r\n                          onChange={(e) => setInputString(e.target.value.toLowerCase())}\r\n                          ref={inputValue}\r\n                          type=\"text\"\r\n                          name=\"value\"\r\n                          id=\"value\"\r\n                          className=\"block w-full rounded-md border-gray-300 focus:border-gray-500 focus:ring-gray-500 sm:text-sm\"\r\n                          placeholder={props.placeholder}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3\">\r\n                <button\r\n                  type=\"button\"\r\n                  className={clsx(\r\n                    \"inline-flex w-full justify-center rounded-md border border-transparent px-4 py-2 text-base  font-medium text-white shadow-sm  focus:outline-none focus:ring-2 focus:ring-offset-2 sm:col-start-2 sm:text-sm\",\r\n                    !props.destructive ? \"bg-accent-600 hover:bg-accent-700 focus:ring-accent-500\" : \"bg-red-600 hover:bg-red-700 focus:ring-red-500\"\r\n                  )}\r\n                  onClick={yes}\r\n                >\r\n                  {yesTitle}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 sm:col-start-1 sm:mt-0 sm:text-sm\"\r\n                  onClick={no}\r\n                  ref={cancelButtonRef}\r\n                >\r\n                  {noTitle}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n};\r\n\r\nexport default forwardRef(ConfirmModal);\r\n", "import { Form, useNavigation } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport InputCheckboxWithDescription from \"~/components/ui/input/InputCheckboxWithDescription\";\r\nimport InputSelector from \"~/components/ui/input/InputSelector\";\r\nimport InputText, { RefInputText } from \"~/components/ui/input/InputText\";\r\nimport { KnowledgeBaseArticleWithDetails } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"../../helpers/KbCategoryModelHelper\";\r\n\r\nexport default function KbArticleSettingsForm({\r\n  categories,\r\n  item,\r\n  onDelete,\r\n}: {\r\n  categories: KnowledgeBaseCategoryWithDetails[];\r\n  item: KnowledgeBaseArticleWithDetails;\r\n  onDelete: () => void;\r\n}) {\r\n  const navigation = useNavigation();\r\n  const inputTitle = useRef<RefInputText>(null);\r\n\r\n  const [categoryId, setCategoryId] = useState<string | undefined>(item?.categoryId ?? \"\");\r\n  const [category, setCategory] = useState<KnowledgeBaseCategoryWithDetails | undefined>(undefined);\r\n  const [sectionId, setSectionId] = useState<string | undefined>(item?.sectionId ?? \"\");\r\n  const [slug, setSlug] = useState(item?.slug ?? \"\");\r\n  const [title, setTitle] = useState(item?.title ?? \"\");\r\n  const [description, setDescription] = useState(item?.description ?? \"\");\r\n  const [seoImage, setSeoImage] = useState(item?.seoImage ?? \"\");\r\n  const [isFeatured, setIsFeatured] = useState(item?.featuredOrder ? true : false);\r\n\r\n  useEffect(() => {\r\n    const slug = UrlUtils.slugify(title);\r\n    setSlug(slug);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [title]);\r\n\r\n  useEffect(() => {\r\n    setCategory(categories.find((f) => f.id === categoryId));\r\n  }, [categories, categoryId]);\r\n\r\n  return (\r\n    <Form method=\"post\" className=\"space-y-6\">\r\n      <input name=\"action\" value=\"edit\" readOnly hidden />\r\n      <div className=\"space-y-3\">\r\n        <div className=\"grid gap-3\">\r\n          <InputText ref={inputTitle} name=\"title\" title={\"Title\"} value={title} setValue={setTitle} required />\r\n          <InputText name=\"slug\" title={\"Slug\"} value={slug} setValue={setSlug} required />\r\n          <InputText\r\n            rows={2}\r\n            name=\"description\"\r\n            title={\"Description\"}\r\n            value={description}\r\n            setValue={setDescription}\r\n            maxLength={300}\r\n            // required\r\n          />\r\n\r\n          <InputSelector\r\n            name=\"categoryId\"\r\n            title={\"Category\"}\r\n            value={categoryId}\r\n            setValue={(e) => setCategoryId(e?.toString())}\r\n            options={categories.map((f) => {\r\n              return {\r\n                value: f.id,\r\n                name: f.title,\r\n              };\r\n            })}\r\n          />\r\n\r\n          {category && category.sections.length > 0 && (\r\n            <InputSelector\r\n              name=\"sectionId\"\r\n              title={\"Section\"}\r\n              value={sectionId}\r\n              setValue={(e) => setSectionId(e?.toString())}\r\n              options={category.sections.map((f) => {\r\n                return {\r\n                  value: f.id,\r\n                  name: f.title,\r\n                };\r\n              })}\r\n            />\r\n          )}\r\n\r\n          <InputText name=\"image\" title={\"SEO Image\"} value={seoImage} setValue={setSeoImage} />\r\n\r\n          {seoImage && (\r\n            <div>\r\n              <img className=\"overflow-hidden rounded-lg shadow-xl xl:border-b xl:border-gray-200\" src={seoImage} alt={title} />\r\n            </div>\r\n          )}\r\n\r\n          <InputCheckboxWithDescription\r\n            name=\"isFeatured\"\r\n            title={\"Featured\"}\r\n            value={isFeatured}\r\n            setValue={setIsFeatured}\r\n            description={\"Displayed on the homepage.\"}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-5 flex justify-between space-x-2 sm:mt-6\">\r\n        <div>\r\n          <ButtonSecondary disabled={navigation.state === \"submitting\"} type=\"button\" className=\"w-full\" onClick={onDelete} destructive>\r\n            <div>{\"Delete\"}</div>\r\n          </ButtonSecondary>\r\n        </div>\r\n        <div className=\"flex space-x-2\">\r\n          <LoadingButton actionName=\"edit\" type=\"submit\" disabled={navigation.state === \"submitting\"}>\r\n            {\"Save\"}\r\n          </LoadingButton>\r\n        </div>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { ReactNode, useEffect, useState } from \"react\";\r\nimport HintTooltip from \"../tooltips/HintTooltip\";\r\n\r\ninterface Props {\r\n  name?: string;\r\n  title?: string | ReactNode;\r\n  description: string | ReactNode;\r\n  value?: boolean;\r\n  setValue?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  className?: string;\r\n  help?: string;\r\n  disabled?: boolean;\r\n  autoFocus?: boolean;\r\n}\r\nexport default function InputCheckboxWithDescription({ name, title, value, setValue, description, className, help, disabled = false, autoFocus }: Props) {\r\n  const [checked, setChecked] = useState(value ?? false);\r\n\r\n  useEffect(() => {\r\n    if (value !== checked) {\r\n      setChecked(value ?? false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (setValue && value !== checked) {\r\n      setValue(checked);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [checked]);\r\n\r\n  return (\r\n    <div className={clsx(\"relative flex items-start pb-4 pt-2\", className)}>\r\n      <div className=\"min-w-0 flex-1 text-sm\">\r\n        <label htmlFor={name} className=\"cursor-pointer select-none\">\r\n          <div className=\"font-medium text-gray-700\">{title}</div>\r\n\r\n          {help && <HintTooltip text={help} />}\r\n\r\n          <div id={name + \"-description\"} className=\"text-gray-400\">\r\n            {description}\r\n          </div>\r\n        </label>\r\n      </div>\r\n      <div className=\"ml-3 flex h-5 items-center\">\r\n        <input\r\n          id={name}\r\n          aria-describedby={name + \"-description\"}\r\n          name={name}\r\n          type=\"checkbox\"\r\n          checked={checked}\r\n          onChange={(e) => {\r\n            setChecked(e.target.checked);\r\n          }}\r\n          disabled={disabled}\r\n          autoFocus={autoFocus}\r\n          className={clsx(disabled && \"cursor-not-allowed bg-gray-100\", \"h-4 w-4 cursor-pointer rounded border-gray-300 text-accent-600 focus:ring-accent-500\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { Ref, forwardRef, useImperativeHandle, useRef, ReactNode } from \"react\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { Listbox, Transition } from \"@headlessui/react\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport ColorBadge from \"../badges/ColorBadge\";\r\nimport HintTooltip from \"../tooltips/HintTooltip\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\nimport clsx from \"clsx\";\r\n\r\nexport interface RefInputSelector {\r\n  focus: () => void;\r\n}\r\n\r\ninterface Props {\r\n  name?: string;\r\n  title?: string;\r\n  value?: string | number | undefined;\r\n  disabled?: boolean;\r\n  options: { name: string | ReactNode; value: string | number | undefined; color?: Colors; disabled?: boolean }[];\r\n  setValue?: React.Dispatch<React.SetStateAction<string | number | undefined>>;\r\n  className?: string;\r\n  withSearch?: boolean;\r\n  withLabel?: boolean;\r\n  withColors?: boolean;\r\n  selectPlaceholder?: string;\r\n  onNew?: () => void;\r\n  onNewRoute?: string;\r\n  required?: boolean;\r\n  help?: string;\r\n  hint?: ReactNode;\r\n  icon?: string;\r\n  borderless?: boolean;\r\n  darkMode?: boolean;\r\n  autoFocus?: boolean;\r\n  readOnly?: boolean;\r\n}\r\nconst InputSelector = (\r\n  {\r\n    name,\r\n    title,\r\n    value,\r\n    options,\r\n    disabled,\r\n    setValue,\r\n    className,\r\n    withSearch = true,\r\n    withLabel = true,\r\n    withColors = false,\r\n    selectPlaceholder,\r\n    onNew,\r\n    required,\r\n    onNewRoute,\r\n    help,\r\n    hint,\r\n    icon,\r\n    borderless,\r\n    darkMode,\r\n    autoFocus,\r\n    readOnly,\r\n  }: Props,\r\n  ref: Ref<RefInputSelector>\r\n) => {\r\n  const button = useRef<HTMLButtonElement>(null);\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  const [selected, setSelected] = useState<{ name: string | ReactNode; value: string | number | undefined; color?: Colors }>();\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const selected = options?.find((f) => f.value === value);\r\n    setSelected(selected);\r\n  }, [options, value]);\r\n\r\n  useEffect(() => {\r\n    if (selected && setValue && value !== selected?.value) {\r\n      setValue(selected?.value);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selected]);\r\n\r\n  useImperativeHandle(ref, () => ({ focus }));\r\n  function focus() {\r\n    setTimeout(() => {\r\n      button.current?.focus();\r\n      button.current?.click();\r\n    }, 1);\r\n  }\r\n\r\n  const filteredItems = () => {\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    return options.filter(\r\n      (f) => f.name?.toString().toUpperCase().includes(searchInput.toUpperCase()) || f.value?.toString().toUpperCase().includes(searchInput.toUpperCase())\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Listbox value={selected} onChange={setSelected} disabled={disabled || readOnly}>\r\n      {({ open }) => (\r\n        <div className={clsx(className, darkMode ? \"text-gray-800 dark:text-gray-50\" : \"text-gray-800\")}>\r\n          {withLabel && title && (\r\n            <Listbox.Label htmlFor={name} className=\"mb-1 flex justify-between space-x-2 text-xs font-medium text-gray-600\">\r\n              <div className=\" flex items-center space-x-1\">\r\n                <div className=\"truncate\">\r\n                  {title}\r\n                  {required && <span className=\"ml-1 text-red-500\">*</span>}\r\n                </div>\r\n\r\n                {help && <HintTooltip text={help} />}\r\n              </div>\r\n              {hint}\r\n            </Listbox.Label>\r\n          )}\r\n\r\n          <div className=\"relative\">\r\n            <Listbox.Button\r\n              autoFocus={autoFocus}\r\n              type=\"button\"\r\n              ref={button}\r\n              className={clsx(\r\n                \"relative w-full cursor-default rounded-md border border-gray-300 py-2 pl-3 pr-10 text-left shadow-sm focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500 sm:text-sm\",\r\n                darkMode ? \"text-gray-800 dark:text-gray-50\" : \"text-gray-800\",\r\n                disabled || readOnly ? \"cursor-not-allowed bg-gray-100\" : \"bg-white hover:bg-gray-50 focus:bg-gray-50\",\r\n                borderless && \"border-transparent\",\r\n                darkMode && \"dark:border-gray-800 dark:bg-gray-800\"\r\n              )}\r\n            >\r\n              <input type=\"hidden\" readOnly name={name} value={selected?.value ?? \"\"} />\r\n\r\n              {icon && (\r\n                <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                  <EntityIcon className=\"h-5 w-5 text-gray-400\" icon={icon} />\r\n                </div>\r\n              )}\r\n\r\n              <span className=\"inline-flex w-full items-center space-x-2 truncate\">\r\n                {withColors && selected && <ColorBadge color={selected?.color ?? Colors.UNDEFINED} />}\r\n                <div className=\"truncate\">\r\n                  {selected ? <span>{selected?.name}</span> : <span className=\"text-sm text-gray-500\">{selectPlaceholder ?? \"Select\"}...</span>}\r\n                </div>\r\n              </span>\r\n              <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </span>\r\n            </Listbox.Button>\r\n\r\n            <Transition show={open} as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n              <Listbox.Options\r\n                // onFocus={() => inputSearch.current?.focus()}\r\n                // onBlur={() => setSearchInput(\"\")}\r\n                className={clsx(\r\n                  \"absolute z-10 mt-1 max-h-72 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\",\r\n                  darkMode && \"dark:bg-gray-800\"\r\n                )}\r\n              >\r\n                {(withSearch || onNew || onNewRoute) && (\r\n                  <div className=\"flex rounded-md p-2\">\r\n                    <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n                      <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <input\r\n                        ref={inputSearch}\r\n                        id=\"search\"\r\n                        autoComplete=\"off\"\r\n                        placeholder={\"Search...\"}\r\n                        value={searchInput}\r\n                        onChange={(e) => setSearchInput(e.target.value)}\r\n                        className=\"block w-full rounded-none rounded-l-md border border-gray-300 bg-white px-3 py-2 pl-10 text-sm focus:border-accent-300 focus:outline-none focus:ring-gray-300 sm:text-sm\"\r\n                      />\r\n                    </div>\r\n                    {onNew && (\r\n                      <button\r\n                        title={\"New\"}\r\n                        type=\"button\"\r\n                        onClick={onNew}\r\n                        className=\"relative -ml-px inline-flex items-center space-x-2 rounded-r-md border border-gray-300 bg-gray-50 px-2 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                        </svg>\r\n                      </button>\r\n                    )}\r\n\r\n                    {onNewRoute && (\r\n                      <Link\r\n                        to={onNewRoute}\r\n                        className=\"relative -ml-px inline-flex items-center space-x-2 rounded-r-md border border-gray-300 bg-gray-50 px-2 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                        </svg>\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {filteredItems().map((item, idx) => (\r\n                  <Listbox.Option\r\n                    key={idx}\r\n                    disabled={item.disabled}\r\n                    className={({ active }) =>\r\n                      clsx(\r\n                        \"relative cursor-default select-none py-2 pl-3 pr-9\",\r\n                        !item.disabled && active && \"bg-accent-600 text-white\",\r\n                        !item.disabled && !active && \"text-gray-900\",\r\n                        item.disabled && \"cursor-not-allowed bg-gray-100 text-gray-400\",\r\n                        darkMode && !item.disabled && active && \"dark:bg-accent-500 dark:text-black\",\r\n                        darkMode && !item.disabled && !active && \"dark:text-gray-50\",\r\n                        darkMode && item.disabled && \"cursor-not-allowed dark:bg-gray-900 dark:text-gray-600\"\r\n                      )\r\n                    }\r\n                    value={item}\r\n                  >\r\n                    {({ selected, active }) => (\r\n                      <>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          {withColors && item.color !== undefined && <ColorBadge color={item.color} />}\r\n                          <div className={clsx(selected ? \"font-semibold\" : \"font-normal\", \"truncate\")}>{item.name}</div>\r\n                        </div>\r\n\r\n                        {selected ? (\r\n                          <span className={clsx(active ? \"text-white\" : \"text-accent-600\", \"absolute inset-y-0 right-0 flex items-center pr-4\")}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                              <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                                clipRule=\"evenodd\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                        ) : null}\r\n                      </>\r\n                    )}\r\n                  </Listbox.Option>\r\n                ))}\r\n\r\n                {withSearch && filteredItems().length === 0 && <div className=\"px-3 py-2 text-sm text-gray-400\">There are no records</div>}\r\n              </Listbox.Options>\r\n            </Transition>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Listbox>\r\n  );\r\n};\r\n\r\nexport default forwardRef(InputSelector);\r\n", "import clsx from \"clsx\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport { getBadgeColor } from \"~/utils/shared/ColorUtils\";\r\n\r\ninterface Props {\r\n  color?: Colors | null;\r\n}\r\n\r\nexport default function ColorBadge({ color }: Props) {\r\n  return (\r\n    <span className={clsx(\" inline-flex flex-shrink-0 items-center rounded-full p-1 text-xs font-medium\", getBadgeColor(color))}>\r\n      <svg className=\"h-2 w-2\" fill=\"currentColor\" viewBox=\"0 0 8 8\">\r\n        <circle cx={4} cy={4} r={3} />\r\n      </svg>\r\n    </span>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\n\r\nexport function getColors(main?: boolean) {\r\n  if (main) {\r\n    return [\r\n      Colors.GRAY,\r\n      Colors.RED,\r\n      Colors.ORANGE,\r\n      Colors.YELLOW,\r\n      Colors.GREEN,\r\n      Colors.TEAL,\r\n      Colors.CYAN,\r\n      Colors.SKY,\r\n      Colors.BLUE,\r\n      Colors.INDIGO,\r\n      Colors.VIOLET,\r\n      Colors.PURPLE,\r\n      Colors.FUCHSIA,\r\n      Colors.PINK,\r\n      Colors.ROSE,\r\n    ];\r\n  }\r\n  return [\r\n    Colors.SLATE,\r\n    Colors.GRAY,\r\n    Colors.NEUTRAL,\r\n    Colors.STONE,\r\n    Colors.RED,\r\n    Colors.ORANGE,\r\n    Colors.AMBER,\r\n    Colors.YELLOW,\r\n    Colors.LIME,\r\n    Colors.GREEN,\r\n    Colors.EMERALD,\r\n    Colors.TEAL,\r\n    Colors.CYAN,\r\n    Colors.SKY,\r\n    Colors.BLUE,\r\n    Colors.INDIGO,\r\n    Colors.VIOLET,\r\n    Colors.PURPLE,\r\n    Colors.FUCHSIA,\r\n    Colors.PINK,\r\n    Colors.ROSE,\r\n  ];\r\n}\r\n\r\nexport function getTailwindColor(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"text-gray-500\";\r\n    case Colors.SLATE:\r\n      return \"text-slate-500\";\r\n    case Colors.GRAY:\r\n      return \"text-gray-500\";\r\n    case Colors.NEUTRAL:\r\n      return \"text-neutral-500\";\r\n    case Colors.STONE:\r\n      return \"text-stone-500\";\r\n    case Colors.RED:\r\n      return \"text-red-500\";\r\n    case Colors.ORANGE:\r\n      return \"text-orange-500\";\r\n    case Colors.AMBER:\r\n      return \"text-amber-500\";\r\n    case Colors.YELLOW:\r\n      return \"text-yellow-500\";\r\n    case Colors.LIME:\r\n      return \"text-lime-500\";\r\n    case Colors.GREEN:\r\n      return \"text-green-500\";\r\n    case Colors.EMERALD:\r\n      return \"text-emerald-500\";\r\n    case Colors.TEAL:\r\n      return \"text-teal-500\";\r\n    case Colors.CYAN:\r\n      return \"text-cyan-500\";\r\n    case Colors.SKY:\r\n      return \"text-sky-500\";\r\n    case Colors.BLUE:\r\n      return \"text-blue-500\";\r\n    case Colors.INDIGO:\r\n      return \"text-indigo-500\";\r\n    case Colors.VIOLET:\r\n      return \"text-violet-500\";\r\n    case Colors.PURPLE:\r\n      return \"text-purple-500\";\r\n    case Colors.FUCHSIA:\r\n      return \"text-fuchsia-500\";\r\n    case Colors.PINK:\r\n      return \"text-pink-500\";\r\n    case Colors.ROSE:\r\n      return \"text-rose-500\";\r\n    default:\r\n      return \"\";\r\n  }\r\n}\r\n\r\n// export const colors = [\r\n//   {\r\n//     name: \"GRAY\",\r\n//     id: 3,\r\n//   },\r\n//   {\r\n//     name: \"SLATE\",\r\n//     id: 1,\r\n//   },\r\n//   {\r\n//     name: \"RED\",\r\n//     id: 6,\r\n//   },\r\n//   {\r\n//     name: \"ORANGE\",\r\n//     id: 7,\r\n//   },\r\n//   {\r\n//     name: \"AMBER\",\r\n//     id: 8,\r\n//   },\r\n//   {\r\n//     name: \"YELLOW\",\r\n//     id: 9,\r\n//   },\r\n//   {\r\n//     name: \"LIME\",\r\n//     id: 10,\r\n//   },\r\n//   {\r\n//     name: \"GREEN\",\r\n//     id: 11,\r\n//   },\r\n//   {\r\n//     name: \"EMERALD\",\r\n//     id: 12,\r\n//   },\r\n//   {\r\n//     name: \"TEAL\",\r\n//     id: 13,\r\n//   },\r\n//   {\r\n//     name: \"CYAN\",\r\n//     id: 14,\r\n//   },\r\n//   {\r\n//     name: \"SKY\",\r\n//     id: 15,\r\n//   },\r\n//   {\r\n//     name: \"BLUE\",\r\n//     id: 16,\r\n//   },\r\n//   {\r\n//     name: \"INDIGO\",\r\n//     id: 17,\r\n//   },\r\n//   {\r\n//     name: \"VIOLET\",\r\n//     id: 18,\r\n//   },\r\n//   {\r\n//     name: \"PURPLE\",\r\n//     id: 19,\r\n//   },\r\n//   {\r\n//     name: \"PINK\",\r\n//     id: 20,\r\n//   },\r\n//   {\r\n//     name: \"ROSE\",\r\n//     id: 21,\r\n//   },\r\n// ];\r\n\r\nexport function getBadgeColor(itemColor: Colors | null | undefined, strong?: boolean): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return clsx(\"bg-gray-50 border border-gray-200 text-gray-600\", strong && \"bg-gray-400 border-gray-900 text-gray-900\");\r\n    case Colors.SLATE:\r\n      return clsx(\"bg-slate-50 border border-slate-200 text-slate-600\", strong && \"bg-slate-400 border-slate-900 text-slate-900\");\r\n    case Colors.GRAY:\r\n      return clsx(\"bg-gray-50 border border-gray-200 text-gray-600\", strong && \"bg-gray-400 border-gray-900 text-gray-900\");\r\n    case Colors.NEUTRAL:\r\n      return clsx(\"bg-neutral-50 border border-neutral-200 text-neutral-600\", strong && \"bg-neutral-400 border-neutral-900 text-neutral-900\");\r\n    case Colors.STONE:\r\n      return clsx(\"bg-stone-50 border border-stone-200 text-stone-600\", strong && \"bg-stone-400 border-stone-900 text-stone-900\");\r\n    case Colors.RED:\r\n      return clsx(\"bg-red-50 border border-red-200 text-red-600\", strong && \"bg-red-400 border-red-900 text-red-900\");\r\n    case Colors.ORANGE:\r\n      return clsx(\"bg-orange-50 border border-orange-200 text-orange-600\", strong && \"bg-orange-400 border-orange-900 text-orange-900\");\r\n    case Colors.AMBER:\r\n      return clsx(\"bg-amber-50 border border-amber-200 text-amber-600\", strong && \"bg-amber-400 border-amber-900 text-amber-900\");\r\n    case Colors.YELLOW:\r\n      return clsx(\"bg-yellow-50 border border-yellow-200 text-yellow-600\", strong && \"bg-yellow-400 border-yellow-900 text-yellow-900\");\r\n    case Colors.LIME:\r\n      return clsx(\"bg-lime-50 border border-lime-200 text-lime-600\", strong && \"bg-lime-400 border-lime-900 text-lime-900\");\r\n    case Colors.GREEN:\r\n      return clsx(\"bg-green-50 border border-green-200 text-green-600\", strong && \"bg-green-400 border-green-900 text-green-900\");\r\n    case Colors.EMERALD:\r\n      return clsx(\"bg-emerald-50 border border-emerald-200 text-emerald-600\", strong && \"bg-emerald-400 border-emerald-900 text-emerald-900\");\r\n    case Colors.TEAL:\r\n      return clsx(\"bg-teal-50 border border-teal-200 text-teal-600\", strong && \"bg-teal-400 border-teal-900 text-teal-900\");\r\n    case Colors.CYAN:\r\n      return clsx(\"bg-cyan-50 border border-cyan-200 text-cyan-600\", strong && \"bg-cyan-400 border-cyan-900 text-cyan-900\");\r\n    case Colors.SKY:\r\n      return clsx(\"bg-sky-50 border border-sky-200 text-sky-600\", strong && \"bg-sky-400 border-sky-900 text-sky-900\");\r\n    case Colors.BLUE:\r\n      return clsx(\"bg-blue-50 border border-blue-200 text-blue-600\", strong && \"bg-blue-400 border-blue-900 text-blue-900\");\r\n    case Colors.INDIGO:\r\n      return clsx(\"bg-indigo-50 border border-indigo-200 text-indigo-600\", strong && \"bg-indigo-400 border-indigo-900 text-indigo-900\");\r\n    case Colors.VIOLET:\r\n      return clsx(\"bg-violet-50 border border-violet-200 text-violet-600\", strong && \"bg-violet-400 border-violet-900 text-violet-900\");\r\n    case Colors.PURPLE:\r\n      return clsx(\"bg-purple-50 border border-purple-200 text-purple-600\", strong && \"bg-purple-400 border-purple-900 text-purple-900\");\r\n    case Colors.FUCHSIA:\r\n      return clsx(\"bg-fuchsia-50 border border-fuchsia-200 text-fuchsia-600\", strong && \"bg-fuchsia-400 border-fuchsia-900 text-fuchsia-900\");\r\n    case Colors.PINK:\r\n      return clsx(\"bg-pink-50 border border-pink-200 text-pink-600\", strong && \"bg-pink-400 border-pink-900 text-pink-900\");\r\n    case Colors.ROSE:\r\n      return clsx(\"bg-rose-50 border border-rose-200 text-rose-600\", strong && \"bg-rose-400 border-rose-900 text-rose-900\");\r\n  }\r\n  return \"\";\r\n}\r\n\r\nexport function getBackgroundColor(itemColor: Colors): string {\r\n  switch (itemColor) {\r\n    case Colors.UNDEFINED:\r\n      return \"bg-gray-500\";\r\n    case Colors.SLATE:\r\n      return \"bg-slate-500\";\r\n    case Colors.GRAY:\r\n      return \"bg-gray-500\";\r\n    case Colors.NEUTRAL:\r\n      return \"bg-neutral-500\";\r\n    case Colors.STONE:\r\n      return \"bg-stone-500\";\r\n    case Colors.RED:\r\n      return \"bg-red-500\";\r\n    case Colors.ORANGE:\r\n      return \"bg-orange-500\";\r\n    case Colors.AMBER:\r\n      return \"bg-amber-500\";\r\n    case Colors.YELLOW:\r\n      return \"bg-yellow-500\";\r\n    case Colors.LIME:\r\n      return \"bg-lime-500\";\r\n    case Colors.GREEN:\r\n      return \"bg-green-500\";\r\n    case Colors.EMERALD:\r\n      return \"bg-emerald-500\";\r\n    case Colors.TEAL:\r\n      return \"bg-teal-500\";\r\n    case Colors.CYAN:\r\n      return \"bg-cyan-500\";\r\n    case Colors.SKY:\r\n      return \"bg-sky-500\";\r\n    case Colors.BLUE:\r\n      return \"bg-blue-500\";\r\n    case Colors.INDIGO:\r\n      return \"bg-indigo-500\";\r\n    case Colors.VIOLET:\r\n      return \"bg-violet-500\";\r\n    case Colors.PURPLE:\r\n      return \"bg-purple-500\";\r\n    case Colors.FUCHSIA:\r\n      return \"bg-fuchsia-500\";\r\n    case Colors.PINK:\r\n      return \"bg-pink-500\";\r\n    case Colors.ROSE:\r\n      return \"bg-rose-500\";\r\n  }\r\n}\r\n", "import { PencilIcon, TrashIcon } from \"@heroicons/react/20/solid\";\r\nimport { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { Link, useLocation, useNavigate, useOutlet, useParams, useSubmit } from \"@remix-run/react\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useTypedActionData, useTypedLoaderData } from \"remix-typedjson\";\r\nimport DocumentDuplicateIconFilled from \"~/components/ui/icons/DocumentDuplicateIconFilled\";\r\nimport FolderIconFilled from \"~/components/ui/icons/FolderIconFilled\";\r\nimport PlusIcon from \"~/components/ui/icons/PlusIcon\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport ActionResultModal from \"~/components/ui/modals/ActionResultModal\";\r\nimport ConfirmModal, { RefConfirmModal } from \"~/components/ui/modals/ConfirmModal\";\r\nimport SlideOverWideEmpty from \"~/components/ui/slideOvers/SlideOverWideEmpty\";\r\nimport OrderListButtons from \"~/components/ui/sort/OrderListButtons\";\r\nimport {\r\n  deleteKnowledgeBaseCategory,\r\n  getAllKnowledgeBaseCategories,\r\n  getKbCategoryById,\r\n  updateKnowledgeBaseCategory,\r\n} from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport {\r\n  deleteKnowledgeBaseCategorySection,\r\n  getKbCategorySectionById,\r\n  updateKnowledgeBaseCategorySection,\r\n} from \"~/modules/knowledgeBase/db/kbCategorySections.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"~/modules/knowledgeBase/helpers/KbCategoryModelHelper\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  items: KnowledgeBaseCategoryWithDetails[];\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const items = await getAllKnowledgeBaseCategories({\r\n    knowledgeBaseSlug: params.slug!,\r\n    language: params.lang!,\r\n  });\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    items,\r\n  };\r\n  return json(data);\r\n};\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n};\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString() ?? \"\";\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug! });\r\n\r\n  if (action === \"set-orders\") {\r\n    const items: { id: string; order: number }[] = form.getAll(\"orders[]\").map((f: FormDataEntryValue) => {\r\n      return JSON.parse(f.toString());\r\n    });\r\n\r\n    await Promise.all(\r\n      items.map(async ({ id, order }) => {\r\n        await updateKnowledgeBaseCategory(id, {\r\n          order: Number(order),\r\n        });\r\n      })\r\n    );\r\n    return json({ updated: true });\r\n  } else if (action === \"set-section-orders\") {\r\n    const items: { id: string; order: number }[] = form.getAll(\"orders[]\").map((f: FormDataEntryValue) => {\r\n      return JSON.parse(f.toString());\r\n    });\r\n\r\n    await Promise.all(\r\n      items.map(async ({ id, order }) => {\r\n        await updateKnowledgeBaseCategorySection(id, {\r\n          order: Number(order),\r\n        });\r\n      })\r\n    );\r\n    return json({ updated: true });\r\n  } else if (action === \"delete-category\") {\r\n    const id = form.get(\"id\")?.toString() ?? \"\";\r\n    const existing = await getKbCategoryById(id);\r\n    if (!existing) {\r\n      return json({ error: \"Category not found\" }, { status: 400 });\r\n    }\r\n    await deleteKnowledgeBaseCategory(id);\r\n    return json({ deleted: true });\r\n  } else if (action === \"delete-section\") {\r\n    const id = form.get(\"id\")?.toString() ?? \"\";\r\n    const existing = await getKbCategorySectionById(id);\r\n    if (!existing) {\r\n      return json({ error: \"Section not found\" }, { status: 400 });\r\n    }\r\n    await deleteKnowledgeBaseCategorySection(id);\r\n    return json({ deleted: true });\r\n  } else if (action === \"duplicate\") {\r\n    try {\r\n      const categoryId = form.get(\"id\")?.toString() ?? \"\";\r\n      await KnowledgeBaseService.duplicateCategory({ kb, language: params.lang!, categoryId });\r\n      return json({ duplicated: true });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n  }\r\n  return json({ error: \"Invalid action\" }, { status: 400 });\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const params = useParams();\r\n  const outlet = useOutlet();\r\n  const navigate = useNavigate();\r\n  const submit = useSubmit();\r\n  const location = useLocation();\r\n\r\n  const [toggledCategories, setToggledCategories] = useState<string[]>([]);\r\n\r\n  const confirmDeleteCategory = useRef<RefConfirmModal>(null);\r\n  const confirmDeleteSection = useRef<RefConfirmModal>(null);\r\n\r\n  function onDelete(item: KnowledgeBaseCategoryWithDetails) {\r\n    confirmDeleteCategory.current?.setValue(item);\r\n    confirmDeleteCategory.current?.show(\"Delete category\", \"Delete\", \"Cancel\", `Are you sure you want to delete the category \"${item.title}\"?`);\r\n  }\r\n\r\n  function onConfirmedDeleteCategory(item: KnowledgeBaseCategoryWithDetails) {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete-category\");\r\n    form.set(\"id\", item.id);\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n\r\n  function onDeleteSection(item: { id: string; title: string }) {\r\n    confirmDeleteSection.current?.setValue(item);\r\n    confirmDeleteSection.current?.show(\"Delete section\", \"Delete\", \"Cancel\", `Are you sure you want to delete the section \"${item.title}\"?`);\r\n  }\r\n\r\n  function onConfirmedDeleteSection(item: KnowledgeBaseCategoryWithDetails) {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete-section\");\r\n    form.set(\"id\", item.id);\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n\r\n  function onDuplicate(item: KnowledgeBaseCategoryWithDetails) {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"duplicate\");\r\n    form.set(\"id\", item.id);\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n\r\n  function getOutletTitle() {\r\n    if (location.pathname.includes(\"/sections/\")) {\r\n      if (params.section) {\r\n        return \"Edit section\";\r\n      } else {\r\n        return \"Create section\";\r\n      }\r\n    } else {\r\n      if (params.id) {\r\n        return \"Edit category\";\r\n      } else {\r\n        return \"Create category\";\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <EditPageLayout\r\n      title={`Categories (${KnowledgeBaseUtils.getLanguageName(params.lang!)})`}\r\n      withHome={false}\r\n      menu={[\r\n        { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n        { title: \"Categories\", routePath: `/admin/knowledge-base/bases/${params.slug}/categories` },\r\n        { title: params.lang!, routePath: `/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}` },\r\n      ]}\r\n    >\r\n      <div className=\"space-y-2\">\r\n        {data.items.map((item, idx) => {\r\n          return (\r\n            <div key={idx} className=\"space-y-2\">\r\n              <div className=\"rounded-md border border-gray-300 bg-white px-4 py-1 shadow-sm\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between space-x-2\">\r\n                    <div className=\"flex items-center space-x-2 truncate\">\r\n                      <div className=\" flex items-center space-x-3 truncate\">\r\n                        <div className=\"hidden flex-shrink-0 sm:flex\">\r\n                          <OrderListButtons index={idx} items={data.items} editable={true} />\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2 truncate text-sm text-gray-800\">\r\n                          <div className=\"flex items-baseline space-x-1 truncate\">\r\n                            <div className=\"flex flex-col\">\r\n                              <div className=\"flex items-baseline space-x-1\">\r\n                                <div>\r\n                                  {item.title}\r\n                                  {item.sections.length > 0 && (\r\n                                    <span className=\"ml-1 truncate text-xs\">\r\n                                      ({item.sections.length === 1 ? \"1 section\" : `${item.sections.length} sections`})\r\n                                    </span>\r\n                                  )}\r\n                                </div>\r\n                                <div>\u2022</div>\r\n                                {item.articles.filter((f) => f.publishedAt && !f.sectionId).length > 0 ? (\r\n                                  <div className=\"truncate text-xs text-gray-400\">\r\n                                    {item.articles\r\n                                      .filter((f) => f.publishedAt)\r\n                                      .map((article) => article.title)\r\n                                      .join(\", \")}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div className=\"truncate text-xs text-gray-400\">No articles</div>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">{item.description}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-shrink-0 space-x-1\">\r\n                      <div className=\"flex items-center space-x-1 truncate p-1\">\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => {\r\n                            setToggledCategories((prev) => {\r\n                              if (prev.includes(item.id)) {\r\n                                return prev.filter((f) => f !== item.id);\r\n                              }\r\n                              return [...prev, item.id];\r\n                            });\r\n                          }}\r\n                          className=\"group flex items-center rounded-md border border-transparent p-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-1\"\r\n                        >\r\n                          <FolderIconFilled className=\"h-4 w-4 text-gray-300 hover:text-gray-500\" />\r\n                        </button>\r\n                        <Link\r\n                          to={item.id}\r\n                          className=\"group flex items-center rounded-md border border-transparent p-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-1\"\r\n                        >\r\n                          <PencilIcon className=\"h-4 w-4 text-gray-300 group-hover:text-gray-500\" />\r\n                        </Link>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => onDuplicate(item)}\r\n                          className=\"group flex items-center rounded-md border border-transparent p-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-1\"\r\n                        >\r\n                          <DocumentDuplicateIconFilled className=\"h-4 w-4 text-gray-300 hover:text-gray-500\" />\r\n                        </button>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"group flex items-center rounded-md border border-transparent p-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-1\"\r\n                          onClick={() => onDelete(item)}\r\n                        >\r\n                          <TrashIcon className=\"h-4 w-4 text-gray-300 group-hover:text-gray-500\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                {toggledCategories.includes(item.id) && <CategorySections category={item} onDeleteSection={onDeleteSection} />}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <Link\r\n          to={`new`}\r\n          className=\"relative block w-full rounded-lg border-2 border-dashed border-gray-300 px-12 py-6 text-center hover:border-gray-400 focus:outline-none focus:ring-2 focus:ring-theme-500 focus:ring-offset-2\"\r\n        >\r\n          <PlusIcon className=\"mx-auto h-5 text-gray-900\" />\r\n          <span className=\"mt-2 block text-sm font-medium text-gray-900\">Add new category</span>\r\n        </Link>\r\n      </div>\r\n\r\n      <ConfirmModal ref={confirmDeleteCategory} onYes={onConfirmedDeleteCategory} destructive />\r\n      <ConfirmModal ref={confirmDeleteSection} onYes={onConfirmedDeleteSection} destructive />\r\n      <ActionResultModal actionData={actionData} showSuccess={false} />\r\n\r\n      <SlideOverWideEmpty\r\n        title={getOutletTitle()}\r\n        open={!!outlet}\r\n        onClose={() => {\r\n          navigate(\".\", { replace: true });\r\n        }}\r\n        className=\"sm:max-w-sm\"\r\n        overflowYScroll={true}\r\n      >\r\n        <div className=\"-mx-1 -mt-3\">\r\n          <div className=\"space-y-4\">{outlet}</div>\r\n        </div>\r\n      </SlideOverWideEmpty>\r\n    </EditPageLayout>\r\n  );\r\n}\r\n\r\nfunction CategorySections({\r\n  category,\r\n  onDeleteSection,\r\n}: {\r\n  category: KnowledgeBaseCategoryWithDetails;\r\n  onDeleteSection: (section: { id: string; title: string }) => void;\r\n}) {\r\n  function getSectionArticles(id: string) {\r\n    return category.articles.filter((f) => f.sectionId === id && f.publishedAt);\r\n  }\r\n  return (\r\n    <div className=\"space-y-2 pb-2\">\r\n      {/* <div className=\"font-medium text-sm text-gray-700\">Sections</div> */}\r\n      <div className=\"space-y-2 bg-slate-50 border border-slate-100 rounded-md w-full px-4 py-2\">\r\n        <div className=\"space-y-2\">\r\n          {category.sections.map((item, idx) => {\r\n            return (\r\n              <div key={idx} className=\"rounded-md border border-gray-300 bg-white px-4 py-1 shadow-sm\">\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex items-center justify-between space-x-2\">\r\n                    <div className=\"flex items-center space-x-2 truncate\">\r\n                      <div className=\" flex items-center space-x-3 truncate\">\r\n                        <div className=\"hidden flex-shrink-0 sm:flex\">\r\n                          <OrderListButtons\r\n                            formData={{\r\n                              categoryId: item.id,\r\n                            }}\r\n                            actionName=\"set-section-orders\"\r\n                            index={idx}\r\n                            items={category.sections}\r\n                            editable={true}\r\n                          />\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-2 truncate text-sm text-gray-800\">\r\n                          <div className=\"flex items-baseline space-x-1 truncate\">\r\n                            <div className=\"flex flex-col\">\r\n                              <div className=\"flex items-baseline space-x-1\">\r\n                                {item.title}\r\n                                <div>\u2022</div>\r\n                                {getSectionArticles(item.id).length > 0 ? (\r\n                                  <div className=\"truncate text-xs text-gray-400\">\r\n                                    {getSectionArticles(item.id)\r\n                                      .map((f) => f.title)\r\n                                      .join(\", \")}\r\n                                  </div>\r\n                                ) : (\r\n                                  <div className=\"truncate text-xs text-gray-400\">No articles</div>\r\n                                )}\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">{item.description}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-shrink-0 space-x-1\">\r\n                      <div className=\"flex items-center space-x-1 truncate p-1\">\r\n                        <Link\r\n                          to={`${category.id}/sections/${item.id}`}\r\n                          className=\"group flex items-center rounded-md border border-transparent p-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-1\"\r\n                        >\r\n                          <PencilIcon className=\"h-4 w-4 text-gray-300 group-hover:text-gray-500\" />\r\n                        </Link>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"group flex items-center rounded-md border border-transparent p-2 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-400 focus:ring-offset-1\"\r\n                          onClick={() => onDeleteSection(item)}\r\n                        >\r\n                          <TrashIcon className=\"h-4 w-4 text-gray-300 group-hover:text-gray-500\" />\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n          <Link\r\n            to={`${category.id}/sections/new`}\r\n            className=\"relative block w-full rounded-lg border-2 border-dashed border-gray-200 px-12 py-4 text-center hover:border-gray-300 focus:outline-none focus:ring-2 focus:ring-theme-500 focus:ring-offset-2\"\r\n          >\r\n            <span className=\"block text-xs font-medium text-gray-600\">Add section</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "export default function DocumentDuplicateIconFilled({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <path d=\"M7.5 3.375c0-1.036.84-1.875 1.875-1.875h.375a3.75 3.75 0 013.75 3.75v1.875C13.5 8.161 14.34 9 15.375 9h1.875A3.75 3.75 0 0121 12.75v3.375C21 17.16 20.16 18 19.125 18h-9.75A1.875 1.875 0 017.5 16.125V3.375z\" />\r\n      <path d=\"M15 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0017.25 7.5h-1.875A.375.375 0 0115 7.125V5.25zM4.875 6H6v10.125A3.375 3.375 0 009.375 19.5H16.5v1.125c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625V7.875C3 6.839 3.84 6 4.875 6z\" />\r\n    </svg>\r\n  );\r\n}\r\n", "export default function FolderIconFilled({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" width=\"50\" height=\"50\" viewBox=\"0 0 50 50\">\r\n      <path d=\"M 5 4 C 3.346 4 2 5.346 2 7 L 2 13 L 3 13 L 47 13 L 48 13 L 48 11 C 48 9.346 46.654 8 45 8 L 18.044922 8.0058594 C 17.765922 7.9048594 17.188906 6.9861875 16.878906 6.4921875 C 16.111906 5.2681875 15.317 4 14 4 L 5 4 z M 3 15 C 2.448 15 2 15.448 2 16 L 2 43 C 2 44.657 3.343 46 5 46 L 45 46 C 46.657 46 48 44.657 48 43 L 48 16 C 48 15.448 47.552 15 47 15 L 3 15 z\"></path>\r\n    </svg>\r\n  );\r\n}\r\n", "export default function PlusIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 4v16m8-8H4\" />\r\n    </svg>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { useSubmit, useNavigation } from \"@remix-run/react\";\r\n\r\ninterface OrderType {\r\n  id: string;\r\n  order: number;\r\n}\r\ninterface Props<OrderType> {\r\n  index: number | undefined;\r\n  items: OrderType[];\r\n  editable?: boolean;\r\n  actionName?: string;\r\n  formData?: {\r\n    [key: string]: string;\r\n  };\r\n}\r\nexport default function OrderListButtons({ index, items, editable = true, actionName = \"set-orders\", formData }: Props<OrderType>) {\r\n  const submit = useSubmit();\r\n  const navigation = useNavigation();\r\n  const loading = navigation.state === \"submitting\";\r\n  function changeOrder(forward: boolean) {\r\n    if (index === undefined) {\r\n      return;\r\n    }\r\n    const form = new FormData();\r\n\r\n    const currentItem = items[index];\r\n    let nextItem: OrderType | undefined = undefined;\r\n    let prevItem: OrderType | undefined = undefined;\r\n    if (forward) {\r\n      if (items.length > index + 1) {\r\n        nextItem = items[index + 1];\r\n      }\r\n    } else {\r\n      if (index - 1 >= 0) {\r\n        prevItem = items[index - 1];\r\n      }\r\n    }\r\n\r\n    items.forEach((item, idx) => {\r\n      let order = 0;\r\n      if (currentItem.id === item.id) {\r\n        order = idx + (forward ? 1 : -1) + 1;\r\n      } else if (prevItem?.id === item.id) {\r\n        order = idx + (forward ? 0 : 1) + 1;\r\n        form.append(\"orders[]\", JSON.stringify({ id: item.id, order: order.toString() }));\r\n      } else if (nextItem?.id === item.id) {\r\n        order = idx + (forward ? -1 : 0) + 1;\r\n        form.append(\"orders[]\", JSON.stringify({ id: item.id, order: order.toString() }));\r\n      } else {\r\n        order = idx + 1;\r\n        form.append(\"orders[]\", JSON.stringify({ id: item.id, order: order.toString() }));\r\n      }\r\n      form.append(\"orders[]\", JSON.stringify({ id: item.id, order: order.toString() }));\r\n    });\r\n    form.set(\"action\", actionName);\r\n    if (formData) {\r\n      Object.entries(formData).forEach(([key, value]) => {\r\n        form.set(key, value);\r\n      });\r\n    }\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  function isLastItem() {\r\n    return index === items.length - 1;\r\n    // const maxOrder = Math.max(...items.map((o) => o.order));\r\n    // return order === maxOrder;\r\n  }\r\n  return (\r\n    <>\r\n      {index !== undefined && (\r\n        <div className=\"flex items-center space-x-1 truncate\">\r\n          <button\r\n            title=\"Move up\"\r\n            type=\"button\"\r\n            onClick={() => changeOrder(false)}\r\n            className={clsx(\r\n              index <= 0 || !editable || loading ? \" cursor-not-allowed bg-gray-100 text-gray-300\" : \"hover:bg-gray-100 hover:text-gray-800\",\r\n              \"h-4 w-4 bg-gray-50 px-0.5 py-0.5 text-gray-500 focus:outline-none\"\r\n            )}\r\n            disabled={index <= 0 || !editable || loading}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </button>\r\n          <button\r\n            title=\"Move down\"\r\n            type=\"button\"\r\n            onClick={() => changeOrder(true)}\r\n            className={clsx(\r\n              isLastItem() || !editable || loading ? \" cursor-not-allowed bg-gray-100 text-gray-300\" : \"hover:bg-gray-100 hover:text-gray-800\",\r\n              \"h-4 w-4 bg-gray-50 px-0.5 py-0.5 text-gray-500 focus:outline-none\"\r\n            )}\r\n            disabled={isLastItem() || !editable || loading}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n", "import { KnowledgeBaseCategorySection } from \"@prisma/client\";\r\nimport { db } from \"~/lib/db.server\";\r\n\r\nexport type KnowledgeBaseCategorySectionWithDetails = KnowledgeBaseCategorySection & {\r\n  articles: {\r\n    id: string;\r\n    order: number;\r\n    title: string;\r\n  }[];\r\n};\r\n\r\nexport async function getAllKnowledgeBaseCategorySections(): Promise<KnowledgeBaseCategorySectionWithDetails[]> {\r\n  return await db.knowledgeBaseCategorySection.findMany({\r\n    include: {\r\n      articles: { select: { id: true, order: true, title: true } },\r\n    },\r\n  });\r\n}\r\n\r\nexport async function getKbCategorySectionById(id: string): Promise<KnowledgeBaseCategorySectionWithDetails | null> {\r\n  return await db.knowledgeBaseCategorySection.findUnique({\r\n    where: { id },\r\n    include: {\r\n      articles: { select: { id: true, order: true, title: true } },\r\n    },\r\n  });\r\n}\r\n\r\nexport async function createKnowledgeBaseCategorySection(data: { categoryId: string; order: number; title: string; description: string }) {\r\n  return await db.knowledgeBaseCategorySection.create({\r\n    data: {\r\n      categoryId: data.categoryId,\r\n      order: data.order,\r\n      title: data.title,\r\n      description: data.description,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function updateKnowledgeBaseCategorySection(\r\n  id: string,\r\n  data: {\r\n    order?: number;\r\n    title?: string;\r\n    description?: string;\r\n  }\r\n) {\r\n  return await db.knowledgeBaseCategorySection.update({\r\n    where: { id },\r\n    data: {\r\n      order: data.order,\r\n      title: data.title,\r\n      description: data.description,\r\n    },\r\n  });\r\n}\r\n\r\nexport async function deleteKnowledgeBaseCategorySection(id: string) {\r\n  return await db.knowledgeBaseCategorySection.delete({\r\n    where: { id },\r\n  });\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useParams, useSubmit } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbCategorySectionForm from \"~/modules/knowledgeBase/components/bases/KbCategorySectionForm\";\r\nimport { updateKnowledgeBaseArticle } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { getKbCategoryById } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport {\r\n  KnowledgeBaseCategorySectionWithDetails,\r\n  deleteKnowledgeBaseCategorySection,\r\n  getKbCategorySectionById,\r\n  updateKnowledgeBaseCategorySection,\r\n} from \"~/modules/knowledgeBase/db/kbCategorySections.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"~/modules/knowledgeBase/helpers/KbCategoryModelHelper\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  category: KnowledgeBaseCategoryWithDetails;\r\n  item: KnowledgeBaseCategorySectionWithDetails;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  const category = await getKbCategoryById(params.id!);\r\n  if (!category) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  }\r\n  const item = await getKbCategorySectionById(params.section!);\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}/${params.id}`);\r\n  }\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    category,\r\n    item,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const item = await getKbCategorySectionById(params.section!);\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/${params.lang}/${params.id}`);\r\n  }\r\n\r\n  if (action === \"edit\") {\r\n    const order = Number(form.get(\"order\")?.toString() ?? \"\");\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n\r\n    try {\r\n      await updateKnowledgeBaseCategorySection(item.id, {\r\n        order,\r\n        title,\r\n        description,\r\n      });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  } else if (action === \"delete\") {\r\n    await deleteKnowledgeBaseCategorySection(item.id);\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  } else if (action === \"set-orders\") {\r\n    const items: { id: string; order: number }[] = form.getAll(\"orders[]\").map((f: FormDataEntryValue) => {\r\n      return JSON.parse(f.toString());\r\n    });\r\n\r\n    await Promise.all(\r\n      items.map(async ({ id, order }) => {\r\n        await updateKnowledgeBaseArticle(id, {\r\n          order: Number(order),\r\n        });\r\n      })\r\n    );\r\n    return json({ updated: true });\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const submit = useSubmit();\r\n  const params = useParams();\r\n\r\n  function onDelete() {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete\");\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <KbCategorySectionForm knowledgeBase={data.knowledgeBase} category={data.category} language={params.lang!} item={data.item} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n}\r\n", "import { Form, useNavigate, useNavigation } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport InputText, { RefInputText } from \"~/components/ui/input/InputText\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategorySectionWithDetails } from \"~/modules/knowledgeBase/db/kbCategorySections.db.server\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"../../helpers/KbCategoryModelHelper\";\r\nimport KbSortArticles from \"../articles/KbSortArticles\";\r\n\r\nexport default function KbCategorySectionForm({\r\n  knowledgeBase,\r\n  category,\r\n  language,\r\n  item,\r\n  onDelete,\r\n}: {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  category: KnowledgeBaseCategoryWithDetails;\r\n  language: string;\r\n  item?: KnowledgeBaseCategorySectionWithDetails;\r\n  onDelete?: () => void;\r\n}) {\r\n  const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  // const [showFilterModal, setShowFilterModal] = useState<{ item?: { type: FeatureFlagsFilterType; value: string | null }; idx?: number }>();\r\n\r\n  const mainInput = useRef<RefInputText>(null);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      mainInput.current?.input.current?.focus();\r\n    }, 100);\r\n  }, []);\r\n\r\n  const [title, setTitle] = useState(item?.title || \"\");\r\n  const [description, setDescription] = useState(item?.description || \"\");\r\n\r\n  return (\r\n    <div>\r\n      <Form method=\"post\" className=\"inline-block w-full overflow-hidden p-1 text-left align-bottom sm:align-middle\">\r\n        <input type=\"hidden\" name=\"action\" value={item ? \"edit\" : \"new\"} />\r\n        <div className=\"space-y-2\">\r\n          <InputText ref={mainInput} autoFocus name=\"title\" title={\"Title\"} value={title} setValue={setTitle} required />\r\n          <InputText name=\"description\" title={\"Description\"} value={description} setValue={setDescription} />\r\n          {item && <KbSortArticles items={item.articles.sort((a, b) => a.order - b.order)} />}\r\n        </div>\r\n        <div className=\"mt-5 flex justify-between space-x-2 sm:mt-6\">\r\n          <div>\r\n            {onDelete && (\r\n              <ButtonSecondary disabled={navigation.state === \"submitting\"} type=\"button\" className=\"w-full\" onClick={onDelete} destructive>\r\n                <div>{\"Delete\"}</div>\r\n              </ButtonSecondary>\r\n            )}\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <ButtonSecondary onClick={() => navigate(`/admin/knowledge-base/bases/${knowledgeBase.slug}/${language}`)}>{\"Cancel\"}</ButtonSecondary>\r\n            <LoadingButton actionName={item ? \"edit\" : \"new\"} type=\"submit\" disabled={navigation.state === \"submitting\"}>\r\n              {\"Save\"}\r\n            </LoadingButton>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { useNavigate, useSearchParams } from \"@remix-run/react\";\r\nimport ButtonTertiary from \"../buttons/ButtonTertiary\";\r\nimport TablePagination from \"./TablePagination\";\r\nimport { ReactNode, useEffect, useLayoutEffect, useRef, useState } from \"react\";\r\nimport DownArrow from \"../icons/DownArrow\";\r\nimport UpArrow from \"../icons/UpArrow\";\r\nimport { RowHeaderDisplayDto } from \"~/application/dtos/data/RowHeaderDisplayDto\";\r\nimport RowDisplayValueHelper from \"~/helpers/RowDisplayValueHelper\";\r\nimport { RowHeaderActionDto } from \"~/helpers/RowHeaderActionDto\";\r\nimport { PaginationDto } from \"~/application/dtos/data/PaginationDto\";\r\n\r\ninterface Props<T> {\r\n  headers: RowHeaderDisplayDto<T>[];\r\n  items: T[];\r\n  actions?: RowHeaderActionDto<T>[];\r\n  pagination?: PaginationDto;\r\n  onClickRoute?: (idx: number, item: T) => string;\r\n  selectedRows?: T[];\r\n  onSelected?: (item: T[]) => void;\r\n  className?: (idx: number, item: T) => string;\r\n  padding?: string;\r\n  noRecords?: ReactNode;\r\n  emptyState?: { title: string; description: string; icon?: ReactNode };\r\n}\r\n\r\nexport default function TableSimple<T>(props: Props<T>) {\r\n  const [showChild, setShowChild] = useState(false);\r\n\r\n  // Wait until after client-side hydration to show\r\n  useEffect(() => {\r\n    setShowChild(true);\r\n  }, []);\r\n\r\n  if (!showChild) {\r\n    // You can show some kind of placeholder UI here\r\n    return null;\r\n  }\r\n\r\n  return <Table {...props} />;\r\n}\r\n\r\nfunction Table<T>({\r\n  headers,\r\n  items,\r\n  actions = [],\r\n  pagination,\r\n  onClickRoute,\r\n  selectedRows,\r\n  onSelected,\r\n  className,\r\n  padding = \"px-2 py-2\",\r\n  noRecords,\r\n  emptyState,\r\n}: Props<T>) {\r\n  const navigate = useNavigate();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [sortBy, setSortBy] = useState<{ by: string; order: \"asc\" | \"desc\" }[]>();\r\n\r\n  useEffect(() => {\r\n    let sort = searchParams.get(\"sort\");\r\n    const sortArray = sort?.split(\",\") ?? [];\r\n    const sortObject = sortArray.map((s) => {\r\n      let order: \"asc\" | \"desc\" = \"asc\";\r\n      if (s.startsWith(\"-\")) {\r\n        order = \"desc\";\r\n      }\r\n      return { by: s.replace(\"-\", \"\"), order };\r\n    });\r\n    setSortBy(sortObject);\r\n  }, [searchParams]);\r\n  // const [selectedRows, setSelectedRows] = useState<T[]>([]);\r\n\r\n  // useEffect(() => {\r\n  //   if (onSelected) {\r\n  //     onSelected(selectedRows);\r\n  //   }\r\n  // }, [selectedRows]);\r\n\r\n  function toggleSelected(_: number, item: T) {\r\n    if (!selectedRows || !onSelected) {\r\n      return;\r\n    }\r\n    if (selectedRows.includes(item)) {\r\n      onSelected(selectedRows.filter((i) => i !== item));\r\n    } else {\r\n      onSelected([...selectedRows, item]);\r\n    }\r\n  }\r\n\r\n  const checkbox = useRef(null);\r\n  const [checked, setChecked] = useState(false);\r\n  const [indeterminate, setIndeterminate] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    if (!selectedRows || !onSelected) {\r\n      return;\r\n    }\r\n    const isIndeterminate = selectedRows.length > 0 && selectedRows.length < items.length;\r\n    setChecked(selectedRows.length === items.length && items.length > 0);\r\n    setIndeterminate(isIndeterminate);\r\n    // @ts-ignore\r\n    checkbox.current.indeterminate = isIndeterminate;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [onSelected, selectedRows]);\r\n\r\n  function toggleAll() {\r\n    if (!selectedRows || !onSelected) {\r\n      return;\r\n    }\r\n    onSelected(checked || indeterminate ? [] : items);\r\n    setChecked(!checked && !indeterminate);\r\n    setIndeterminate(false);\r\n  }\r\n\r\n  function onHeaderClick(header: RowHeaderDisplayDto<T>) {\r\n    if (!header.sortBy) {\r\n      return;\r\n    }\r\n    let currentSort = sortBy?.find((s) => s.by === header.sortBy);\r\n    let newSort = header.sortBy;\r\n    if (currentSort?.order === \"asc\") {\r\n      newSort = `-${header.sortBy}`;\r\n    }\r\n    searchParams.set(\"sort\", newSort);\r\n    setSearchParams(searchParams);\r\n  }\r\n\r\n  function getSortDirection(header: RowHeaderDisplayDto<T>) {\r\n    if (!header.sortBy) {\r\n      return;\r\n    }\r\n    let currentSort = sortBy?.find((s) => s.by === header.sortBy);\r\n    if (!currentSort) {\r\n      return;\r\n    }\r\n    return currentSort.order;\r\n  }\r\n\r\n  return (\r\n    <div className=\"shadow-xs w-full overflow-hidden rounded-lg border border-gray-200\">\r\n      <div className=\"w-full overflow-x-auto\">\r\n        <table className=\"whitespace-no-wrap w-full\">\r\n          <thead className=\"bg-gray-50\">\r\n            <tr className=\"border-b bg-gray-50 text-left text-xs font-semibold tracking-wide text-gray-500\">\r\n              {actions.filter((f) => f.firstColumn).length > 0 && <th scope=\"col\" className=\"px-2 py-1\"></th>}\r\n              {onSelected && (\r\n                <th scope=\"col\" className=\"relative w-12 px-6 py-5 sm:w-16 sm:px-8\">\r\n                  <input\r\n                    title=\"Select all\"\r\n                    ref={checkbox}\r\n                    type=\"checkbox\"\r\n                    className=\"absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-theme-600 focus:ring-theme-500 sm:left-6\"\r\n                    checked={checked}\r\n                    onChange={toggleAll}\r\n                  />\r\n                </th>\r\n              )}\r\n              {headers.map((header, idxHeader) => {\r\n                return (\r\n                  <th\r\n                    key={idxHeader}\r\n                    scope=\"col\"\r\n                    onClick={() => onHeaderClick(header)}\r\n                    className={clsx(\r\n                      idxHeader === 0 && actions.filter((f) => f.firstColumn).length === 0 && \"pl-3\",\r\n                      \"whitespace-nowrap px-2 py-2 tracking-wider\",\r\n                      header.breakpoint === \"sm\" && \"hidden sm:table-cell\",\r\n                      header.breakpoint === \"md\" && \"mg:table-cell hidden\",\r\n                      header.breakpoint === \"lg\" && \"hidden lg:table-cell\",\r\n                      header.breakpoint === \"xl\" && \"hidden xl:table-cell\",\r\n                      header.breakpoint === \"2xl\" && \"hidden 2xl:table-cell\",\r\n                      header.sortBy && \"cursor-pointer\"\r\n                    )}\r\n                  >\r\n                    <div\r\n                      className={clsx(\r\n                        \"group flex space-x-2\",\r\n                        !header.align && \"justify-between\",\r\n                        header.align === \"right\" && \"justify-end\",\r\n                        header.align === \"center\" && \"justify-center\",\r\n                        header.align === \"left\" && \"justify-start\"\r\n                      )}\r\n                    >\r\n                      <div className={clsx(header.className, \"truncate\")}>{header.title}</div>\r\n                      {header.sortBy && (\r\n                        <div className=\"text text-gray-500 group-hover:text-gray-800\">\r\n                          {getSortDirection(header) === \"desc\" ? (\r\n                            <DownArrow className=\"h-4 w-4\" />\r\n                          ) : (\r\n                            getSortDirection(header) === \"asc\" && <UpArrow className=\"h-4 w-4\" />\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </th>\r\n                );\r\n              })}\r\n              {actions.filter((f) => !f.firstColumn).length > 0 && <th scope=\"col\" className=\"px-2 py-1\"></th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"divide-y divide-gray-200 bg-white\">\r\n            {items.length === 0 ? (\r\n              <tr className=\"text-gray-700\">\r\n                <td colSpan={headers.length + actions.length + (onSelected ? 1 : 0)} className=\"text-center\">\r\n                  {noRecords ?? (\r\n                    <div className=\"p-3 text-sm text-gray-500\">\r\n                      {!emptyState ? (\r\n                        <span>No records found</span>\r\n                      ) : (\r\n                        <div className=\"space-y-1\">\r\n                          <div className=\"font-medium\">{emptyState.title}</div>\r\n                          <div>{emptyState.description}</div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ) : (\r\n              items.map((item, idxRow) => {\r\n                return (\r\n                  <tr\r\n                    key={idxRow}\r\n                    onClick={() => {\r\n                      if (onClickRoute !== undefined) {\r\n                        navigate(onClickRoute(idxRow, item));\r\n                      }\r\n                    }}\r\n                    className=\"group text-gray-700\"\r\n                  >\r\n                    <ActionsCells actions={actions.filter((f) => f.firstColumn)} className={className} item={item} idxRow={idxRow} />\r\n                    {onSelected && (\r\n                      <td className=\"relative w-12 px-6 text-gray-700 sm:w-16 sm:px-8\">\r\n                        {selectedRows?.includes(item) && <div className=\"absolute inset-y-0 left-0 w-0.5 bg-theme-600\" />}\r\n                        <div className=\"flex items-center space-x-1\">\r\n                          <input\r\n                            title=\"Select\"\r\n                            type=\"checkbox\"\r\n                            className=\"absolute left-4 top-1/2 -mt-2 h-4 w-4 rounded border-gray-300 text-theme-600 focus:ring-theme-500 sm:left-6\"\r\n                            checked={selectedRows?.includes(item)}\r\n                            onChange={(e) => {\r\n                              toggleSelected(idxRow, item);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    )}\r\n                    {headers.map((header, idxHeader) => {\r\n                      return (\r\n                        <td\r\n                          key={idxHeader}\r\n                          className={clsx(\r\n                            idxHeader === 0 && actions.filter((f) => f.firstColumn).length === 0 && \"pl-4\",\r\n                            \"whitespace-nowrap text-sm text-gray-700\",\r\n                            header.className,\r\n                            padding ?? \"px-2 py-2\",\r\n                            header.breakpoint === \"sm\" && \"hidden sm:table-cell\",\r\n                            header.breakpoint === \"md\" && \"mg:table-cell hidden\",\r\n                            header.breakpoint === \"lg\" && \"hidden lg:table-cell\",\r\n                            header.breakpoint === \"xl\" && \"hidden xl:table-cell\",\r\n                            header.breakpoint === \"2xl\" && \"hidden 2xl:table-cell\",\r\n                            className && className(idxRow, item)\r\n                          )}\r\n                        >\r\n                          {RowDisplayValueHelper.displayRowValue(header, item, idxRow)}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                    <ActionsCells actions={actions.filter((f) => !f.firstColumn)} className={className} item={item} idxRow={idxRow} />\r\n                  </tr>\r\n                );\r\n              })\r\n            )}\r\n\r\n            {/* {[...Array(pageSize - items.length)].map((_, i) => (\r\n                  <tr key={i}>\r\n                    <td colSpan={headers.length + 1} className=\"whitespace-nowrap text-sm text-gray-600\">\r\n                      <div className=\"px-2 py-2.5 invisible\">No row</div>\r\n                    </td>\r\n                  </tr>\r\n                ))} */}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {pagination && (\r\n        <TablePagination totalItems={pagination.totalItems} totalPages={pagination.totalPages} page={pagination.page} pageSize={pagination.pageSize} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ActionsCells<T>({\r\n  item,\r\n  actions,\r\n  idxRow,\r\n  className,\r\n}: {\r\n  item: T;\r\n  actions: RowHeaderActionDto<T>[];\r\n  idxRow: number;\r\n  className?: (idx: number, item: T) => string;\r\n}) {\r\n  return (\r\n    <>\r\n      {actions && actions.length > 0 && (\r\n        <td className={clsx(\"whitespace-nowrap px-2 py-1\", className && className(idxRow, item))}>\r\n          <div className=\"flex space-x-2\">\r\n            {actions\r\n              .filter((f) => !f.hidden || !f.hidden(item))\r\n              .map((action, idx) => {\r\n                return (\r\n                  <ButtonTertiary\r\n                    disabled={action.disabled !== undefined ? action.disabled(item) : action.disabled}\r\n                    key={idx}\r\n                    destructive={action.renderIsDestructive !== undefined ? action.renderIsDestructive(item) : action.destructive}\r\n                    onClick={() => {\r\n                      if (action.onClick) {\r\n                        action.onClick(idxRow, item);\r\n                      }\r\n                    }}\r\n                    to={action.onClickRoute && action.onClickRoute(idxRow, item)}\r\n                    target={action.onClickRouteTarget}\r\n                  >\r\n                    {action.renderTitle ? action.renderTitle(item) : action.title}\r\n                  </ButtonTertiary>\r\n                );\r\n              })}\r\n          </div>\r\n        </td>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n", "import { MouseEventHandler, ReactNode } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport LinkOrAhref from \"./LinkOrAhref\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  type?: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  to?: string;\r\n  target?: undefined | \"_blank\";\r\n  disabled?: boolean;\r\n  destructive?: boolean;\r\n  children: ReactNode;\r\n  onClick?: MouseEventHandler<HTMLButtonElement>;\r\n  reloadDocument?: boolean;\r\n}\r\n\r\nexport default function ButtonTertiary({ className = \"\", type = \"button\", onClick, disabled, destructive, to, target, children, reloadDocument }: Props) {\r\n  return (\r\n    <span>\r\n      {(() => {\r\n        if (!to || disabled) {\r\n          return (\r\n            <button\r\n              onClick={onClick}\r\n              type={type}\r\n              disabled={disabled}\r\n              className={clsx(\r\n                className,\r\n                \"mx-1 my-2 inline-flex items-center space-x-2 border-b border-transparent text-sm font-medium focus:rounded-md focus:outline-none focus:ring-2 focus:ring-accent-300 focus:ring-offset-2\",\r\n                disabled ? \"cursor-not-allowed opacity-75\" : \"hover:border-dotted\",\r\n                !destructive && \"border-b text-theme-700 \",\r\n                destructive && \"text-red-600\",\r\n                !disabled && !destructive && !className && \"hover:text-theme-800 focus:text-theme-900 \",\r\n                !disabled && destructive && \"hover:border-red-300 hover:text-red-800 focus:text-red-900\"\r\n              )}\r\n            >\r\n              {children}\r\n            </button>\r\n          );\r\n        } else {\r\n          return (\r\n            <LinkOrAhref\r\n              reloadDocument={reloadDocument}\r\n              to={to}\r\n              target={target}\r\n              className={clsx(\r\n                className,\r\n                \"mx-1 my-2 inline-flex items-center space-x-2 border-b border-transparent text-sm font-medium focus:rounded-md focus:outline-none focus:ring-2 focus:ring-accent-300 focus:ring-offset-2\",\r\n                disabled ? \"cursor-not-allowed opacity-75\" : \" hover:border-dotted\",\r\n                !destructive && \"border-b text-theme-700 \",\r\n                destructive && \"text-red-600\",\r\n                !disabled && !destructive && !className && \"hover:text-theme-800 focus:text-theme-900 \",\r\n                !disabled && destructive && \"hover:border-red-300 hover:text-red-800 focus:text-red-900\"\r\n              )}\r\n            >\r\n              {children}\r\n            </LinkOrAhref>\r\n          );\r\n        }\r\n      })()}\r\n    </span>\r\n  );\r\n}\r\n", "import { FormEvent, useEffect, useState } from \"react\";\r\nimport { useSearchParams, useNavigation } from \"@remix-run/react\";\r\nimport Modal from \"../modals/Modal\";\r\nimport Constants from \"~/application/Constants\";\r\nimport clsx from \"clsx\";\r\nimport InputSelector from \"../input/InputSelector\";\r\nimport InputNumber from \"../input/InputNumber\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\nimport ButtonSecondary from \"../buttons/ButtonSecondary\";\r\n\r\ninterface Props {\r\n  page: number;\r\n  pageSize: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\nexport default function TablePagination({ page, pageSize, totalItems, totalPages }: Props) {\r\n  const [state, setState] = useState<{ page: number; pageSize: number | undefined }>({ page, pageSize });\r\n  const [from, setFrom] = useState(0);\r\n  const [to, setTo] = useState(0);\r\n  // const submit = useSubmit();\r\n  const navigation = useNavigation();\r\n  const loading = navigation.state === \"loading\" || navigation.state === \"submitting\";\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [showPageSizeModal, setShowPageSizeModal] = useState(false);\r\n  const [showPageNumberModal, setShowPageNumberModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setFrom(page * pageSize - pageSize + 1);\r\n\r\n    let to = page * pageSize;\r\n    if (to > totalItems) {\r\n      to = totalItems;\r\n    }\r\n    setTo(to);\r\n  }, [page, pageSize, totalItems]);\r\n\r\n  useEffect(() => {\r\n    const pageSizeParam = searchParams.get(\"pageSize\")?.toString() ?? Constants.DEFAULT_PAGE_SIZE.toString();\r\n    const pageParam = searchParams.get(\"page\")?.toString() ?? \"1\";\r\n    if (state.page.toString() !== pageParam || state.pageSize?.toString() !== pageSizeParam) {\r\n      if (state.page.toString() !== pageParam) {\r\n        searchParams.set(\"page\", state.page.toString());\r\n      }\r\n      if (state.pageSize?.toString() !== pageSizeParam) {\r\n        if (state.pageSize) {\r\n          searchParams.set(\"pageSize\", state.pageSize.toString());\r\n        } else {\r\n          searchParams.delete(\"pageSize\");\r\n        }\r\n      }\r\n      setSearchParams(searchParams);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [state]);\r\n\r\n  return (\r\n    <div\r\n      className=\"flex items-center justify-end border-t bg-gray-50 px-4 py-3 text-xs uppercase tracking-wide text-gray-500 sm:justify-between\"\r\n      aria-label=\"Pagination\"\r\n    >\r\n      <div className=\"hidden sm:block\">\r\n        {totalItems > 0 && (\r\n          <button type=\"button\" onClick={() => setShowPageSizeModal(true)} className=\"uppercase hover:underline\">\r\n            {\"Showing\"} <span className=\"font-medium\">{totalItems === 0 ? 0 : from}</span> {\"To\"} <span className=\"font-medium\">{to}</span> {\"Of\"}{\" \"}\r\n            <span className=\"font-medium\">{totalItems}</span> {\"Results\"}\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <select\r\n          id=\"pageSize\"\r\n          name=\"pageSize\"\r\n          className={clsx(\r\n            \"inline-flex items-center justify-center rounded border border-gray-200 bg-white text-xs focus:border-accent-500 focus:ring-accent-500\",\r\n            page === 1 || loading ? \"cursor-not-allowed opacity-90\" : \"hover:border-gray-300 hover:bg-gray-50\"\r\n          )}\r\n          onChange={(e) => setState({ ...state, pageSize: Number(e.target.value) })}\r\n          value={state.pageSize}\r\n        >\r\n          {[undefined, ...Constants.PAGE_SIZE_OPTIONS].map((f, idx) => {\r\n            return (\r\n              <option key={idx} value={Number(f ?? Constants.DEFAULT_PAGE_SIZE)} className=\"lowercase\">\r\n                {f === undefined ? Constants.DEFAULT_PAGE_SIZE : f} {\"Per page\"?.toLowerCase()}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <div className=\"inline-flex items-center justify-center gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            disabled={page === 1 || loading}\r\n            onClick={() => setState({ ...state, page: page - 1 })}\r\n            className={clsx(\r\n              \"inline-flex h-8 w-8 items-center justify-center rounded border border-gray-200 bg-white focus:outline-none focus:ring-2 focus:ring-gray-500\",\r\n              page === 1 || loading ? \"cursor-not-allowed opacity-90\" : \"hover:border-gray-300 hover:bg-gray-50\"\r\n            )}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </button>\r\n\r\n          {showPageNumberModal ? (\r\n            <input\r\n              type=\"number\"\r\n              min={1}\r\n              max={totalPages}\r\n              disabled={totalPages <= 1}\r\n              value={state.page}\r\n              onChange={(e) => setState({ ...state, page: parseInt(e.target.value) })}\r\n              onBlur={() => setShowPageNumberModal(false)}\r\n              className=\"block w-full min-w-0 flex-1 rounded border-gray-200 text-xs focus:border-accent-500 focus:ring-accent-500\"\r\n            />\r\n          ) : (\r\n            <button type=\"button\" onClick={() => setShowPageSizeModal(true)} className={clsx(\"uppercase hover:underline\")}>\r\n              {page}\r\n              <span className=\"mx-0.25\">/</span>\r\n              {totalPages === 0 ? 1 : totalPages}\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            type=\"button\"\r\n            className={clsx(\r\n              \"inline-flex h-8 w-8 items-center justify-center rounded border border-gray-200 bg-white focus:outline-none focus:ring-2 focus:ring-gray-500\",\r\n              page >= totalPages || loading ? \"cursor-not-allowed opacity-90\" : \"hover:border-gray-300 hover:bg-gray-50\"\r\n            )}\r\n            disabled={page >= totalPages || loading}\r\n            onClick={() => setState({ ...state, page: page + 1 })}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Modal className=\"sm:max-w-xs\" open={showPageSizeModal} setOpen={setShowPageSizeModal}>\r\n        <PageOptionsForm\r\n          page={state.page}\r\n          pageSize={state.pageSize}\r\n          totalItems={totalItems}\r\n          onChange={(e) => {\r\n            setState({\r\n              page: e.currentPage,\r\n              pageSize: e.pageSize,\r\n            });\r\n            setShowPageSizeModal(false);\r\n          }}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction PageOptionsForm({\r\n  page,\r\n  pageSize,\r\n  onChange,\r\n  totalItems,\r\n}: {\r\n  page: number;\r\n  pageSize?: number;\r\n  totalItems?: number;\r\n  onChange: (state: { currentPage: number; pageSize?: number }) => void;\r\n}) {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  const [state, setState] = useState({ currentPage: page, pageSize: pageSize });\r\n\r\n  useEffect(() => {\r\n    if (totalItems) {\r\n      setTotalPages(Math.ceil(totalItems / (state.pageSize || Constants.DEFAULT_PAGE_SIZE)));\r\n    }\r\n  }, [state.pageSize, totalItems]);\r\n\r\n  function handleSubmit(e: FormEvent<HTMLFormElement>) {\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    onChange(state);\r\n  }\r\n  function onReset() {\r\n    onChange({ currentPage: 1, pageSize: undefined });\r\n  }\r\n  function existingChanges() {\r\n    return state.pageSize !== Constants.DEFAULT_PAGE_SIZE || state.currentPage !== 1;\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-2\">\r\n      <div>\r\n        <InputSelector\r\n          withSearch={false}\r\n          title={\"Page Size\"}\r\n          value={state.pageSize}\r\n          setValue={(e) => setState({ ...state, pageSize: Number(e) })}\r\n          options={[undefined, ...Constants.PAGE_SIZE_OPTIONS].map((size) => {\r\n            return {\r\n              value: size,\r\n              name: size === undefined ? \"Default\" : size.toString(),\r\n            };\r\n          })}\r\n        />\r\n      </div>\r\n      <div>\r\n        <InputNumber\r\n          title={\"Page\"}\r\n          hint={\r\n            <div className=\"text-gray-600\">\r\n              {\"Total pages\"}: {totalPages}\r\n            </div>\r\n          }\r\n          value={state.currentPage}\r\n          min={1}\r\n          max={totalPages}\r\n          setValue={(e) => setState({ ...state, currentPage: Number(e) })}\r\n        />\r\n      </div>\r\n      <div className=\"flex justify-between space-x-2\">\r\n        <ButtonSecondary disabled={!existingChanges()} onClick={onReset} className=\"flex justify-center text-center\">\r\n          Reset\r\n        </ButtonSecondary>\r\n        <ButtonPrimary type=\"submit\" className=\"flex justify-center text-center\">\r\n          Apply\r\n        </ButtonPrimary>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n// function PageSize({ number, onSelected }: { number?: number; onSelected: () => void }) {\r\n//   const { t } = useTranslation();\r\n//   const [searchParams] = useSearchParams();\r\n//   return (\r\n//     <button onClick={onSelected} className=\"w-full bg-white p-2 text-center text-sm text-gray-500 hover:bg-gray-50 hover:text-gray-900\">\r\n//       <div className=\"flex items-center justify-center space-x-2\">\r\n//         {number === undefined ? <div className=\"text-gray-400\">{t(\"shared.default\")}</div> : <div>{number}</div>}\r\n//         <div>\r\n//           {searchParams.get(\"pageSize\") === number?.toString() || (number === undefined && !searchParams.get(\"pageSize\")) ? (\r\n//             <CheckIcon className=\"h-3 w-3 text-teal-500\" />\r\n//           ) : null}\r\n//         </div>\r\n//       </div>\r\n//     </button>\r\n//   );\r\n// }\r\n", "import { ReactNode, Fragment } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  children: ReactNode;\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n  size?: \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"3xl\" | \"4xl\" | \"5xl\" | \"6xl\" | \"7xl\" | \"full\";\r\n  padding?: \"none\" | \"sm\";\r\n}\r\nexport default function Modal({ className, children, open, setOpen, size = \"3xl\", padding = \"sm\" }: Props) {\r\n  function onClose() {\r\n    setOpen(false);\r\n  }\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog as=\"div\" className=\"fixed inset-0 z-20 overflow-y-auto text-gray-800\" onClose={onClose}>\r\n        <div className=\"flex min-h-screen items-end justify-center px-4 pb-20 pt-4 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span className=\"hidden sm:inline-block sm:h-screen sm:align-middle\" aria-hidden=\"true\">\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div\r\n              className={clsx(\r\n                className,\r\n                \"relative inline-block w-full transform overflow-visible rounded-lg bg-white text-left align-bottom shadow-xl transition-all sm:align-middle\",\r\n                padding === \"sm\" && \"px-4 pb-4 pt-5 sm:my-8 sm:p-6\",\r\n                size === \"sm\" && \"sm:max-w-sm\",\r\n                size === \"md\" && \"sm:max-w-md\",\r\n                size === \"lg\" && \"sm:max-w-lg\",\r\n                size === \"xl\" && \"sm:max-w-xl\",\r\n                size === \"2xl\" && \"sm:max-w-2xl\",\r\n                size === \"3xl\" && \"sm:max-w-3xl\",\r\n                size === \"4xl\" && \"sm:max-w-4xl\",\r\n                size === \"5xl\" && \"sm:max-w-5xl\",\r\n                size === \"6xl\" && \"sm:max-w-6xl\",\r\n                size === \"7xl\" && \"sm:max-w-7xl\",\r\n                size === \"full\" && \"sm:max-w-full\"\r\n              )}\r\n            >\r\n              {children}\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n", "// import { DefaultVisibility } from \"./dtos/shared/DefaultVisibility\";\r\n\r\nconst DEFAULT_PAGE_SIZE = 10;\r\n// const DEFAULT_ROW_VISIBILITY = DefaultVisibility.Tenant;\r\nconst MAX_PAGE_SIZE = 100;\r\nconst MAX_EXPORT_PAGE_SIZE = 100000;\r\nconst PAGE_SIZE_OPTIONS = [5, 10, 25, 50, 100];\r\n\r\nexport default {\r\n  DEFAULT_PAGE_SIZE,\r\n  // DEFAULT_ROW_VISIBILITY,\r\n  MAX_PAGE_SIZE,\r\n  MAX_EXPORT_PAGE_SIZE,\r\n  PAGE_SIZE_OPTIONS,\r\n};\r\n", "import clsx from \"clsx\";\r\nimport { forwardRef, ReactNode, Ref, RefObject, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\nimport HintTooltip from \"~/components/ui/tooltips/HintTooltip\";\r\n\r\nexport interface RefInputNumber {\r\n  input: RefObject<HTMLInputElement>;\r\n}\r\n\r\ninterface Props {\r\n  name?: string;\r\n  title?: string;\r\n  withLabel?: boolean;\r\n  value?: number;\r\n  setValue?: React.Dispatch<React.SetStateAction<number>>;\r\n  className?: string;\r\n  help?: string;\r\n  min?: number;\r\n  max?: number;\r\n  disabled?: boolean;\r\n  readOnly?: boolean;\r\n  required?: boolean;\r\n  hint?: ReactNode;\r\n  step?: string;\r\n  placeholder?: string;\r\n  icon?: string;\r\n  borderless?: boolean;\r\n  autoFocus?: boolean;\r\n  canUnset?: boolean;\r\n}\r\nconst InputNumber = (\r\n  {\r\n    name,\r\n    title,\r\n    withLabel = true,\r\n    value,\r\n    setValue,\r\n    className,\r\n    hint,\r\n    help,\r\n    disabled = false,\r\n    readOnly = false,\r\n    required = false,\r\n    min = 0,\r\n    max,\r\n    step,\r\n    placeholder,\r\n    icon,\r\n    borderless,\r\n    autoFocus,\r\n    canUnset,\r\n  }: Props,\r\n  ref: Ref<RefInputNumber>\r\n) => {\r\n  useImperativeHandle(ref, () => ({ input }));\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  const [actualValue, setActualValue] = useState<number | undefined>(value);\r\n\r\n  useEffect(() => {\r\n    setActualValue(value);\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (setValue && actualValue) {\r\n      setValue(actualValue);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [actualValue]);\r\n\r\n  return (\r\n    <div className={clsx(className, \"text-gray-800\")}>\r\n      {withLabel && (\r\n        <label htmlFor={name} className=\"mb-1 flex justify-between space-x-2 text-xs font-medium text-gray-600\">\r\n          <div className=\" flex items-center space-x-1\">\r\n            <div className=\"truncate\">\r\n              {title}\r\n              {required && <span className=\"ml-1 text-red-500\">*</span>}\r\n            </div>\r\n\r\n            {help && <HintTooltip text={help} />}\r\n          </div>\r\n          {canUnset && !required && !disabled && !readOnly && actualValue !== undefined && (\r\n            <button type=\"button\" onClick={() => setActualValue(undefined)} className=\"text-xs text-gray-500\">\r\n              Clear\r\n            </button>\r\n          )}\r\n          {hint}\r\n        </label>\r\n      )}\r\n      <div className={clsx(\"relative flex w-full rounded-md\")}>\r\n        {icon && (\r\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n            <EntityIcon className=\"h-5 w-5 text-gray-400\" icon={icon} />\r\n          </div>\r\n        )}\r\n        <input\r\n          ref={input}\r\n          type=\"number\"\r\n          id={name}\r\n          name={name}\r\n          required={required}\r\n          min={min}\r\n          max={max}\r\n          value={actualValue ?? \"\"}\r\n          onChange={(e) => setActualValue(Number(e.currentTarget.value))}\r\n          step={step}\r\n          placeholder={placeholder}\r\n          disabled={disabled}\r\n          readOnly={readOnly}\r\n          autoFocus={autoFocus}\r\n          className={clsx(\r\n            \"block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500 sm:text-sm\",\r\n            className,\r\n            disabled || readOnly ? \"cursor-not-allowed bg-gray-100\" : \"hover:bg-gray-50 focus:bg-gray-50\",\r\n            icon && \"pl-10\",\r\n            borderless && \"border-transparent\"\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default forwardRef(InputNumber);\r\n", "export default function DownArrow({ className = \"h-4 w-4\" }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "export default function UpArrow({ className = \"h-4 w-4\" }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import { Link } from \"@remix-run/react\";\r\nimport { RowHeaderDisplayDto } from \"~/application/dtos/data/RowHeaderDisplayDto\";\r\nimport { InputType } from \"~/application/enums/shared/InputType\";\r\nimport InputNumber from \"~/components/ui/input/InputNumber\";\r\nimport InputSelect from \"~/components/ui/input/InputSelect\";\r\nimport InputText from \"~/components/ui/input/InputText\";\r\n\r\nfunction displayRowValue<T>(header: RowHeaderDisplayDto<T>, item: T, idxRow: number) {\r\n  return (\r\n    <>\r\n      {!header.setValue ? (\r\n        <>\r\n          {header.href !== undefined && header.href(item) ? (\r\n            <Link to={header.href(item) ?? \"\"} className=\"rounded-md border-b border-dashed border-transparent hover:border-gray-400 focus:bg-gray-100\">\r\n              <span>{header.formattedValue ? header.formattedValue(item, idxRow) : header.value(item, idxRow)}</span>\r\n            </Link>\r\n          ) : (\r\n            <span>{header.formattedValue ? header.formattedValue(item, idxRow) : header.value(item, idxRow)}</span>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          {header.type === undefined || header.type === InputType.TEXT ? (\r\n            <InputText\r\n              borderless={header.inputBorderless}\r\n              withLabel={false}\r\n              name={header.name}\r\n              title={header.title}\r\n              value={header.value(item, idxRow)}\r\n              disabled={header.editable && !header.editable(item, idxRow)}\r\n              setValue={(e) => {\r\n                if (header.setValue) {\r\n                  header.setValue(e, idxRow);\r\n                }\r\n              }}\r\n              required={!header.inputOptional}\r\n            />\r\n          ) : header.type === InputType.NUMBER ? (\r\n            <InputNumber\r\n              borderless={header.inputBorderless}\r\n              withLabel={false}\r\n              name={header.name}\r\n              title={header.title}\r\n              value={header.value(item, idxRow)}\r\n              disabled={header.editable && !header.editable(item)}\r\n              setValue={(e) => {\r\n                if (header.setValue) {\r\n                  header.setValue(e, idxRow);\r\n                }\r\n              }}\r\n              required={!header.inputOptional}\r\n              step={header.inputNumberStep}\r\n            />\r\n          ) : header.type === InputType.SELECT ? (\r\n            <InputSelect\r\n              borderless={header.inputBorderless}\r\n              withLabel={false}\r\n              name={header.name}\r\n              title={header.title}\r\n              value={header.value(item, idxRow)}\r\n              setValue={(e) => {\r\n                if (header.setValue) {\r\n                  header.setValue(Number(e), idxRow);\r\n                }\r\n              }}\r\n              options={header.options ?? []}\r\n              required={!header.inputOptional}\r\n              disabled={header.editable && !header.editable(item)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default {\r\n  displayRowValue,\r\n};\r\n", "import { ReactNode } from \"react\";\r\nimport HintTooltip from \"../tooltips/HintTooltip\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface Props {\r\n  name?: string;\r\n  title?: string;\r\n  withLabel?: boolean;\r\n  options: { name: string; value: string | number | undefined; disabled?: boolean }[];\r\n  value?: string | number | undefined;\r\n  setValue?: React.Dispatch<React.SetStateAction<string | number | undefined>>;\r\n  className?: string;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  help?: string;\r\n  hint?: ReactNode;\r\n  borderless?: boolean;\r\n  autoFocus?: boolean;\r\n}\r\nexport default function InputSelect({\r\n  name,\r\n  title,\r\n  withLabel = true,\r\n  value,\r\n  options,\r\n  setValue,\r\n  className,\r\n  required,\r\n  disabled,\r\n  help,\r\n  hint,\r\n  borderless,\r\n  autoFocus,\r\n}: Props) {\r\n  return (\r\n    <div className={clsx(className, \"w-full flex-grow text-gray-800\")}>\r\n      {withLabel && title && (\r\n        <label htmlFor={name} className=\"flex justify-between space-x-2 truncate text-xs font-medium text-gray-600\">\r\n          <div className=\"flex items-center space-x-1 truncate\">\r\n            <div className=\"flex space-x-1 truncate\">\r\n              <div className=\"truncate\">{title}</div>\r\n              {required && <div className=\"ml-1 text-red-500\">*</div>}\r\n            </div>\r\n\r\n            {help && <HintTooltip text={help} />}\r\n          </div>\r\n          {hint}\r\n        </label>\r\n      )}\r\n      <div className={clsx(withLabel && title && \"mt-1\")}>\r\n        <select\r\n          id={name}\r\n          name={name}\r\n          value={value}\r\n          onChange={(e) => (setValue ? setValue(e.currentTarget.value) : {})}\r\n          autoFocus={autoFocus}\r\n          className={clsx(\r\n            \"block w-full min-w-0 flex-1 rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500 sm:text-sm\",\r\n            className,\r\n            disabled ? \"cursor-not-allowed bg-gray-100\" : \"hover:bg-gray-50 focus:bg-gray-50\",\r\n            borderless && \"border-transparent\"\r\n          )}\r\n          disabled={disabled}\r\n        >\r\n          {options.map((item, idx) => {\r\n            return (\r\n              <option key={idx} value={item.value} disabled={item.disabled}>\r\n                {item.name}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import OrderListButtons from \"~/components/ui/sort/OrderListButtons\";\r\nimport TableSimple from \"~/components/ui/tables/TableSimple\";\r\n\r\nexport default function KbSortArticles({\r\n  items,\r\n}: {\r\n  items: {\r\n    id: string;\r\n    order: number;\r\n    title: string;\r\n  }[];\r\n}) {\r\n  return (\r\n    <div className=\"space-y-1\">\r\n      <label className=\"block text-xs font-medium text-gray-600\">{\"Articles\"}</label>\r\n      <TableSimple\r\n        items={items}\r\n        headers={[\r\n          {\r\n            name: \"order\",\r\n            title: \"\",\r\n            value: (i, idx) => <OrderListButtons index={idx} items={items} editable={true} />,\r\n          },\r\n          {\r\n            name: \"title\",\r\n            title: \"Title\",\r\n            value: (item) => item.title,\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useParams } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbCategorySectionForm from \"~/modules/knowledgeBase/components/bases/KbCategorySectionForm\";\r\nimport { getKbCategoryById } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { createKnowledgeBaseCategorySection } from \"~/modules/knowledgeBase/db/kbCategorySections.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"~/modules/knowledgeBase/helpers/KbCategoryModelHelper\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  category: KnowledgeBaseCategoryWithDetails;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  const category = await getKbCategoryById(params.id!);\r\n  if (!category) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  }\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    category,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const category = await getKbCategoryById(params.id!);\r\n  if (!category) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  }\r\n\r\n  if (action === \"new\") {\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n\r\n    let maxOrder = 0;\r\n    if (category.sections.length > 0) {\r\n      maxOrder = Math.max(...category.sections.map((i) => i.order));\r\n    }\r\n\r\n    try {\r\n      await createKnowledgeBaseCategorySection({\r\n        categoryId: category.id,\r\n        order: maxOrder + 1,\r\n        title,\r\n        description,\r\n      });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const params = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <KbCategorySectionForm knowledgeBase={data.knowledgeBase} category={data.category} language={params.lang!} />\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useParams, useSubmit } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbCategoryForm from \"~/modules/knowledgeBase/components/bases/KbCategoryForm\";\r\nimport { updateKnowledgeBaseArticle } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport {\r\n  deleteKnowledgeBaseCategory,\r\n  getKbCategoryById,\r\n  getKbCategoryBySlug,\r\n  updateKnowledgeBaseCategory,\r\n} from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"~/modules/knowledgeBase/helpers/KbCategoryModelHelper\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  item: KnowledgeBaseCategoryWithDetails;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  const item = await getKbCategoryById(params.id!);\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  }\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    item,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n\r\n  const item = await getKbCategoryById(params.id!);\r\n  if (!item) {\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  }\r\n\r\n  if (action === \"edit\") {\r\n    const slug = form.get(\"slug\")?.toString() ?? \"\";\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n    const icon = form.get(\"icon\")?.toString() ?? \"\";\r\n    const seoImage = form.get(\"seoImage\")?.toString() ?? \"\";\r\n\r\n    const existing = await getKbCategoryBySlug({\r\n      knowledgeBaseId: knowledgeBase.id,\r\n      slug,\r\n      language: params.lang!,\r\n    });\r\n    if (existing && existing.id !== item.id) {\r\n      return json({ error: \"Slug already exists\" }, { status: 400 });\r\n    }\r\n\r\n    try {\r\n      await updateKnowledgeBaseCategory(item.id, {\r\n        slug,\r\n        title,\r\n        description,\r\n        icon,\r\n        language: params.lang!,\r\n        seoImage,\r\n      });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  } else if (action === \"delete\") {\r\n    await deleteKnowledgeBaseCategory(item.id);\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  } else if (action === \"set-orders\") {\r\n    const items: { id: string; order: number }[] = form.getAll(\"orders[]\").map((f: FormDataEntryValue) => {\r\n      return JSON.parse(f.toString());\r\n    });\r\n\r\n    await Promise.all(\r\n      items.map(async ({ id, order }) => {\r\n        await updateKnowledgeBaseArticle(id, {\r\n          order: Number(order),\r\n        });\r\n      })\r\n    );\r\n    return json({ updated: true });\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const submit = useSubmit();\r\n  const params = useParams();\r\n\r\n  function onDelete() {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete\");\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <KbCategoryForm knowledgeBase={data.knowledgeBase} language={params.lang!} item={data.item} onDelete={onDelete} />\r\n    </div>\r\n  );\r\n}\r\n", "import { Form, useNavigate, useNavigation } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport InputText, { RefInputText } from \"~/components/ui/input/InputText\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"../../helpers/KbCategoryModelHelper\";\r\nimport KbSortArticles from \"../articles/KbSortArticles\";\r\n\r\nexport default function KbCategoryForm({\r\n  knowledgeBase,\r\n  language,\r\n  item,\r\n  onDelete,\r\n}: {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  language: string;\r\n  item?: KnowledgeBaseCategoryWithDetails;\r\n  onDelete?: () => void;\r\n}) {\r\n  const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  // const [showFilterModal, setShowFilterModal] = useState<{ item?: { type: FeatureFlagsFilterType; value: string | null }; idx?: number }>();\r\n\r\n  const mainInput = useRef<RefInputText>(null);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      mainInput.current?.input.current?.focus();\r\n    }, 100);\r\n  }, []);\r\n\r\n  const [slug, setSlug] = useState(item?.slug || \"\");\r\n  const [title, setTitle] = useState(item?.title || \"\");\r\n  const [description, setDescription] = useState(item?.description || \"\");\r\n  const [icon, setIcon] = useState(\r\n    item?.icon || \"\"\r\n    // `<svg stroke=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">   <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" /> </svg>`\r\n  );\r\n  // const [language, setLanguage] = useState(item?.language || \"\");\r\n  const [seoImage, setSeoImage] = useState(item?.seoImage || \"\");\r\n\r\n  useEffect(() => {\r\n    if (!item) {\r\n      setSlug(UrlUtils.slugify(title.toLowerCase()));\r\n    }\r\n  }, [item, title]);\r\n\r\n  return (\r\n    <div>\r\n      <Form method=\"post\" className=\"inline-block w-full overflow-hidden p-1 text-left align-bottom sm:align-middle\">\r\n        <input type=\"hidden\" name=\"action\" value={item ? \"edit\" : \"new\"} />\r\n        <div className=\"space-y-2\">\r\n          <InputText ref={mainInput} autoFocus name=\"title\" title={\"Title\"} value={title} setValue={setTitle} required />\r\n          <InputText name=\"slug\" title={\"Slug\"} value={slug} setValue={setSlug} required />\r\n          <InputText name=\"description\" title={\"Description\"} value={description} setValue={setDescription} />\r\n          {/* <InputSelect\r\n              name=\"language\"\r\n              title={\"Language\"}\r\n              value={language}\r\n              setValue={(e) => setLanguage((e?.toString() as any) || \"\")}\r\n              options={KnowledgeBaseUtils.supportedLanguages.map((item) => {\r\n                return {\r\n                  value: item.value,\r\n                  name: item.name,\r\n                };\r\n              })}\r\n            /> */}\r\n\r\n          <InputText\r\n            name=\"icon\"\r\n            title={\"Icon\"}\r\n            value={icon}\r\n            setValue={(e) => setIcon(e.toString() ?? \"\")}\r\n            hint={\"svg or url\"}\r\n            button={\r\n              <div className=\"absolute inset-y-0 right-0 flex py-0.5 pr-0.5 \">\r\n                <kbd className=\"inline-flex w-10 items-center justify-center rounded border border-gray-300 bg-gray-50 px-1 text-center font-sans text-xs font-medium text-gray-500\">\r\n                  {icon ? <EntityIcon className=\"h-7 w-7 text-gray-600\" icon={icon} title={title} /> : <span className=\"text-red-600\">?</span>}\r\n                </kbd>\r\n              </div>\r\n            }\r\n          />\r\n          <InputText name=\"seoImage\" title={\"SEO Image\"} value={seoImage} setValue={setSeoImage} hint={\"url\"} />\r\n          {seoImage && (\r\n            <div className=\"col-span-12\">\r\n              <img className=\"overflow-hidden rounded-lg shadow-xl xl:border-b xl:border-gray-200\" src={seoImage} alt={title} />\r\n            </div>\r\n          )}\r\n\r\n          {item && <KbSortArticles items={item.articles.filter((f) => !f.sectionId).sort((a, b) => a.order - b.order)} />}\r\n        </div>\r\n        <div className=\"mt-5 flex justify-between space-x-2 sm:mt-6\">\r\n          <div>\r\n            {onDelete && (\r\n              <ButtonSecondary disabled={navigation.state === \"submitting\"} type=\"button\" className=\"w-full\" onClick={onDelete} destructive>\r\n                <div>{\"Delete\"}</div>\r\n              </ButtonSecondary>\r\n            )}\r\n          </div>\r\n          <div className=\"flex space-x-2\">\r\n            <ButtonSecondary onClick={() => navigate(`/admin/knowledge-base/bases/${knowledgeBase.slug}/categories/${language}`)}>{\"Cancel\"}</ButtonSecondary>\r\n            <LoadingButton actionName={item ? \"edit\" : \"new\"} type=\"submit\" disabled={navigation.state === \"submitting\"}>\r\n              {\"Save\"}\r\n            </LoadingButton>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useParams } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport KbCategoryForm from \"~/modules/knowledgeBase/components/bases/KbCategoryForm\";\r\nimport { createKnowledgeBaseCategory, getAllKnowledgeBaseCategories, getKbCategoryBySlug } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n\r\n  if (action === \"new\") {\r\n    const slug = form.get(\"slug\")?.toString() ?? \"\";\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n    const icon = form.get(\"icon\")?.toString() ?? \"\";\r\n    const seoImage = form.get(\"seoImage\")?.toString() ?? \"\";\r\n\r\n    const allCategories = await getAllKnowledgeBaseCategories({\r\n      knowledgeBaseSlug: params.slug!,\r\n      language: params.lang!,\r\n    });\r\n    let maxOrder = 0;\r\n    if (allCategories.length > 0) {\r\n      maxOrder = Math.max(...allCategories.map((i) => i.order));\r\n    }\r\n\r\n    const existing = await getKbCategoryBySlug({\r\n      knowledgeBaseId: knowledgeBase.id,\r\n      slug,\r\n      language: params.lang!,\r\n    });\r\n    if (existing) {\r\n      return json({ error: \"Slug already exists\" }, { status: 400 });\r\n    }\r\n\r\n    try {\r\n      await createKnowledgeBaseCategory({\r\n        knowledgeBaseId: knowledgeBase.id,\r\n        slug,\r\n        title,\r\n        description,\r\n        icon,\r\n        language: params.lang!,\r\n        seoImage,\r\n        order: maxOrder + 1,\r\n      });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n\r\n    return redirect(`/admin/knowledge-base/bases/${params.slug}/categories/${params.lang}`);\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const params = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <KbCategoryForm knowledgeBase={data.knowledgeBase} language={params.lang!} />\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { Link, useNavigate, useOutlet, useParams, useSubmit } from \"@remix-run/react\";\r\nimport { useTypedActionData, useTypedLoaderData } from \"remix-typedjson\";\r\nimport { FilterablePropertyDto } from \"~/application/dtos/data/FilterablePropertyDto\";\r\nimport { PaginationDto } from \"~/application/dtos/data/PaginationDto\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport SimpleBadge from \"~/components/ui/badges/SimpleBadge\";\r\nimport ButtonPrimary from \"~/components/ui/buttons/ButtonPrimary\";\r\nimport PlusIcon from \"~/components/ui/icons/PlusIcon\";\r\nimport InputCheckbox from \"~/components/ui/input/InputCheckbox\";\r\nimport InputFilters from \"~/components/ui/input/InputFilters\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport ActionResultModal from \"~/components/ui/modals/ActionResultModal\";\r\nimport SlideOverWideEmpty from \"~/components/ui/slideOvers/SlideOverWideEmpty\";\r\nimport TableSimple from \"~/components/ui/tables/TableSimple\";\r\nimport { getFiltersFromCurrentUrl, getPaginationFromCurrentUrl } from \"~/helpers/RowPaginationHelper\";\r\nimport {\r\n  KnowledgeBaseArticleWithDetails,\r\n  createKnowledgeBaseArticle,\r\n  getAllKnowledgeBaseArticles,\r\n  getAllKnowledgeBaseArticlesWithPagination,\r\n  getKbArticleById,\r\n  updateKnowledgeBaseArticle,\r\n} from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { getAllKnowledgeBaseCategories, updateKnowledgeBaseCategory } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { updateKnowledgeBaseCategorySection } from \"~/modules/knowledgeBase/db/kbCategorySections.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  items: KnowledgeBaseArticleWithDetails[];\r\n  pagination: PaginationDto;\r\n  filterableProperties: FilterablePropertyDto[];\r\n};\r\nexport let loader = async ({ request, params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const urlSearchParams = new URL(request.url).searchParams;\r\n  const currentPagination = getPaginationFromCurrentUrl(urlSearchParams);\r\n  const filterableProperties: FilterablePropertyDto[] = [\r\n    {\r\n      name: \"title\",\r\n      title: \"Title\",\r\n    },\r\n    {\r\n      name: \"description\",\r\n      title: \"Description\",\r\n    },\r\n    {\r\n      name: \"categoryId\",\r\n      title: \"Category\",\r\n      options: [\r\n        { value: \"null\", name: \"{null}\" },\r\n        ...(await getAllKnowledgeBaseCategories({ knowledgeBaseSlug: knowledgeBase.slug, language: params.lang! })).map((item) => {\r\n          return {\r\n            value: item.id,\r\n            name: item.title,\r\n          };\r\n        }),\r\n      ],\r\n    },\r\n  ];\r\n  const filters = getFiltersFromCurrentUrl(request, filterableProperties);\r\n  const filtered = {\r\n    title: filters.properties.find((f) => f.name === \"title\")?.value ?? filters.query ?? undefined,\r\n    description: filters.properties.find((f) => f.name === \"description\")?.value ?? filters.query ?? undefined,\r\n    categoryId: filters.properties.find((f) => f.name === \"categoryId\")?.value ?? undefined,\r\n  };\r\n  const { items, pagination } = await getAllKnowledgeBaseArticlesWithPagination({\r\n    knowledgeBaseSlug: params.slug!,\r\n    language: params.lang!,\r\n    pagination: currentPagination,\r\n    filters: {\r\n      title: filtered.title,\r\n      description: filtered.description,\r\n      categoryId: filtered.categoryId === \"null\" ? null : filtered.categoryId,\r\n    },\r\n  });\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    items,\r\n    pagination,\r\n    filterableProperties,\r\n  };\r\n  return json(data);\r\n};\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n};\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString() ?? \"\";\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const kb = await KnowledgeBaseService.get({ slug: params.slug! });\r\n\r\n  if (action === \"new\") {\r\n    const allArticles = await getAllKnowledgeBaseArticles({\r\n      knowledgeBaseSlug: kb.slug,\r\n      language: params.lang!,\r\n    });\r\n    const { slug, maxOrder, number } = KnowledgeBaseUtils.getAvailableArticleSlug({\r\n      allArticles,\r\n      initialSlug: \"untitled\",\r\n    });\r\n    const created = await createKnowledgeBaseArticle({\r\n      knowledgeBaseId: kb.id,\r\n      categoryId: null,\r\n      sectionId: null,\r\n      slug,\r\n      title: `Untitled ${number}`,\r\n      description: \"\",\r\n      order: maxOrder + 1,\r\n      contentDraft: \"\",\r\n      contentPublished: \"\",\r\n      contentType: \"wysiwyg\",\r\n      language: params.lang!,\r\n      featuredOrder: null,\r\n      author: \"\",\r\n      seoImage: \"\",\r\n      publishedAt: null,\r\n    });\r\n    return redirect(`/admin/knowledge-base/bases/${kb.slug}/articles/${params.lang}/${created.id}/edit`);\r\n  } else if (action === \"set-orders\") {\r\n    const items: { id: string; order: number }[] = form.getAll(\"orders[]\").map((f: FormDataEntryValue) => {\r\n      return JSON.parse(f.toString());\r\n    });\r\n\r\n    await Promise.all(\r\n      items.map(async ({ id, order }) => {\r\n        await updateKnowledgeBaseCategory(id, {\r\n          order: Number(order),\r\n        });\r\n      })\r\n    );\r\n    return json({ updated: true });\r\n  } else if (action === \"set-section-orders\") {\r\n    const items: { id: string; order: number }[] = form.getAll(\"orders[]\").map((f: FormDataEntryValue) => {\r\n      return JSON.parse(f.toString());\r\n    });\r\n\r\n    await Promise.all(\r\n      items.map(async ({ id, order }) => {\r\n        await updateKnowledgeBaseCategorySection(id, {\r\n          order: Number(order),\r\n        });\r\n      })\r\n    );\r\n    return json({ updated: true });\r\n  } else if (action === \"duplicate\") {\r\n    try {\r\n      const id = form.get(\"id\")?.toString() ?? \"\";\r\n      const item = await KnowledgeBaseService.duplicateArticle({ kb, language: params.lang!, articleId: id });\r\n      return redirect(`/admin/knowledge-base/bases/${kb.slug}/articles/${params.lang}/${item.id}`);\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n  } else if (action === \"toggle\") {\r\n    const id = form.get(\"id\")?.toString() ?? \"\";\r\n    const isFeatured = form.get(\"isFeatured\")?.toString() === \"true\";\r\n\r\n    const item = await getKbArticleById(id);\r\n    if (!item) {\r\n      return json({ error: \"Not found\" }, { status: 404 });\r\n    }\r\n\r\n    let featuredOrder = item.featuredOrder;\r\n    if (isFeatured) {\r\n      if (!item.featuredOrder) {\r\n        const featuredArticles = await KnowledgeBaseService.getFeaturedArticles({\r\n          kb,\r\n          params: {},\r\n        });\r\n        let maxOrder = 0;\r\n        if (featuredArticles.length > 0) {\r\n          maxOrder = Math.max(...featuredArticles.map((p) => p.featuredOrder ?? 0));\r\n        }\r\n        featuredOrder = maxOrder + 1;\r\n      }\r\n    } else {\r\n      featuredOrder = null;\r\n    }\r\n    await updateKnowledgeBaseArticle(item.id, {\r\n      featuredOrder,\r\n    });\r\n\r\n    return json({ success: \"Updated\" });\r\n  }\r\n  return json({ error: \"Invalid action\" }, { status: 400 });\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const params = useParams();\r\n  const outlet = useOutlet();\r\n  const navigate = useNavigate();\r\n  const submit = useSubmit();\r\n\r\n  function onDuplicate(item: KnowledgeBaseArticleWithDetails) {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"duplicate\");\r\n    form.set(\"id\", item.id);\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  function onToggle(item: KnowledgeBaseArticleWithDetails, isFeatured: boolean) {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"toggle\");\r\n    form.set(\"isFeatured\", isFeatured ? \"true\" : \"false\");\r\n    form.set(\"id\", item.id.toString());\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <EditPageLayout\r\n      title={`Articles (${KnowledgeBaseUtils.getLanguageName(params.lang!)})`}\r\n      withHome={false}\r\n      menu={[\r\n        { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n        { title: \"Articles\", routePath: `/admin/knowledge-base/bases/${params.slug}/articles` },\r\n        { title: params.lang!, routePath: `/admin/knowledge-base/bases/${params.slug}/articles/${params.lang}` },\r\n      ]}\r\n      buttons={\r\n        <>\r\n          <InputFilters filters={data.filterableProperties} />\r\n          <ButtonPrimary\r\n            onClick={() => {\r\n              const form = new FormData();\r\n              form.set(\"action\", \"new\");\r\n              submit(form, {\r\n                method: \"post\",\r\n              });\r\n            }}\r\n          >\r\n            <div>New</div>\r\n            <PlusIcon className=\"h-5 w-5\" />\r\n          </ButtonPrimary>\r\n        </>\r\n      }\r\n    >\r\n      <div className=\"space-y-2\">\r\n        <TableSimple\r\n          items={data.items}\r\n          pagination={data.pagination}\r\n          actions={[\r\n            {\r\n              title: \"Settings\",\r\n              onClickRoute: (_, item) => `${item.id}/settings`,\r\n            },\r\n            {\r\n              title: \"Duplicate\",\r\n              onClick: (_, item) => onDuplicate(item),\r\n            },\r\n            {\r\n              title: \"Edit\",\r\n              onClickRoute: (_, item) => `${item.id}`,\r\n            },\r\n          ]}\r\n          headers={[\r\n            {\r\n              name: \"status\",\r\n              title: \"Status\",\r\n              value: (i) => (\r\n                <div>{!i.publishedAt ? <SimpleBadge title=\"Draft\" color={Colors.GRAY} /> : <SimpleBadge title=\"Published\" color={Colors.TEAL} />}</div>\r\n              ),\r\n            },\r\n            // {\r\n            //   name: \"language\",\r\n            //   title: \"Language\",\r\n            //   value: (i) => KnowledgeBaseUtils.getLanguageName(i.language),\r\n            // },\r\n            {\r\n              name: \"title\",\r\n              title: \"Title\",\r\n              className: \"w-full\",\r\n              value: (i) => (\r\n                <div className=\"space-y-1\">\r\n                  <div className=\"font-medium\">{i.title}</div>\r\n                  {/* <div className=\"text-gray-600 text-sm\">{i.description}</div> */}\r\n                  {/* <div className=\"text-sm text-gray-500\">{i.slug}</div>\r\n                  <div className=\"text-gray-600 text-sm\">{i.description}</div> */}\r\n                </div>\r\n              ),\r\n            },\r\n            {\r\n              name: \"category\",\r\n              title: \"Category\",\r\n              value: (i) => (\r\n                <div>\r\n                  {i.category ? (\r\n                    <div>\r\n                      {i.category.title}\r\n                      {i.section ? ` / ${i.section.title}` : \"\"}\r\n                    </div>\r\n                  ) : (\r\n                    <Link to={`${i.id}/settings`} className=\"text-gray-500 text-xs italic hover:underline\">\r\n                      No category\r\n                    </Link>\r\n                  )}\r\n                </div>\r\n              ),\r\n            },\r\n            {\r\n              name: \"views\",\r\n              title: \"Views\",\r\n              value: (i) => i._count.views,\r\n            },\r\n            {\r\n              name: \"upvotes\",\r\n              title: \"Upvotes\",\r\n              value: (i) => i._count.upvotes,\r\n            },\r\n            {\r\n              name: \"downvotes\",\r\n              title: \"Downvotes\",\r\n              value: (i) => i._count.downvotes,\r\n            },\r\n            {\r\n              name: \"featured\",\r\n              title: \"Featured\",\r\n              value: (i) => {\r\n                return <InputCheckbox asToggle value={i.featuredOrder ? true : false} setValue={(checked) => onToggle(i, Boolean(checked))} />;\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <ActionResultModal actionData={actionData} showSuccess={false} />\r\n\r\n      <SlideOverWideEmpty\r\n        title={\"Article settings\"}\r\n        open={!!outlet}\r\n        onClose={() => {\r\n          navigate(\".\", { replace: true });\r\n        }}\r\n        className=\"sm:max-w-sm\"\r\n        overflowYScroll={true}\r\n      >\r\n        <div className=\"-mx-1 -mt-3\">\r\n          <div className=\"space-y-4\">{outlet}</div>\r\n        </div>\r\n      </SlideOverWideEmpty>\r\n    </EditPageLayout>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport { getBadgeColor } from \"~/utils/shared/ColorUtils\";\r\n\r\ninterface Props {\r\n  title?: string;\r\n  color: Colors;\r\n  className?: string;\r\n  children?: string;\r\n}\r\n\r\nexport default function SimpleBadge({ title, color, className, children }: Props) {\r\n  return <div className={clsx(className, \"inline-flex items-center rounded-md px-1 py-0 text-xs font-bold\", getBadgeColor(color))}>{title ?? children}</div>;\r\n}\r\n", "import { Switch } from \"@headlessui/react\";\r\nimport clsx from \"clsx\";\r\nimport { forwardRef, ReactNode, Ref, RefObject, useEffect, useImperativeHandle, useRef, useState } from \"react\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\nimport HintTooltip from \"~/components/ui/tooltips/HintTooltip\";\r\n\r\nexport interface RefInputCheckbox {\r\n  input: RefObject<HTMLInputElement>;\r\n}\r\n\r\ninterface Props {\r\n  name?: string;\r\n  title?: string;\r\n  withLabel?: boolean;\r\n  value?: boolean;\r\n  setValue?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  className?: string;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  asToggle?: boolean;\r\n  readOnly?: boolean;\r\n  hint?: ReactNode;\r\n  help?: string;\r\n  icon?: string;\r\n  autoFocus?: boolean;\r\n}\r\nconst InputCheckbox = (\r\n  { name, title, withLabel = true, value, setValue, className, required, disabled, asToggle, readOnly, hint, help, icon, autoFocus }: Props,\r\n  ref: Ref<RefInputCheckbox>\r\n) => {\r\n  useImperativeHandle(ref, () => ({ input }));\r\n  const input = useRef<HTMLInputElement>(null);\r\n\r\n  const [actualValue, setActualValue] = useState(value ?? false);\r\n\r\n  useEffect(() => {\r\n    setActualValue(value ?? false);\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (setValue && actualValue !== value) {\r\n      setValue(actualValue);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [actualValue]);\r\n\r\n  return (\r\n    <div className={clsx(className, \"text-gray-800\")}>\r\n      {withLabel && title && (\r\n        <label htmlFor={name} className=\"mb-1 flex justify-between space-x-2 text-xs font-medium text-gray-600\">\r\n          <div className=\" flex items-center space-x-1\">\r\n            <div className=\"truncate\">\r\n              {title}\r\n              {required && <span className=\"ml-1 text-red-500\">*</span>}\r\n            </div>\r\n            <div className=\"\">{help && <HintTooltip text={help} />}</div>\r\n          </div>\r\n          {hint}\r\n        </label>\r\n      )}\r\n      <div className={clsx(\"relative flex w-full rounded-md\")}>\r\n        {icon && (\r\n          <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n            <EntityIcon className=\"h-5 w-5 text-gray-400\" icon={icon} />\r\n          </div>\r\n        )}\r\n        <input type=\"hidden\" readOnly name={name} value={actualValue === true ? \"true\" : \"false\"} />\r\n        {asToggle ? (\r\n          <Switch\r\n            checked={actualValue}\r\n            onChange={setActualValue}\r\n            disabled={disabled || readOnly}\r\n            autoFocus={autoFocus}\r\n            className={clsx(\r\n              actualValue ? \"bg-teal-600\" : \"bg-gray-200\",\r\n              \"relative inline-flex h-5 w-8 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-accent-500 focus:ring-offset-2\",\r\n              icon && \"pl-10\",\r\n              disabled && \"cursor-not-allowed\"\r\n            )}\r\n          >\r\n            <span\r\n              aria-hidden=\"true\"\r\n              className={clsx(\r\n                actualValue ? \"translate-x-3\" : \"translate-x-0\",\r\n                \"pointer-events-none inline-block h-4 w-4 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out\"\r\n              )}\r\n            />\r\n          </Switch>\r\n        ) : (\r\n          <input\r\n            type=\"checkbox\"\r\n            id={name}\r\n            name={name}\r\n            readOnly={readOnly}\r\n            onChange={(e) => setActualValue(e.target.checked)}\r\n            disabled={disabled || readOnly}\r\n            autoFocus={autoFocus}\r\n            checked={actualValue}\r\n            className={clsx(\r\n              (disabled || readOnly) && \"cursor-not-allowed bg-gray-100\",\r\n              \"mt-1 h-6 w-6 cursor-pointer rounded border-gray-300 text-accent-800 focus:ring-accent-500\",\r\n              className,\r\n              icon && \"pl-10\"\r\n            )}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default forwardRef(InputCheckbox);\r\n", "import { Transition } from \"@headlessui/react\";\r\nimport clsx from \"clsx\";\r\nimport { FormEvent, Fragment, useEffect, useState } from \"react\";\r\nimport { Form, useSearchParams } from \"@remix-run/react\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport { useOuterClick } from \"~/utils/shared/KeypressUtils\";\r\nimport { updateItemByIdx } from \"~/utils/shared/ObjectUtils\";\r\nimport FilterEmptyIcon from \"../icons/FilterEmptyIcon\";\r\nimport FilterFilledIcon from \"../icons/FilterFilledIcon\";\r\nimport InputCheckboxInline from \"./InputCheckboxInline\";\r\nimport InputSearch from \"./InputSearch\";\r\nimport InputSelector from \"./InputSelector\";\r\n\r\nexport type FilterDto = {\r\n  name: string;\r\n  title: string;\r\n  options?: { name: string; value: string; color?: Colors }[];\r\n  hideSearch?: boolean;\r\n  isBoolean?: boolean;\r\n};\r\n\r\nexport type FilterValueDto = FilterDto & {\r\n  selected: boolean;\r\n  value?: string;\r\n};\r\n\r\ninterface Props {\r\n  filters: FilterDto[];\r\n  withSearch?: boolean;\r\n  withName?: boolean;\r\n  // saveEntityFilters?: {\r\n  //   entity: EntityWithDetails;\r\n  //   currentView: EntityView | null;\r\n  //   onSaveFilters: (filters: FilterValueDto[]) => void;\r\n  // };\r\n}\r\n\r\nexport default function InputFilters({ filters, withSearch = true }: Props) {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [opened, setOpened] = useState(false);\r\n  const [items, setItems] = useState<FilterValueDto[]>([]);\r\n  const [filteredItems, setFilteredItems] = useState<number>(0);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const items: FilterValueDto[] = filters.map((item) => {\r\n      const value = searchParams.get(item.name) ?? undefined;\r\n      return {\r\n        ...item,\r\n        selected: value !== undefined,\r\n        value,\r\n      };\r\n    });\r\n    setItems(items);\r\n    setSearchInput(searchParams.get(\"q\") ?? \"\");\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filters]);\r\n\r\n  useEffect(() => {\r\n    const appliedFilters: FilterValueDto[] = [];\r\n    items.forEach((item) => {\r\n      const value = searchParams.get(item.name) ?? undefined;\r\n      if (value) {\r\n        appliedFilters.push(item);\r\n      }\r\n    });\r\n    if (withSearch) {\r\n      setFilteredItems(appliedFilters.length + (searchParams.get(\"q\") ? 1 : 0));\r\n    } else {\r\n      setFilteredItems(appliedFilters.length);\r\n    }\r\n  }, [items, searchInput, searchParams, withSearch]);\r\n\r\n  // useEffect(() => {\r\n  //     const searchInput = searchParams.get(\"q\");\r\n  //     setSearchInput(searchInput ?? \"\");\r\n\r\n  //     const newItems = items;\r\n  //     items.forEach((item, idx) => {\r\n  //       const valueInParam = searchParams.get(item.name);\r\n  //       if (valueInParam) {\r\n  //         newItems[idx].selected = true;\r\n  //         newItems[idx].value = valueInParam.toString();\r\n  //       } else {\r\n  //         newItems[idx].selected = false;\r\n  //         newItems[idx].value = undefined;\r\n  //       }\r\n  //     });\r\n  //     setItems(newItems);\r\n  //   // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  // }, [searchParams]);\r\n\r\n  function onClear() {\r\n    setOpened(false);\r\n\r\n    items.forEach((item) => {\r\n      searchParams.delete(item.name);\r\n      item.selected = false;\r\n      item.value = undefined;\r\n    });\r\n    setItems(items);\r\n\r\n    searchParams.delete(\"page\");\r\n    searchParams.delete(\"q\");\r\n    setSearchInput(\"\");\r\n\r\n    setSearchParams(searchParams);\r\n  }\r\n\r\n  function onSubmit(e: FormEvent<HTMLFormElement>) {\r\n    e.preventDefault();\r\n    items.forEach((item) => {\r\n      if (item.selected && item.value) {\r\n        searchParams.set(item.name, item.value?.toString() ?? \"\");\r\n      } else {\r\n        searchParams.delete(item.name);\r\n      }\r\n    });\r\n    if (searchInput) {\r\n      searchParams.set(\"q\", searchInput);\r\n    } else {\r\n      searchParams.delete(\"q\");\r\n    }\r\n    searchParams.delete(\"page\");\r\n    setSearchParams(searchParams);\r\n    setOpened(false);\r\n  }\r\n\r\n  const clickOutside = useOuterClick(() => setOpened(false));\r\n\r\n  return (\r\n    <Fragment>\r\n      <div ref={clickOutside} className=\"relative\">\r\n        <button\r\n          onClick={() => setOpened(!opened)}\r\n          className=\"relative z-0 inline-flex rounded-md text-sm shadow-sm hover:bg-gray-50 focus:z-10 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n        >\r\n          <span\r\n            className={clsx(\r\n              \"relative inline-flex items-center space-x-2 border border-gray-300 bg-white px-3 py-3 text-sm font-medium text-gray-600 sm:py-2\",\r\n              filteredItems === 0 ? \"rounded-md\" : \"rounded-l-md\"\r\n            )}\r\n          >\r\n            <div>\r\n              {filteredItems === 0 && <FilterEmptyIcon className=\"h-3 w-3\" />}\r\n              {filteredItems > 0 && <FilterFilledIcon className=\"h-3 w-3\" />}\r\n            </div>\r\n            <div className=\"hidden sm:block\">{\"Filters\"}</div>\r\n          </span>\r\n          {filteredItems > 0 && (\r\n            <span\r\n              className={clsx(\r\n                \"relative -ml-px inline-flex items-center rounded-r-md border border-gray-300 px-3 py-2 font-medium sm:text-sm\",\r\n                filteredItems > 0 ? \"bg-theme-50 text-theme-500\" : \"bg-white text-gray-700\"\r\n              )}\r\n            >\r\n              {filteredItems}\r\n            </span>\r\n          )}\r\n        </button>\r\n\r\n        <Transition\r\n          as={Fragment}\r\n          show={opened}\r\n          enter=\"transition ease-out duration-100\"\r\n          enterFrom=\"transform opacity-0 scale-95\"\r\n          enterTo=\"transform opacity-100 scale-100\"\r\n          leave=\"transition ease-in duration-75\"\r\n          leaveFrom=\"transform opacity-100 scale-100\"\r\n          leaveTo=\"transform opacity-0 scale-95\"\r\n        >\r\n          <Form\r\n            onSubmit={onSubmit}\r\n            method=\"get\"\r\n            className=\"absolute right-0 z-40 mt-2 w-64 origin-top-right divide-y divide-gray-200 overflow-visible rounded-md bg-gray-50 shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\r\n          >\r\n            <div className=\"flex items-center justify-between px-2 py-2 text-sm\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClear}\r\n                className=\"rounded-md border border-gray-300 bg-white px-2 py-0.5 hover:bg-gray-50 focus:z-10 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n              >\r\n                {\"Clear\"}\r\n              </button>\r\n              <div className=\"font-bold\">{\"Filters\"}</div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"rounded-md border border-gray-300 bg-accent-800 px-2 py-0.5 text-white hover:bg-accent-900 focus:z-10 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n              >\r\n                {\"Apply\"}\r\n              </button>\r\n            </div>\r\n            <div className=\"divide-y divide-gray-200 rounded-b-md bg-white text-sm\">\r\n              {withSearch && (\r\n                <div className=\"p-2\">\r\n                  <InputSearch value={searchInput} setValue={setSearchInput} placeholder={\"Search all\" + \"...\"} />\r\n                </div>\r\n              )}\r\n              {items.map((filter, idx) => {\r\n                return (\r\n                  <div key={filter.name} className=\"divide-y divide-gray-200\">\r\n                    <div className=\"divide-y divide-gray-300 px-2 py-2\">\r\n                      <InputCheckboxInline\r\n                        name={\"filter-\" + filter.name}\r\n                        title={filter.title}\r\n                        value={filter.selected}\r\n                        setValue={(e) => {\r\n                          updateItemByIdx(items, setItems, idx, {\r\n                            selected: Boolean(e),\r\n                          });\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    {filter.selected && (\r\n                      <div className=\"bg-gray-50 px-2 py-1\">\r\n                        {filter.options && filter.options.length > 0 ? (\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <InputSelector\r\n                              withSearch={!filter.hideSearch}\r\n                              name={filter.name}\r\n                              title={\"\"}\r\n                              withColors={true}\r\n                              options={filter.options.map((item) => {\r\n                                return {\r\n                                  value: item.value,\r\n                                  name: item.name ? item.name : item.value,\r\n                                  color: item.color,\r\n                                };\r\n                              })}\r\n                              value={filter.value}\r\n                              withLabel={false}\r\n                              setValue={(e) => {\r\n                                updateItemByIdx(items, setItems, idx, {\r\n                                  value: e,\r\n                                });\r\n                              }}\r\n                              className=\"w-full pb-1\"\r\n                            />\r\n                          </div>\r\n                        ) : filter.isBoolean ? (\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <InputSelector\r\n                              withSearch={!filter.hideSearch}\r\n                              name={filter.name}\r\n                              title={\"\"}\r\n                              options={[\r\n                                { name: \"Yes\", value: \"true\" },\r\n                                { name: \"No\", value: \"false\" },\r\n                              ]}\r\n                              value={filter.value}\r\n                              withLabel={false}\r\n                              setValue={(e) => {\r\n                                updateItemByIdx(items, setItems, idx, {\r\n                                  value: e,\r\n                                });\r\n                              }}\r\n                              className=\"w-full pb-1\"\r\n                            />\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <div className=\"flex-shrink-0 truncate text-gray-500\">contains</div>\r\n                            <input\r\n                              type=\"text\"\r\n                              name={filter.name}\r\n                              autoComplete=\"off\"\r\n                              className=\"block w-full min-w-0 flex-1 rounded-md border-gray-300 p-1 text-sm focus:border-accent-500 focus:ring-accent-500\"\r\n                              required\r\n                              value={filter.value ?? \"\"}\r\n                              onChange={(e) => {\r\n                                updateItemByIdx(items, setItems, idx, {\r\n                                  value: e.currentTarget.value,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              })}\r\n              {/* {saveEntityFilters && (\r\n                <div className=\"divide-y divide-gray-200\">\r\n                  <div className=\"flex justify-end space-x-2 px-2 py-2\">\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        saveEntityFilters?.onSaveFilters(items.filter((f) => f.value));\r\n                        setOpened(false);\r\n                      }}\r\n                      className={clsx(\r\n                        \"rounded-md border border-gray-300  px-2 py-0.5\",\r\n                        false\r\n                          ? \" bg-gray-100 text-gray-400\"\r\n                          : \"bg-white text-gray-600 hover:bg-gray-50 hover:text-gray-700 focus:z-10 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n                      )}\r\n                    >\r\n                      {saveEntityFilters.currentView ? <div>{t(\"shared.updateView\")}</div> : <div>{t(\"shared.createView\")}</div>}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )} */}\r\n            </div>\r\n          </Form>\r\n        </Transition>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n", "import { useCallback, useEffect, useRef } from \"react\";\r\n\r\nfunction useKeypress(callback: () => void, keyCode: number) {\r\n  const escFunction = useCallback((event: any) => {\r\n    if (event.keyCode === keyCode) {\r\n      callback();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", escFunction, false);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", escFunction, false);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n}\r\n\r\nexport function useEscapeKeypress(callback: () => void) {\r\n  useKeypress(callback, 27);\r\n}\r\n\r\nexport function useEnterKeypress(callback: () => void) {\r\n  useKeypress(callback, 13);\r\n}\r\n\r\nexport function useOuterClick(callback: () => void) {\r\n  const callbackRef = useRef<any>(); // initialize mutable ref, which stores callback\r\n  const innerRef = useRef<any>(); // returned to client, who marks \"border\" element\r\n\r\n  // update cb on each render, so second useEffect has access to current value\r\n  useEffect(() => {\r\n    callbackRef.current = callback;\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClick);\r\n    return () => document.removeEventListener(\"click\", handleClick);\r\n    function handleClick(e: any) {\r\n      if (innerRef.current && callbackRef.current && !innerRef.current.contains(e.target)) callbackRef.current(e);\r\n    }\r\n  }, []); // no dependencies -> stable click listener\r\n\r\n  return innerRef; // convenience for client (doesn't need to init ref himself)\r\n}\r\n", "export function updateItem(items: any[], setItems: any, id: string, itemAttributes: any, idProp = \"id\") {\r\n  const index = items.findIndex((x) => x[idProp] === id);\r\n  if (index !== -1) {\r\n    setItems([...items.slice(0, index), Object.assign({}, items[index], itemAttributes), ...items.slice(index + 1)]);\r\n  }\r\n}\r\n\r\nexport function updateItemByIdx(items: any[], setItems: any, index: number, itemAttributes: any) {\r\n  if (index !== -1) {\r\n    setItems([...items.slice(0, index), Object.assign({}, items[index], itemAttributes), ...items.slice(index + 1)]);\r\n  }\r\n}\r\n\r\nexport function isEqual(a: any, b: any) {\r\n  return JSON.stringify(a) === JSON.stringify(b);\r\n}\r\n", "export default function FilterEmptyIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "export default function FilterFilledIcon({ className }: { className?: string }) {\r\n  return (\r\n    <svg className={className} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M3 3a1 1 0 011-1h12a1 1 0 011 1v3a1 1 0 01-.293.707L12 11.414V15a1 1 0 01-.293.707l-2 2A1 1 0 018 17v-5.586L3.293 6.707A1 1 0 013 6V3z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { forwardRef, ReactNode, Ref, RefObject, useImperativeHandle, useRef } from \"react\";\r\nimport HintTooltip from \"~/components/ui/tooltips/HintTooltip\";\r\n\r\nexport interface RefInputCheckbox {\r\n  input: RefObject<HTMLInputElement>;\r\n}\r\n\r\ninterface Props {\r\n  name: string;\r\n  title: string | ReactNode;\r\n  value?: boolean;\r\n  setValue?: React.Dispatch<React.SetStateAction<boolean>>;\r\n  className?: string;\r\n  help?: string;\r\n  required?: boolean;\r\n  disabled?: boolean;\r\n  description?: ReactNode;\r\n  readOnly?: boolean;\r\n  autoFocus?: boolean;\r\n}\r\nconst InputCheckboxInline = (\r\n  { name, title, value, setValue, description, className, help, required, disabled = false, readOnly, autoFocus }: Props,\r\n  ref: Ref<RefInputCheckbox>\r\n) => {\r\n  useImperativeHandle(ref, () => ({ input }));\r\n  const input = useRef<HTMLInputElement>(null);\r\n  return (\r\n    <div className={clsx(className, \"text-gray-800\")}>\r\n      <div className=\"relative flex cursor-pointer select-none items-start sm:col-span-6\">\r\n        <div className=\"flex h-5 cursor-pointer items-center\">\r\n          <input\r\n            type=\"checkbox\"\r\n            id={name}\r\n            name={name}\r\n            checked={value}\r\n            onChange={(e) => {\r\n              setValue?.(e.target.checked);\r\n            }}\r\n            disabled={disabled}\r\n            readOnly={readOnly}\r\n            autoFocus={autoFocus}\r\n            className={clsx(\r\n              (disabled || readOnly) && \"cursor-not-allowed bg-gray-100\",\r\n              \"h-4 w-4 cursor-pointer rounded border-gray-300 text-theme-600 focus:ring-theme-500\"\r\n            )}\r\n          />\r\n        </div>\r\n        <div className=\"ml-3 text-sm\">\r\n          <label htmlFor={name} className=\"cursor-pointer font-medium text-gray-700\">\r\n            <div className=\" flex items-center space-x-1\">\r\n              <div>\r\n                {title}\r\n                {description}\r\n                {required && <span className=\"ml-1 text-red-500\">*</span>}\r\n              </div>\r\n\r\n              {help && <HintTooltip text={help} />}\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default forwardRef(InputCheckboxInline);\r\n", "import clsx from \"clsx\";\r\nimport ButtonPrimary from \"../buttons/ButtonPrimary\";\r\n\r\ninterface Props {\r\n  value: string;\r\n  setValue: React.Dispatch<React.SetStateAction<string>>;\r\n  onNew?: () => void;\r\n  onNewRoute?: string;\r\n  placeholder?: string;\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport default function InputSearch({ value, setValue, onNew, onNewRoute, placeholder, className, disabled }: Props) {\r\n  return (\r\n    <div className={clsx(\"flex justify-between space-x-2\", className)}>\r\n      <div className=\"relative flex w-full flex-auto items-center\">\r\n        <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3 focus-within:z-10\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"search\"\r\n          id=\"search\"\r\n          className=\"block w-full rounded-md border-gray-300 pl-10 focus:border-theme-500 focus:ring-theme-500 sm:text-sm\"\r\n          placeholder={placeholder ?? \"Search...\"}\r\n          value={value}\r\n          onChange={(e) => setValue(e.target.value)}\r\n          autoComplete=\"off\"\r\n          disabled={disabled}\r\n        />\r\n      </div>\r\n      {onNew && <ButtonPrimary onClick={onNew}>{\"New\"}</ButtonPrimary>}\r\n      {onNewRoute && <ButtonPrimary to={onNewRoute}>{\"New\"}</ButtonPrimary>}\r\n    </div>\r\n  );\r\n}\r\n", "import { SortedByDto } from \"~/application/dtos/data/SortedByDto\";\r\nimport { FilterablePropertyDto } from \"~/application/dtos/data/FilterablePropertyDto\";\r\nimport Constants from \"~/application/Constants\";\r\nimport { FiltersDto } from \"~/application/dtos/data/FiltersDto\";\r\n\r\nexport function getPaginationFromCurrentUrl(urlSearchParams: URLSearchParams): { page: number; pageSize: number; sortedBy: SortedByDto[]; query: string } {\r\n  return {\r\n    page: getPageFromCurrentUrl(urlSearchParams),\r\n    pageSize: getPageSizeFromCurrentUrl(urlSearchParams),\r\n    sortedBy: [],\r\n    query: getSearchQueryFromCurrentUrl(urlSearchParams),\r\n  };\r\n}\r\n\r\nexport function getFiltersFromCurrentUrl(request: Request, properties: FilterablePropertyDto[]): FiltersDto {\r\n  const url = new URL(request.url);\r\n  properties.forEach((property) => {\r\n    const params = url.searchParams.get(property.name);\r\n    property.value = params ?? null;\r\n    if (property.isNumber && property.value) {\r\n      if (isNaN(Number(property.value))) {\r\n        property.value = null;\r\n      }\r\n    }\r\n  });\r\n\r\n  const query = url.searchParams.get(\"q\") ?? undefined;\r\n\r\n  return { query, properties };\r\n}\r\n\r\nfunction getPageFromCurrentUrl(urlSearchParams: URLSearchParams): number {\r\n  let page = 1;\r\n  const paramsPage = urlSearchParams.get(\"page\");\r\n  if (paramsPage) {\r\n    page = Number(paramsPage);\r\n  }\r\n  if (page <= 0) {\r\n    page = 1;\r\n  }\r\n  return page;\r\n}\r\n\r\nfunction getPageSizeFromCurrentUrl(urlSearchParams: URLSearchParams): number {\r\n  let pageSize = Constants.DEFAULT_PAGE_SIZE;\r\n  const paramsPageSize = urlSearchParams.get(\"pageSize\");\r\n  if (paramsPageSize) {\r\n    pageSize = Number(paramsPageSize);\r\n  }\r\n  if (pageSize > Constants.MAX_PAGE_SIZE) {\r\n    pageSize = Constants.MAX_PAGE_SIZE;\r\n  }\r\n  return pageSize;\r\n}\r\n\r\nfunction getSearchQueryFromCurrentUrl(urlSearchParams: URLSearchParams): string {\r\n  return urlSearchParams.get(\"q\")?.toString() ?? \"\";\r\n}\r\n", "import { LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { Link, useParams } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport { getAllKnowledgeBaseCategories } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"~/modules/knowledgeBase/helpers/KbCategoryModelHelper\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  items: KnowledgeBaseCategoryWithDetails[];\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const items = await getAllKnowledgeBaseCategories({\r\n    knowledgeBaseSlug: params.slug!,\r\n    language: undefined,\r\n  });\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    items,\r\n  };\r\n  return json(data);\r\n};\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const params = useParams();\r\n  return (\r\n    <EditPageLayout\r\n      title=\"Categories\"\r\n      withHome={false}\r\n      menu={[\r\n        { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n        { title: \"Categories\", routePath: `/admin/knowledge-base/bases/${params.slug}/categories` },\r\n      ]}\r\n    >\r\n      <div className=\"space-y-2\">\r\n        {data.knowledgeBase.languages.map((f) => {\r\n          return (\r\n            <div key={f} className=\"space-y-2\">\r\n              <Link\r\n                to={f}\r\n                className=\"relative block rounded-lg border-2 border-dashed border-gray-300 px-12 py-6 text-center hover:border-gray-400 focus:outline-none focus:border-solid space-y-2\"\r\n              >\r\n                <div className=\"font-bold\">{KnowledgeBaseUtils.getLanguageName(f)}</div>\r\n                <div className=\"text-sm\">{data.items.filter((x) => x.language === f).length} categories</div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </EditPageLayout>\r\n  );\r\n}\r\n", "import { LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { Link, useParams } from \"@remix-run/react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport { KnowledgeBaseArticleWithDetails, getAllKnowledgeBaseArticles } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBase: KnowledgeBaseDto;\r\n  items: KnowledgeBaseArticleWithDetails[];\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const knowledgeBase = await KnowledgeBaseService.get({\r\n    slug: params.slug!,\r\n  });\r\n  if (!knowledgeBase) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const items = await getAllKnowledgeBaseArticles({\r\n    knowledgeBaseSlug: params.slug!,\r\n    language: undefined,\r\n  });\r\n  const data: LoaderData = {\r\n    knowledgeBase,\r\n    items,\r\n  };\r\n  return json(data);\r\n};\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const params = useParams();\r\n  return (\r\n    <EditPageLayout\r\n      title=\"Articles\"\r\n      withHome={false}\r\n      menu={[\r\n        { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n        { title: \"Articles\", routePath: `/admin/knowledge-base/bases/${params.slug}/articles` },\r\n      ]}\r\n    >\r\n      <div className=\"space-y-2\">\r\n        {data.knowledgeBase.languages.map((f) => {\r\n          return (\r\n            <div key={f} className=\"space-y-2\">\r\n              <Link\r\n                to={f}\r\n                className=\"relative block rounded-lg border-2 border-dashed border-gray-300 px-12 py-6 text-center hover:border-gray-400 focus:outline-none focus:border-solid space-y-2\"\r\n              >\r\n                <div className=\"font-bold\">{KnowledgeBaseUtils.getLanguageName(f)}</div>\r\n                <div className=\"text-sm\">{data.items.filter((x) => x.language === f).length} articles</div>\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </EditPageLayout>\r\n  );\r\n}\r\n", "import { ActionFunction, json, LoaderFunction } from \"@remix-run/node\";\r\nimport { Form, Link } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport { useTypedActionData } from \"remix-typedjson\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport ServerError from \"~/components/ui/errors/ServerError\";\r\nimport InputText from \"~/components/ui/input/InputText\";\r\nimport EditPageLayout from \"~/components/ui/layouts/EditPageLayout\";\r\nimport PreviewKbsTemplate from \"~/modules/knowledgeBase/components/templates/PreviewKbsTemplate\";\r\nimport { KnowledgeBasesTemplateDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBasesTemplateDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseTemplatesService from \"~/modules/knowledgeBase/service/KnowledgeBaseTemplatesService\";\r\nimport DefaultKbsTemplate from \"~/modules/knowledgeBase/utils/DefaultKbsTemplate\";\r\n\r\nexport let loader: LoaderFunction = async () => {\r\n  return json({});\r\n};\r\n\r\ntype ActionData = {\r\n  previewTemplate?: KnowledgeBasesTemplateDto;\r\n  success?: string[];\r\n  error?: string;\r\n};\r\nconst success = (data: ActionData) => json(data, { status: 200 });\r\nconst badRequest = (data: ActionData) => json(data, { status: 400 });\r\nexport const action: ActionFunction = async ({ request }) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n  if (action === \"preview\") {\r\n    try {\r\n      const previewTemplate = JSON.parse(form.get(\"configuration\")?.toString() ?? \"{}\") as KnowledgeBasesTemplateDto;\r\n      // await validateEntitiesFromTemplate(previewTemplate);\r\n      const data: ActionData = {\r\n        previewTemplate,\r\n      };\r\n      return success(data);\r\n    } catch (error: any) {\r\n      return badRequest({ error: error.message });\r\n    }\r\n  } else if (action === \"create\") {\r\n    try {\r\n      const template = JSON.parse(form.get(\"configuration\")?.toString() ?? \"{}\") as KnowledgeBasesTemplateDto;\r\n      const status = await KnowledgeBaseTemplatesService.importKbs(template);\r\n      const messages: string[] = [];\r\n      messages.push(`Knowledge bases (${status.created.kbs} created, ${status.updated.kbs} updated)`);\r\n      messages.push(`Articles (${status.created.articles} created, ${status.updated.articles} updated)`);\r\n      messages.push(`Categories (${status.created.categories} created, ${status.updated.categories} updated)`);\r\n      messages.push(`Category Sections (${status.created.sections} created, ${status.updated.sections} updated)`);\r\n\r\n      return success({\r\n        success: messages,\r\n      });\r\n    } catch (error: any) {\r\n      return badRequest({ error: error.message });\r\n    }\r\n  } else {\r\n    return badRequest({ error: \"Invalid form\" });\r\n  }\r\n};\r\n\r\nconst defaultTemplates: { title: string; template: KnowledgeBasesTemplateDto }[] = [{ title: \"Sample\", template: DefaultKbsTemplate.SAMPLE }];\r\n\r\nexport default function AdminEntityTemplatesManual() {\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const [configuration, setConfiguration] = useState<string>(\"\");\r\n\r\n  return (\r\n    <EditPageLayout\r\n      title=\"Upload a JSON configuration\"\r\n      withHome={false}\r\n      menu={[\r\n        { title: \"Knowledge Bases\", routePath: \"/admin/knowledge-base/bases\" },\r\n        { title: \"Import\", routePath: `/admin/knowledge-base/bases/import` },\r\n      ]}\r\n    >\r\n      <div className=\"md:border-t md:border-gray-200 md:py-2\">\r\n        {actionData?.error ? (\r\n          <>\r\n            <p id=\"form-error-message\" className=\"py-2 text-sm text-rose-500\" role=\"alert\">\r\n              {actionData.error}\r\n            </p>\r\n          </>\r\n        ) : actionData?.success ? (\r\n          <>\r\n            <div id=\"form-success-message\" className=\"text-text-500 py-2 text-sm space-y-1\" role=\"alert\">\r\n              {actionData.success.map((f) => (\r\n                <div key={f}>{f}</div>\r\n              ))}\r\n            </div>\r\n            <Link to=\"/admin/knowledge-base/bases\" className=\"text-sm font-medium text-theme-600 underline hover:text-theme-500\">\r\n              Back to knowledge bases\r\n            </Link>\r\n          </>\r\n        ) : actionData?.previewTemplate === undefined ? (\r\n          <>\r\n            <Form method=\"post\">\r\n              <input type=\"hidden\" name=\"action\" value=\"preview\" readOnly />\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex space-x-2\">\r\n                  {defaultTemplates.map((t) => (\r\n                    <button\r\n                      key={t.title}\r\n                      type=\"button\"\r\n                      onClick={() => setConfiguration(JSON.stringify(t.template, null, \"\\t\"))}\r\n                      className=\"inline-flex items-center rounded border border-transparent bg-theme-100 px-2.5 py-1.5 text-xs font-medium text-theme-700 hover:bg-theme-200 focus:outline-none focus:ring-2 focus:ring-theme-500 focus:ring-offset-2\"\r\n                    >\r\n                      {t.title}\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n                <div>\r\n                  <InputText\r\n                    name=\"configuration\"\r\n                    title=\"Configuration\"\r\n                    editor=\"monaco\"\r\n                    editorLanguage=\"json\"\r\n                    value={configuration}\r\n                    setValue={setConfiguration}\r\n                    editorSize=\"lg\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end\">\r\n                  <LoadingButton type=\"submit\">Preview</LoadingButton>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </>\r\n        ) : (\r\n          actionData?.previewTemplate !== undefined && (\r\n            <>\r\n              <Form method=\"post\">\r\n                <input type=\"hidden\" name=\"action\" value=\"create\" readOnly />\r\n                <input type=\"hidden\" name=\"configuration\" value={configuration} readOnly />\r\n                <div className=\"space-y-2\">\r\n                  <PreviewKbsTemplate template={actionData.previewTemplate} />\r\n                  <div className=\"flex justify-end space-x-2\">\r\n                    <LoadingButton type=\"submit\">\r\n                      <span>Import</span>\r\n                    </LoadingButton>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </>\r\n          )\r\n        )}\r\n      </div>\r\n    </EditPageLayout>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary() {\r\n  return <ServerError />;\r\n}\r\n", "import TableSimple from \"~/components/ui/tables/TableSimple\";\r\nimport { KnowledgeBasesTemplateDto } from \"../../dtos/KnowledgeBasesTemplateDto\";\r\n\r\nexport default function PreviewKbsTemplate({ template }: { template: KnowledgeBasesTemplateDto }) {\r\n  return (\r\n    <div className=\"space-y-2\">\r\n      <h3 className=\"font-medium\">Knowledge Bases</h3>\r\n      <TableSimple\r\n        items={template.knowledgeBases}\r\n        headers={[\r\n          { name: \"slug\", title: \"Slug\", value: (i) => i.slug },\r\n          {\r\n            name: \"title\",\r\n            title: \"Title\",\r\n            value: (i) => (\r\n              <div className=\"flex-col\">\r\n                <div>{i.title}</div>\r\n                <div className=\"text-xs text-gray-500\">{i.description}</div>\r\n              </div>\r\n            ),\r\n          },\r\n          { name: \"enabled\", title: \"Enabled\", value: (i) => i.enabled },\r\n        ]}\r\n      />\r\n\r\n      <h3 className=\"font-medium\">Categories</h3>\r\n      <TableSimple\r\n        items={template.categories}\r\n        headers={[\r\n          { name: \"slug\", title: \"Slug\", value: (i) => i.slug },\r\n          {\r\n            name: \"title\",\r\n            title: \"Title\",\r\n            value: (i) => (\r\n              <div className=\"flex-col\">\r\n                <div>{i.title}</div>\r\n                <div className=\"text-xs text-gray-500\">{i.description}</div>\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            name: \"sections\",\r\n            title: \"Sections\",\r\n            value: (i) => i.sections.map((s) => s.title).join(\", \"),\r\n          },\r\n          { name: \"knowledgeBase\", title: \"Knowledge Base\", value: (i) => i.knowledgeBaseSlug },\r\n        ]}\r\n      />\r\n\r\n      <h3 className=\"font-medium\">Articles</h3>\r\n      <TableSimple\r\n        items={template.articles}\r\n        headers={[\r\n          { name: \"slug\", title: \"Slug\", value: (i) => i.slug },\r\n          {\r\n            name: \"title\",\r\n            title: \"Title\",\r\n            value: (i) => (\r\n              <div className=\"flex-col\">\r\n                <div>{i.title}</div>\r\n                <div className=\"text-xs text-gray-500\">{i.description}</div>\r\n              </div>\r\n            ),\r\n          },\r\n          { name: \"knowledgeBase\", title: \"Knowledge Base\", value: (i) => i.knowledgeBaseSlug },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n", "import { KnowledgeBase, KnowledgeBaseArticle } from \"@prisma/client\";\r\nimport { createKnowledgeBaseArticle, getAllKnowledgeBaseArticles, getKbArticleBySlug, updateKnowledgeBaseArticle } from \"../db/kbArticles.db.server\";\r\nimport { createKnowledgeBaseCategory, getAllKnowledgeBaseCategories, getKbCategoryBySlug, updateKnowledgeBaseCategory } from \"../db/kbCategories.db.server\";\r\nimport { createKnowledgeBase, getAllKnowledgeBases, getKnowledgeBaseBySlug, updateKnowledgeBase } from \"../db/knowledgeBase.db.server\";\r\nimport { KbNavLinkDto } from \"../dtos/KbNavLinkDto\";\r\nimport { KnowledgeBasesTemplateDto } from \"../dtos/KnowledgeBasesTemplateDto\";\r\nimport { KnowledgeBaseCategoryWithDetails } from \"../helpers/KbCategoryModelHelper\";\r\nimport { createKnowledgeBaseCategorySection, updateKnowledgeBaseCategorySection } from \"../db/kbCategorySections.db.server\";\r\n\r\nasync function getTemplate(): Promise<KnowledgeBasesTemplateDto> {\r\n  const template: KnowledgeBasesTemplateDto = {\r\n    knowledgeBases: [],\r\n    categories: [],\r\n    articles: [],\r\n  };\r\n  const allKbs = await getAllKnowledgeBases();\r\n  for (const kb of allKbs) {\r\n    template.knowledgeBases.push({\r\n      slug: kb.slug,\r\n      title: kb.title,\r\n      description: kb.description,\r\n      defaultLanguage: kb.defaultLanguage,\r\n      layout: kb.layout,\r\n      color: kb.color,\r\n      enabled: kb.enabled,\r\n      languages: JSON.parse(kb.languages) as string[],\r\n      links: JSON.parse(kb.links) as KbNavLinkDto[],\r\n      logo: kb.logo,\r\n      seoImage: kb.seoImage,\r\n    });\r\n    const allCategories = await getAllKnowledgeBaseCategories({\r\n      knowledgeBaseSlug: kb.slug,\r\n      language: undefined,\r\n    });\r\n    for (const category of allCategories) {\r\n      template.categories.push({\r\n        knowledgeBaseSlug: kb.slug,\r\n        slug: category.slug,\r\n        order: category.order,\r\n        title: category.title,\r\n        description: category.description,\r\n        icon: category.icon,\r\n        language: category.language,\r\n        seoImage: category.seoImage,\r\n        sections: category.sections.map((section) => ({\r\n          order: section.order,\r\n          title: section.title,\r\n          description: section.description,\r\n        })),\r\n      });\r\n    }\r\n    const allArticles = await getAllKnowledgeBaseArticles({\r\n      knowledgeBaseSlug: kb.slug,\r\n      language: undefined,\r\n    });\r\n    for (const article of allArticles) {\r\n      template.articles.push({\r\n        knowledgeBaseSlug: kb.slug,\r\n        categorySlug: article.category?.slug ?? null,\r\n        categorySectionOrder: article.section?.order ?? null,\r\n        slug: article.slug,\r\n        title: article.title,\r\n        description: article.description,\r\n        order: article.order,\r\n        contentDraft: article.contentDraft,\r\n        contentPublished: article.contentPublished,\r\n        contentType: article.contentType,\r\n        language: article.language,\r\n        featuredOrder: article.featuredOrder,\r\n        seoImage: article.seoImage,\r\n        publishedAt: article.publishedAt ? article.publishedAt.toISOString() : null,\r\n        relatedArticles: article.relatedArticles.map((relatedArticle) => ({\r\n          slug: relatedArticle.slug,\r\n        })),\r\n      });\r\n    }\r\n  }\r\n  return template;\r\n}\r\n\r\nasync function importKbs(template: KnowledgeBasesTemplateDto) {\r\n  let created = {\r\n    kbs: 0,\r\n    categories: 0,\r\n    sections: 0,\r\n    articles: 0,\r\n  };\r\n  let updated = {\r\n    kbs: 0,\r\n    categories: 0,\r\n    sections: 0,\r\n    articles: 0,\r\n  };\r\n  for (const kb of template.knowledgeBases) {\r\n    let existing: KnowledgeBase | null = await getKnowledgeBaseBySlug(kb.slug);\r\n    if (existing) {\r\n      await updateKnowledgeBase(existing.id, {\r\n        slug: kb.slug,\r\n        title: kb.title,\r\n        description: kb.description,\r\n        defaultLanguage: kb.defaultLanguage,\r\n        layout: kb.layout,\r\n        color: kb.color,\r\n        enabled: kb.enabled,\r\n        languages: JSON.stringify(kb.languages),\r\n        links: JSON.stringify(kb.links),\r\n        logo: kb.logo,\r\n        seoImage: kb.seoImage,\r\n      });\r\n      updated.kbs++;\r\n    } else {\r\n      existing = await createKnowledgeBase({\r\n        slug: kb.slug,\r\n        title: kb.title,\r\n        description: kb.description,\r\n        defaultLanguage: kb.defaultLanguage,\r\n        layout: kb.layout,\r\n        color: kb.color,\r\n        enabled: kb.enabled,\r\n        languages: JSON.stringify(kb.languages),\r\n        links: JSON.stringify(kb.links),\r\n        logo: kb.logo,\r\n        seoImage: kb.seoImage,\r\n      });\r\n      created.kbs++;\r\n    }\r\n\r\n    for (const category of template.categories.filter((c) => c.knowledgeBaseSlug === kb.slug)) {\r\n      let existingCategory: KnowledgeBaseCategoryWithDetails | null = await getKbCategoryBySlug({\r\n        knowledgeBaseId: existing.id,\r\n        slug: category.slug,\r\n        language: category.language,\r\n      });\r\n      if (existingCategory) {\r\n        await updateKnowledgeBaseCategory(existingCategory.id, {\r\n          title: category.title,\r\n          order: category.order,\r\n          description: category.description,\r\n          icon: category.icon,\r\n          language: category.language,\r\n          seoImage: category.seoImage,\r\n        });\r\n        updated.categories++;\r\n      } else {\r\n        existingCategory = await createKnowledgeBaseCategory({\r\n          knowledgeBaseId: existing.id,\r\n          slug: category.slug,\r\n          title: category.title,\r\n          order: category.order,\r\n          description: category.description,\r\n          icon: category.icon,\r\n          language: category.language,\r\n          seoImage: category.seoImage,\r\n        });\r\n        created.categories++;\r\n      }\r\n\r\n      for (const section of category.sections) {\r\n        let existingSection: { id: string; order: number; title: string; description: string } | null = null;\r\n        if (existingCategory) {\r\n          existingSection = existingCategory.sections.find((s) => s.order === section.order) ?? null;\r\n        }\r\n        if (existingSection) {\r\n          await updateKnowledgeBaseCategorySection(existingSection.id, {\r\n            title: section.title,\r\n            description: section.description,\r\n          });\r\n          updated.sections++;\r\n        } else {\r\n          await createKnowledgeBaseCategorySection({\r\n            categoryId: existingCategory?.id ?? null,\r\n            order: section.order,\r\n            title: section.title,\r\n            description: section.description,\r\n          });\r\n          created.sections++;\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const article of template.articles.filter((a) => a.knowledgeBaseSlug === kb.slug)) {\r\n      let existingArticle: KnowledgeBaseArticle | null = await getKbArticleBySlug({\r\n        knowledgeBaseId: existing.id,\r\n        slug: article.slug,\r\n        language: article.language,\r\n      });\r\n      let category: KnowledgeBaseCategoryWithDetails | null = null;\r\n      let sectionId: string | null = null;\r\n      if (article.categorySlug) {\r\n        category = await getKbCategoryBySlug({\r\n          knowledgeBaseId: existing.id,\r\n          slug: article.categorySlug,\r\n          language: article.language,\r\n        });\r\n        if (category && article.categorySectionOrder) {\r\n          const section = category.sections.find((s) => s.order === article.categorySectionOrder);\r\n          if (section) {\r\n            sectionId = section.id;\r\n          }\r\n        }\r\n      }\r\n      if (existingArticle) {\r\n        await updateKnowledgeBaseArticle(existingArticle.id, {\r\n          categoryId: category?.id ?? null,\r\n          sectionId: sectionId,\r\n          slug: article.slug,\r\n          title: article.title,\r\n          description: article.description,\r\n          order: article.order,\r\n          contentDraft: article.contentDraft,\r\n          contentPublished: article.contentPublished,\r\n          contentType: article.contentType,\r\n          language: article.language,\r\n          featuredOrder: article.featuredOrder,\r\n          author: \"\", // TODO\r\n          // views: article.views,\r\n          // upvotes: article.upvotes,\r\n          // downvotes: article.downvotes,\r\n          seoImage: article.seoImage,\r\n          publishedAt: article.publishedAt ? new Date(article.publishedAt) : null,\r\n        });\r\n        updated.articles++;\r\n      } else {\r\n        existingArticle = await createKnowledgeBaseArticle({\r\n          knowledgeBaseId: existing.id,\r\n          categoryId: category?.id ?? null,\r\n          sectionId: sectionId,\r\n          slug: article.slug,\r\n          title: article.title,\r\n          description: article.description,\r\n          order: article.order,\r\n          contentDraft: article.contentDraft,\r\n          contentPublished: article.contentPublished,\r\n          contentType: article.contentType,\r\n          language: article.language,\r\n          featuredOrder: article.featuredOrder,\r\n          author: \"\", // TODO\r\n          seoImage: article.seoImage,\r\n          publishedAt: article.publishedAt ? new Date(article.publishedAt) : null,\r\n        });\r\n        created.articles++;\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    created,\r\n    updated,\r\n  };\r\n}\r\n\r\nexport default {\r\n  getTemplate,\r\n  importKbs,\r\n};\r\n", "import { KnowledgeBasesTemplateDto } from \"../dtos/KnowledgeBasesTemplateDto\";\r\n\r\nconst SAMPLE: KnowledgeBasesTemplateDto = {\r\n  knowledgeBases: [],\r\n  categories: [],\r\n  articles: [],\r\n};\r\n\r\nexport default {\r\n  SAMPLE,\r\n};\r\n", "import { ActionArgs, V2_MetaFunction, json } from \"@remix-run/node\";\r\nimport { Form, useActionData } from \"@remix-run/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport ButtonPrimary from \"~/components/ui/buttons/ButtonPrimary\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport ActionResultModal, { ActionResultDto } from \"~/components/ui/modals/ActionResultModal\";\r\nimport { db } from \"~/lib/db.server\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\n\r\nexport const meta: V2_MetaFunction = () => [{ title: \"Danger\" }];\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n  success?: string;\r\n};\r\nexport const action = async ({ request }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n  if (action === \"reset-all-data\") {\r\n    await db.knowledgeBaseCategory.deleteMany({});\r\n    await db.knowledgeBaseArticle.deleteMany({});\r\n    await db.knowledgeBase.deleteMany({});\r\n    return json({ success: \"Reset successful\" });\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function AdminSettingsDanger() {\r\n  const actionData = useActionData<ActionData>();\r\n  const [actionResult, setActionResult] = useState<ActionResultDto>();\r\n  useEffect(() => {\r\n    if (actionData?.error) {\r\n      setActionResult({ error: { description: actionData.error } });\r\n    } else if (actionData?.success) {\r\n      setActionResult({ success: { description: actionData.success } });\r\n    }\r\n  }, [actionData]);\r\n  return (\r\n    <div className=\"flex-1 overflow-x-auto xl:overflow-y-auto\">\r\n      <div className=\"mx-auto max-w-5xl px-4 py-4 sm:px-6 lg:px-8 lg:py-12\">\r\n        <h1 className=\"text-3xl font-bold tracking-tight text-gray-900\">Danger</h1>\r\n\r\n        <Form method=\"post\" className=\"divide-y-gray-200 mt-6 space-y-8 divide-y\">\r\n          <input name=\"action\" value=\"reset-all-data\" hidden readOnly />\r\n          <div className=\"grid grid-cols-1 gap-y-6 sm:grid-cols-6 sm:gap-x-6\">\r\n            <div className=\"sm:col-span-6\">\r\n              <h2 className=\"text-xl font-medium text-gray-900\">Reset all data</h2>\r\n              <p className=\"mt-1 text-sm text-gray-500\">Delete all knowledge base data</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-end pt-8\">\r\n            <ButtonPrimary destructive type=\"submit\">\r\n              Reset all data\r\n            </ButtonPrimary>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <ActionResultModal actionResult={actionResult} />\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, json, LoaderFunction, V2_MetaFunction } from \"@remix-run/node\";\r\nimport SimpleBadge from \"~/components/ui/badges/SimpleBadge\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport { Link, Outlet, useSearchParams, useSubmit } from \"@remix-run/react\";\r\nimport TabsWithIcons from \"~/components/ui/tabs/TabsWithIcons\";\r\nimport ButtonPrimary from \"~/components/ui/buttons/ButtonPrimary\";\r\nimport PlusIcon from \"~/components/ui/icons/PlusIcon\";\r\nimport TableSimple from \"~/components/ui/tables/TableSimple\";\r\nimport InputCheckbox from \"~/components/ui/input/InputCheckbox\";\r\nimport DateCell from \"~/components/ui/dates/DateCell\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\nimport { updateKnowledgeBase } from \"~/modules/knowledgeBase/db/knowledgeBase.db.server\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport KnowledgeBaseTemplatesService from \"~/modules/knowledgeBase/service/KnowledgeBaseTemplatesService\";\r\nimport { KnowledgeBasesTemplateDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBasesTemplateDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\n\r\ntype LoaderData = {\r\n  metatags: MetaTagsDto;\r\n  items: KnowledgeBaseDto[];\r\n  template: KnowledgeBasesTemplateDto;\r\n};\r\nexport let loader: LoaderFunction = async ({ request }) => {\r\n  const data: LoaderData = {\r\n    metatags: [{ title: `Knowledge Base` }],\r\n    items: await KnowledgeBaseService.getAll({}),\r\n    template: await KnowledgeBaseTemplatesService.getTemplate(),\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const meta: V2_MetaFunction = ({ data }) => data?.metatags;\r\n\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n  if (action === \"toggle\") {\r\n    const id = form.get(\"id\")?.toString() ?? \"\";\r\n    const enabled = form.get(\"enabled\")?.toString() === \"true\";\r\n\r\n    const item = await KnowledgeBaseService.getById(id);\r\n    if (!item) {\r\n      return json({ error: \"Not found\" }, { status: 404 });\r\n    }\r\n\r\n    await updateKnowledgeBase(id, {\r\n      enabled,\r\n    });\r\n\r\n    return json({ success: \"Updated\" });\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function CampaignsListRoute() {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const submit = useSubmit();\r\n\r\n  const [searchParams] = useSearchParams();\r\n\r\n  function countStatus(enabled?: boolean) {\r\n    if (enabled === undefined) {\r\n      return data.items.length;\r\n    }\r\n    return data.items.filter((item) => item.enabled === enabled).length;\r\n  }\r\n  function onToggle(item: KnowledgeBaseDto, enabled: boolean) {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"toggle\");\r\n    form.set(\"enabled\", enabled ? \"true\" : \"false\");\r\n    form.set(\"id\", item.id.toString());\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  function filteredItems() {\r\n    if (searchParams.get(\"status\") === \"active\") {\r\n      return data.items.filter((item) => item.enabled);\r\n    }\r\n    if (searchParams.get(\"status\") === \"inactive\") {\r\n      return data.items.filter((item) => !item.enabled);\r\n    }\r\n    return data.items;\r\n  }\r\n\r\n  function onExport() {\r\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(data.template, null, \"\\t\"));\r\n    const downloadAnchorNode = document.createElement(\"a\");\r\n    downloadAnchorNode.setAttribute(\"href\", dataStr);\r\n    downloadAnchorNode.setAttribute(\"download\", \"kbs.json\");\r\n    document.body.appendChild(downloadAnchorNode); // required for firefox\r\n    downloadAnchorNode.click();\r\n    downloadAnchorNode.remove();\r\n  }\r\n  return (\r\n    <div className=\"mx-auto mb-12 max-w-5xl space-y-5 px-4 py-4 sm:px-6 lg:px-8 xl:max-w-7xl\">\r\n      <div className=\"flex items-center justify-between space-x-2\">\r\n        <div className=\"flex-grow\">\r\n          <TabsWithIcons\r\n            tabs={[\r\n              {\r\n                name: `All ${countStatus() ? `(${countStatus()})` : \"\"}`,\r\n                href: \"?\",\r\n                current: !searchParams.get(\"status\") || searchParams.get(\"status\") === \"all\",\r\n              },\r\n              {\r\n                name: `Active ${countStatus(true) ? `(${countStatus(true)})` : \"\"}`,\r\n                href: \"?status=active\",\r\n                current: searchParams.get(\"status\") === \"active\",\r\n              },\r\n              {\r\n                name: `Inactive ${countStatus(false) ? `(${countStatus(false)})` : \"\"}`,\r\n                href: \"?status=inactive\",\r\n                current: searchParams.get(\"status\") === \"inactive\",\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n        <div className=\"flex space-x-1\">\r\n          <ButtonSecondary to=\"import\">Import</ButtonSecondary>\r\n          <ButtonSecondary onClick={onExport}>Export</ButtonSecondary>\r\n          <ButtonPrimary to=\"new\">\r\n            <div>New</div>\r\n            <PlusIcon className=\"h-5 w-5\" />\r\n          </ButtonPrimary>\r\n        </div>\r\n      </div>\r\n\r\n      <TableSimple\r\n        items={filteredItems()}\r\n        actions={[\r\n          {\r\n            title: \"Categories\",\r\n            onClickRoute: (_, i) => `${i.slug}/categories`,\r\n          },\r\n          {\r\n            title: \"Preview\",\r\n            onClickRoute: (_, i) => `/${i.slug}`,\r\n            onClickRouteTarget: \"_blank\",\r\n          },\r\n          {\r\n            title: \"Edit\",\r\n            onClickRoute: (_, i) => `${i.id}`,\r\n          },\r\n        ]}\r\n        headers={[\r\n          {\r\n            name: \"status\",\r\n            title: \"Status\",\r\n            value: (i) => {\r\n              return <InputCheckbox asToggle value={i.enabled} setValue={(checked) => onToggle(i, Boolean(checked))} />;\r\n            },\r\n          },\r\n          {\r\n            name: \"title\",\r\n            title: \"Title\",\r\n            className: \"w-full\",\r\n            value: (i) => (\r\n              <div className=\"flex flex-col\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <div className=\"text-base font-bold\">{i.title}</div>\r\n                  <SimpleBadge title={\"/\" + i.slug} color={i.color} />\r\n                </div>\r\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                  <Link to={`${i.slug}/articles`} className=\"hover:underline\">\r\n                    {i.count.articles} articles\r\n                  </Link>\r\n                  <div>\u2022</div>\r\n                  <Link to={`${i.slug}/categories`} className=\"hover:underline\">\r\n                    {i.count.categories} categories\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            ),\r\n          },\r\n          {\r\n            name: \"views\",\r\n            title: \"Views\",\r\n            value: (i) => i.count.views,\r\n          },\r\n          {\r\n            name: \"updatedAt\",\r\n            title: \"Updated at\",\r\n            value: (i) => <DateCell date={i.updatedAt} />,\r\n          },\r\n        ]}\r\n        noRecords={\r\n          <div className=\"p-12 text-center\">\r\n            <h3 className=\"mt-1 text-sm font-medium text-gray-900\">{\"No knowledge bases\"}</h3>\r\n            <p className=\"mt-1 text-sm text-gray-500\">{\"Get started by creating a new knowledge base.\"}</p>\r\n          </div>\r\n        }\r\n      />\r\n\r\n      <Outlet />\r\n    </div>\r\n  );\r\n}\r\n", "import { Link, useNavigate } from \"@remix-run/react\";\r\nimport clsx from \"clsx\";\r\nimport type { ReactNode } from \"react\";\r\nimport { Fragment } from \"react\";\r\n\r\nexport type TabWithIcon = {\r\n  name?: string;\r\n  href?: string;\r\n  current: boolean;\r\n  icon?: ReactNode;\r\n  onClick?: () => void;\r\n  className?: string;\r\n};\r\ninterface Props {\r\n  tabs: TabWithIcon[];\r\n  className?: string;\r\n  justify?: \"start\" | \"center\" | \"end\" | \"between\";\r\n}\r\nexport default function TabsWithIcons({ tabs, className, justify }: Props) {\r\n  const navigate = useNavigate();\r\n  return (\r\n    <div className={className}>\r\n      <div className={clsx(tabs.length <= 5 && \"sm:hidden\")}>\r\n        <label htmlFor=\"tabs\" className=\"sr-only\">\r\n          Select\r\n        </label>\r\n        <select\r\n          id=\"tabs\"\r\n          name=\"tabs\"\r\n          className=\"block w-full rounded-md border-gray-300 focus:border-accent-500 focus:ring-accent-500\"\r\n          value={tabs.find((tab) => tab.current)?.name}\r\n          onChange={(e) => {\r\n            const tab = tabs.find((tab) => tab.name === e.target.value);\r\n            if (tab?.href) {\r\n              navigate(tab.href);\r\n            } else if (tab?.onClick) {\r\n              tab.onClick();\r\n            }\r\n          }}\r\n        >\r\n          {tabs.map((tab) => (\r\n            <option key={tab.name} value={tab.name}>\r\n              {tab.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className={clsx(tabs.length <= 5 ? \"hidden sm:block\" : \"hidden\")}>\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav\r\n            className={clsx(\r\n              \"-mb-px flex space-x-4\",\r\n              justify === \"start\" && \"justify-start\",\r\n              justify === \"center\" && \"justify-center\",\r\n              justify === \"end\" && \"justify-end\",\r\n              justify === \"between\" && \"justify-between\"\r\n            )}\r\n            aria-label=\"Tabs\"\r\n          >\r\n            {tabs.map((tab, idx) => (\r\n              <Fragment key={idx}>\r\n                {tab.href && (\r\n                  <Link\r\n                    key={tab.name}\r\n                    to={tab.href}\r\n                    className={clsx(\r\n                      tab.current ? \"border-accent-500 text-accent-600\" : \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\",\r\n                      \"group inline-flex items-center space-x-2 border-b-2 py-2 px-1 text-sm font-medium\",\r\n                      tab.className\r\n                    )}\r\n                    aria-current={tab.current ? \"page\" : undefined}\r\n                  >\r\n                    {tab.icon}\r\n                    <div className=\"truncate\">{tab.name}</div>\r\n                  </Link>\r\n                )}\r\n                {tab.onClick && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={tab.onClick}\r\n                    className={clsx(\r\n                      tab.current ? \"border-accent-500 text-accent-600\" : \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\",\r\n                      \"group inline-flex w-full items-center space-x-2 border-b-2 py-2 px-1 text-sm font-medium\",\r\n                      tab.className\r\n                    )}\r\n                    aria-current={tab.current ? \"page\" : undefined}\r\n                  >\r\n                    {tab.icon}\r\n                    <div className=\"truncate\">{tab.name}</div>\r\n                  </button>\r\n                )}\r\n              </Fragment>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport DateUtils, { DateDisplay } from \"~/utils/shared/DateUtils\";\r\n\r\nexport default function DateCell({ date, displays = [\"ymd\", \"ago\"] }: { date: Date | null; displays?: DateDisplay[] }) {\r\n  return (\r\n    <>\r\n      {date && (\r\n        <div title={DateUtils.dateYMDHMS(date)} className=\"flex flex-col\">\r\n          {displays.includes(\"ymd\") && <div>{DateUtils.dateYMD(date)}</div>}\r\n          {displays.includes(\"dm\") && <div>{DateUtils.dateDM(date)}</div>}\r\n          {displays.includes(\"ago\") && <div className={clsx(displays.length > 1 && \"text-xs\")}>{DateUtils.dateAgo(date)}</div>}\r\n          {displays.includes(\"mdy\") && <div>{DateUtils.dateMonthDayYear(date)}</div>}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n", "import { ActionArgs, LoaderArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { useRef } from \"react\";\r\nimport { useTypedActionData, useTypedLoaderData } from \"remix-typedjson\";\r\nimport ActionResultModal from \"~/components/ui/modals/ActionResultModal\";\r\nimport ConfirmModal, { RefConfirmModal } from \"~/components/ui/modals/ConfirmModal\";\r\nimport KnowledgeBaseForm from \"~/modules/knowledgeBase/components/bases/KnowledgeBaseForm\";\r\nimport { getKnowledgeBaseBySlug, updateKnowledgeBase } from \"~/modules/knowledgeBase/db/knowledgeBase.db.server\";\r\nimport { KbNavLinkDto } from \"~/modules/knowledgeBase/dtos/KbNavLinkDto\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  item: KnowledgeBaseDto;\r\n};\r\nexport let loader = async ({ params }: LoaderArgs) => {\r\n  const item = await KnowledgeBaseService.getById(params.id!);\r\n  if (!item) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n  const data: LoaderData = {\r\n    item,\r\n  };\r\n  return json(data);\r\n};\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n  success?: string;\r\n};\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n\r\n  const item = await KnowledgeBaseService.getById(params.id!);\r\n  if (!item) {\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  }\r\n\r\n  if (action === \"edit\") {\r\n    const slug = form.get(\"slug\")?.toString() ?? \"\";\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n    const defaultLanguage = form.get(\"defaultLanguage\")?.toString() ?? \"\";\r\n    const layout = form.get(\"layout\")?.toString() ?? \"\";\r\n    const color = Number(form.get(\"color\")?.toString() ?? \"\");\r\n    const enabled = Boolean(form.get(\"enabled\"));\r\n    const languages = form.getAll(\"languages[]\").map((l) => l.toString());\r\n    const links: KbNavLinkDto[] = form.getAll(\"links[]\").map((l) => JSON.parse(l.toString()));\r\n    const logo = form.get(\"logo\")?.toString() ?? \"\";\r\n    const seoImage = form.get(\"seoImage\")?.toString() ?? \"\";\r\n\r\n    if (languages.length === 0) {\r\n      return json({ error: \"At least one language is required\" }, { status: 400 });\r\n    }\r\n\r\n    const existing = await getKnowledgeBaseBySlug(slug);\r\n    if (existing && existing.id !== item.id) {\r\n      return json({ error: \"Slug already exists\" }, { status: 400 });\r\n    }\r\n\r\n    try {\r\n      await updateKnowledgeBase(item.id, {\r\n        slug,\r\n        title,\r\n        description,\r\n        defaultLanguage,\r\n        layout,\r\n        color,\r\n        enabled,\r\n        languages: JSON.stringify(languages),\r\n        links: JSON.stringify(links),\r\n        logo,\r\n        seoImage,\r\n      });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  } else if (action === \"delete\") {\r\n    try {\r\n      await KnowledgeBaseService.del(item);\r\n      return redirect(\"/admin/knowledge-base/bases\");\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function () {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const submit = useSubmit();\r\n\r\n  const confirmDelete = useRef<RefConfirmModal>(null);\r\n\r\n  function onDelete() {\r\n    confirmDelete.current?.show(\"Delete article\", \"Delete\", \"Cancel\", `Are you sure you want to delete the article \"${data.item.title}\"?`);\r\n  }\r\n\r\n  function onConfirmedDelete() {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete\");\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <KnowledgeBaseForm item={data.item} onDelete={onDelete} />\r\n\r\n      <ConfirmModal ref={confirmDelete} onYes={onConfirmedDelete} destructive />\r\n      <ActionResultModal actionData={actionData} showSuccess={false} />\r\n    </div>\r\n  );\r\n}\r\n", "import { Form, useNavigate, useNavigation } from \"@remix-run/react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport ColorBadge from \"~/components/ui/badges/ColorBadge\";\r\nimport ButtonSecondary from \"~/components/ui/buttons/ButtonSecondary\";\r\nimport LoadingButton from \"~/components/ui/buttons/LoadingButton\";\r\nimport InputCheckboxWithDescription from \"~/components/ui/input/InputCheckboxWithDescription\";\r\nimport InputCombobox from \"~/components/ui/input/InputCombobox\";\r\nimport InputSelect from \"~/components/ui/input/InputSelect\";\r\nimport InputSelector from \"~/components/ui/input/InputSelector\";\r\nimport InputText, { RefInputText } from \"~/components/ui/input/InputText\";\r\nimport SlideOverWideEmpty from \"~/components/ui/slideOvers/SlideOverWideEmpty\";\r\nimport { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport UrlUtils from \"~/utils/app/UrlUtils\";\r\nimport { getColors } from \"~/utils/shared/ColorUtils\";\r\nimport KbNavLinksTable from \"./KbNavLinksTable\";\r\nimport KnowledgeBaseUtils from \"~/modules/knowledgeBase/utils/KnowledgeBaseUtils\";\r\nimport LogoLight from \"~/assets/img/logo-light.png\";\r\nimport LogoDark from \"~/assets/img/logo-dark.png\";\r\nimport clsx from \"clsx\";\r\nimport ColorGradientUtils from \"~/utils/shared/colors/ColorGradientUtils\";\r\nimport ColorBackgroundUtils from \"~/utils/shared/colors/ColorBackgroundUtils\";\r\n\r\nexport default function KnowledgeBaseForm({ item, onDelete }: { item?: KnowledgeBaseDto; onDelete?: () => void }) {\r\n  const navigation = useNavigation();\r\n  const navigate = useNavigate();\r\n\r\n  // const [showFilterModal, setShowFilterModal] = useState<{ item?: { type: FeatureFlagsFilterType; value: string | null }; idx?: number }>();\r\n\r\n  const mainInput = useRef<RefInputText>(null);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      mainInput.current?.input.current?.focus();\r\n    }, 100);\r\n  }, []);\r\n\r\n  const [slug, setSlug] = useState(item?.slug || \"\");\r\n  const [title, setTitle] = useState(item?.title || \"\");\r\n  const [description, setDescription] = useState(item?.description || \"\");\r\n  const [defaultLanguage, setDefaultLanguage] = useState<string | undefined>(item?.defaultLanguage || \"en\");\r\n  const [layout, setLayout] = useState<\"list\" | \"articles\" | \"grid\">(item?.layout || (\"list\" as any));\r\n  const [color, setColor] = useState(item?.color || Colors.BLUE);\r\n  const [enabled, setEnabled] = useState(item?.enabled ?? false);\r\n  // const [metatags, setMetatags] = useState<MetaTagsDto>(item?.metatags || []);\r\n  const [languages, setLanguages] = useState<string[]>(item?.languages || []);\r\n  const [logo, setLogo] = useState<\"light\" | \"dark\" | string>(item?.logo || \"dark\");\r\n  const [seoImage, setSeoImage] = useState(item?.seoImage || \"\");\r\n  const [links, setLinks] = useState<{ name: string; href: string; order: number }[]>(item?.links || []);\r\n\r\n  useEffect(() => {\r\n    if (!item) {\r\n      setSlug(UrlUtils.slugify(title.toLowerCase()));\r\n    }\r\n  }, [item, title]);\r\n\r\n  return (\r\n    <div>\r\n      <SlideOverWideEmpty\r\n        title={item ? \"Edit\" : \"Create\"}\r\n        description={item ? \"Edit knowledge base\" : \"Create knowledge base\"}\r\n        open={true}\r\n        onClose={() => {\r\n          navigate(\"/admin/knowledge-base/bases\");\r\n        }}\r\n        className=\"sm:max-w-md\"\r\n        overflowYScroll={true}\r\n      >\r\n        <Form method=\"post\" className=\"inline-block w-full overflow-hidden p-1 text-left align-bottom sm:align-middle\">\r\n          <input type=\"hidden\" name=\"action\" value={item ? \"edit\" : \"new\"} />\r\n          {links.map((item, index) => {\r\n            return <input type=\"hidden\" name=\"links[]\" value={JSON.stringify(item)} key={index} />;\r\n          })}\r\n\r\n          <div className=\"space-y-2\">\r\n            <InputText ref={mainInput} autoFocus name=\"title\" title={\"Title\"} value={title} setValue={setTitle} required />\r\n            <InputText name=\"slug\" title={\"Slug\"} value={slug} setValue={setSlug} required />\r\n            <InputText name=\"description\" title={\"Description\"} value={description} setValue={setDescription} />\r\n            <div>\r\n              {languages?.map((item, idx) => {\r\n                return <input key={idx} type=\"hidden\" name={`languages[]`} value={item} />;\r\n              })}\r\n              <InputCombobox\r\n                name=\"languages\"\r\n                title={\"Languages\"}\r\n                value={languages}\r\n                onChange={(e) => setLanguages(e as string[])}\r\n                options={KnowledgeBaseUtils.supportedLanguages}\r\n              />\r\n            </div>\r\n            <InputSelect\r\n              name=\"defaultLanguage\"\r\n              title={\"Default language\"}\r\n              value={defaultLanguage}\r\n              setValue={(e) => setDefaultLanguage(e?.toString() || \"en\")}\r\n              options={languages.map((item) => {\r\n                return {\r\n                  value: item,\r\n                  name: item,\r\n                };\r\n              })}\r\n            />\r\n            <InputSelect\r\n              name=\"layout\"\r\n              title={\"Layout\"}\r\n              value={layout}\r\n              setValue={(e) => setLayout((e?.toString() as any) || \"list\")}\r\n              options={[\r\n                {\r\n                  value: \"list\",\r\n                  name: \"List\",\r\n                },\r\n                {\r\n                  value: \"articles\",\r\n                  name: \"Articles\",\r\n                },\r\n                {\r\n                  value: \"grid\",\r\n                  name: \"Grid\",\r\n                },\r\n              ]}\r\n            />\r\n            <InputSelector\r\n              name=\"color\"\r\n              title={\"Color\"}\r\n              value={color}\r\n              setValue={(e) => setColor(e as number)}\r\n              options={\r\n                getColors().map((color) => {\r\n                  return {\r\n                    name: <ColorBadge color={color} />,\r\n                    value: color,\r\n                  };\r\n                }) ?? []\r\n              }\r\n            />\r\n\r\n            <InputText\r\n              name=\"logo\"\r\n              title={\"Logo\"}\r\n              value={logo}\r\n              setValue={setLogo}\r\n              hint={\"light, dark or url\"}\r\n              button={\r\n                <div className=\"absolute inset-y-0 right-0 flex py-0.5 pr-0.5 \">\r\n                  <kbd\r\n                    className={clsx(\r\n                      \"inline-flex w-auto items-center justify-center rounded border border-gray-300 px-1 text-center font-sans text-xs font-medium text-gray-500\",\r\n                      ColorBackgroundUtils.getBg700(color)\r\n                    )}\r\n                  >\r\n                    {logo === \"light\" ? (\r\n                      <img className=\"h-7 w-auto\" src={LogoLight} alt=\"Logo\" />\r\n                    ) : logo === \"dark\" ? (\r\n                      <img className=\"h-7 w-auto\" src={LogoDark} alt=\"Logo\" />\r\n                    ) : logo.startsWith(\"http\") ? (\r\n                      <img className=\"h-7 w-auto\" src={logo} alt=\"Logo\" />\r\n                    ) : (\r\n                      <div className=\"italic text-white\">Invalid</div>\r\n                    )}\r\n                  </kbd>\r\n                </div>\r\n              }\r\n            />\r\n            <InputText name=\"seoImage\" title={\"SEO Image\"} value={seoImage} setValue={setSeoImage} hint={\"url\"} />\r\n            {seoImage && (\r\n              <div className=\"col-span-12\">\r\n                <img className=\"overflow-hidden rounded-lg shadow-xl xl:border-b xl:border-gray-200\" src={seoImage} alt={title} />\r\n              </div>\r\n            )}\r\n\r\n            <InputCheckboxWithDescription\r\n              name=\"enabled\"\r\n              title={\"Enabled\"}\r\n              value={enabled}\r\n              setValue={setEnabled}\r\n              description={\"If disabled, the knowledge base will not be accessible.\"}\r\n            />\r\n\r\n            <KbNavLinksTable items={links} setItems={setLinks} />\r\n          </div>\r\n          <div className=\"mt-5 flex justify-between space-x-2 sm:mt-6\">\r\n            <div>\r\n              {onDelete && (\r\n                <ButtonSecondary disabled={navigation.state === \"submitting\"} type=\"button\" className=\"w-full\" onClick={onDelete} destructive>\r\n                  <div>{\"Delete\"}</div>\r\n                </ButtonSecondary>\r\n              )}\r\n            </div>\r\n            <div className=\"flex space-x-2\">\r\n              <ButtonSecondary onClick={() => navigate(\"/admin/knowledge-base/bases\")}>{\"Cancel\"}</ButtonSecondary>\r\n              <LoadingButton actionName={item ? \"edit\" : \"new\"} type=\"submit\" disabled={navigation.state === \"submitting\"}>\r\n                {\"Save\"}\r\n              </LoadingButton>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </SlideOverWideEmpty>\r\n    </div>\r\n  );\r\n}\r\n", "import { Ref, forwardRef, useImperativeHandle, useRef, ReactNode } from \"react\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { Combobox, Transition } from \"@headlessui/react\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport { Colors } from \"~/application/enums/shared/Colors\";\r\nimport ColorBadge from \"../badges/ColorBadge\";\r\nimport HintTooltip from \"../tooltips/HintTooltip\";\r\nimport EntityIcon from \"~/components/layouts/icons/EntityIcon\";\r\nimport clsx from \"clsx\";\r\n\r\nexport interface RefInputCombobox {\r\n  focus: () => void;\r\n}\r\n\r\ninterface Props {\r\n  name?: string;\r\n  title?: string;\r\n  value?: (string | number)[];\r\n  disabled?: boolean;\r\n  options: { value: string | number | undefined; name?: string | ReactNode; color?: Colors; disabled?: boolean }[];\r\n  onChange?: (value: (string | number)[]) => void;\r\n  className?: string;\r\n  withSearch?: boolean;\r\n  withLabel?: boolean;\r\n  withColors?: boolean;\r\n  selectPlaceholder?: string;\r\n  onNew?: () => void;\r\n  onNewRoute?: string;\r\n  required?: boolean;\r\n  help?: string;\r\n  hint?: ReactNode;\r\n  icon?: string;\r\n  borderless?: boolean;\r\n  darkMode?: boolean;\r\n  autoFocus?: boolean;\r\n  readOnly?: boolean;\r\n  renderHiddenInputValue?: (item: string | number) => string;\r\n  prefix?: string;\r\n}\r\nconst InputCombobox = (\r\n  {\r\n    name,\r\n    title,\r\n    value,\r\n    options,\r\n    disabled,\r\n    onChange,\r\n    className,\r\n    withSearch = true,\r\n    withLabel = true,\r\n    withColors = false,\r\n    selectPlaceholder,\r\n    onNew,\r\n    required,\r\n    onNewRoute,\r\n    help,\r\n    hint,\r\n    icon,\r\n    borderless,\r\n    darkMode,\r\n    autoFocus,\r\n    readOnly,\r\n    renderHiddenInputValue,\r\n    prefix,\r\n  }: Props,\r\n  ref: Ref<RefInputCombobox>\r\n) => {\r\n  const button = useRef<HTMLButtonElement>(null);\r\n  const inputSearch = useRef<HTMLInputElement>(null);\r\n\r\n  const [selected, setSelected] = useState<(string | number)[]>(value || []);\r\n  const [searchInput, setSearchInput] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (value && !isEqual(selected.sort(), value?.sort())) {\r\n      setSelected(value);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    if (onChange && !isEqual(selected.sort(), value?.sort())) {\r\n      onChange(selected);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selected]);\r\n\r\n  function isEqual(a: any, b: any) {\r\n    return JSON.stringify(a) === JSON.stringify(b);\r\n  }\r\n\r\n  useImperativeHandle(ref, () => ({ focus }));\r\n  function focus() {\r\n    setTimeout(() => {\r\n      button.current?.focus();\r\n      button.current?.click();\r\n    }, 1);\r\n  }\r\n\r\n  const filteredItems = () => {\r\n    if (!options) {\r\n      return [];\r\n    }\r\n    return options.filter(\r\n      (f) => f.name?.toString().toUpperCase().includes(searchInput.toUpperCase()) || f.value?.toString().toUpperCase().includes(searchInput.toUpperCase())\r\n    );\r\n  };\r\n\r\n  function getSelectedOptions() {\r\n    return options.filter((f) => selected.includes(f.value?.toString() ?? \"\"));\r\n  }\r\n\r\n  return (\r\n    // @ts-ignore\r\n    <Combobox multiple value={selected} onChange={setSelected} disabled={disabled || readOnly}>\r\n      {({ open }) => (\r\n        <div className={clsx(className, \"text-gray-800\", darkMode && \"dark:text-gray-50\")}>\r\n          {/* {renderHiddenInputValue && <>\r\n            {selected?.map((item, idx) => {\r\n            return <input key={idx} type=\"hidden\" name={name + `[]`} value={JSON.stringify(item)} />;\r\n          })}\r\n          </>} */}\r\n\r\n          {withLabel && title && (\r\n            <Combobox.Label htmlFor={name} className=\"mb-1 flex justify-between space-x-2 text-xs font-medium text-gray-600\">\r\n              <div className=\" flex items-center space-x-1\">\r\n                <div className=\"truncate\">\r\n                  {title}\r\n                  {required && <span className=\"ml-1 text-red-500\">*</span>}\r\n                </div>\r\n\r\n                {help && <HintTooltip text={help} />}\r\n              </div>\r\n              {hint}\r\n            </Combobox.Label>\r\n          )}\r\n\r\n          <div className=\"relative\">\r\n            <Combobox.Button\r\n              autoFocus={autoFocus}\r\n              type=\"button\"\r\n              ref={button}\r\n              className={clsx(\r\n                \"relative w-full cursor-default rounded-md border border-gray-300 py-2 pl-3 pr-10 text-left shadow-sm focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500 sm:text-sm\",\r\n                disabled || readOnly ? \"cursor-not-allowed bg-gray-100\" : \"bg-white hover:bg-gray-50 focus:bg-gray-50\",\r\n                borderless && \"border-transparent\",\r\n                darkMode && \"dark:border-gray-800 dark:bg-gray-800\"\r\n              )}\r\n            >\r\n              {icon && (\r\n                <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                  <EntityIcon className=\"h-5 w-5 text-gray-400\" icon={icon} />\r\n                </div>\r\n              )}\r\n\r\n              <span className=\"inline-flex w-full items-center space-x-2 truncate\">\r\n                {/* {withColors && selected && <ColorBadge color={selected?.color ?? Colors.UNDEFINED} />} */}\r\n                <div className=\"truncate\">\r\n                  {/* {JSON.stringify(selected)} */}\r\n                  {selected.length > 0 ? (\r\n                    <span>\r\n                      {prefix ?? \"\"}\r\n                      {getSelectedOptions()\r\n                        .map((f) => f.name ?? f.value)\r\n                        .join(\", \")}\r\n                    </span>\r\n                  ) : (\r\n                    <span className=\"text-sm text-gray-500\">{selectPlaceholder ?? \"Select\"}...</span>\r\n                  )}\r\n                </div>\r\n              </span>\r\n              <span className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </span>\r\n            </Combobox.Button>\r\n\r\n            <Transition show={open} as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\r\n              <Combobox.Options\r\n                // onFocus={() => inputSearch.current?.focus()}\r\n                onBlur={() => setSearchInput(\"\")}\r\n                className={clsx(\r\n                  \"absolute z-10 mt-1 max-h-72 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\",\r\n                  darkMode && \"dark:bg-gray-800\"\r\n                )}\r\n              >\r\n                {(withSearch || onNew || onNewRoute) && (\r\n                  <div className=\"flex rounded-md p-2\">\r\n                    <div className=\"relative flex flex-grow items-stretch focus-within:z-10\">\r\n                      <div className=\"pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                        </svg>\r\n                      </div>\r\n                      <input\r\n                        ref={inputSearch}\r\n                        id=\"search\"\r\n                        autoComplete=\"off\"\r\n                        placeholder={\"Search...\"}\r\n                        value={searchInput}\r\n                        onChange={(e) => setSearchInput(e.target.value)}\r\n                        className=\"block w-full rounded-none rounded-l-md border border-gray-300 bg-white px-3 py-2 pl-10 text-sm focus:border-accent-300 focus:outline-none focus:ring-gray-300 sm:text-sm\"\r\n                      />\r\n                    </div>\r\n                    {onNew && (\r\n                      <button\r\n                        title={\"New\"}\r\n                        type=\"button\"\r\n                        onClick={onNew}\r\n                        className=\"relative -ml-px inline-flex items-center space-x-2 rounded-r-md border border-gray-300 bg-gray-50 px-2 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                        </svg>\r\n                      </button>\r\n                    )}\r\n\r\n                    {onNewRoute && (\r\n                      <Link\r\n                        to={onNewRoute}\r\n                        className=\"relative -ml-px inline-flex items-center space-x-2 rounded-r-md border border-gray-300 bg-gray-50 px-2 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:border-accent-500 focus:outline-none focus:ring-1 focus:ring-accent-500\"\r\n                      >\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-4 w-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                        </svg>\r\n                      </Link>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {filteredItems().map((item, idx) => (\r\n                  <Combobox.Option\r\n                    key={idx}\r\n                    disabled={item.disabled}\r\n                    className={({ active }) =>\r\n                      clsx(\r\n                        \"relative cursor-default select-none py-2 pl-3 pr-9\",\r\n                        !item.disabled && active && \"bg-accent-600 text-white\",\r\n                        !item.disabled && !active && \"text-gray-900\",\r\n                        item.disabled && \"cursor-not-allowed bg-gray-100 text-gray-400\",\r\n                        darkMode && !item.disabled && active && \"dark:bg-accent-500 dark:text-black\",\r\n                        darkMode && !item.disabled && !active && \"dark:text-gray-50\",\r\n                        darkMode && item.disabled && \"cursor-not-allowed dark:bg-gray-900 dark:text-gray-600\"\r\n                      )\r\n                    }\r\n                    value={item.value}\r\n                  >\r\n                    {({ selected, active }) => (\r\n                      <>\r\n                        <div className=\"flex items-center space-x-2\">\r\n                          {withColors && item.color !== undefined && <ColorBadge color={item.color} />}\r\n                          <div className={clsx(selected ? \"font-semibold\" : \"font-normal\", \"truncate\")}>{item.name || item.value}</div>\r\n                        </div>\r\n\r\n                        {selected ? (\r\n                          <span className={clsx(active ? \"text-white\" : \"text-accent-600\", \"absolute inset-y-0 right-0 flex items-center pr-4\")}>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                              <path\r\n                                fillRule=\"evenodd\"\r\n                                d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n                                clipRule=\"evenodd\"\r\n                              />\r\n                            </svg>\r\n                          </span>\r\n                        ) : null}\r\n                      </>\r\n                    )}\r\n                  </Combobox.Option>\r\n                ))}\r\n\r\n                {withSearch && filteredItems().length === 0 && <div className=\"px-3 py-2 text-sm text-gray-400\">There are no records.</div>}\r\n              </Combobox.Options>\r\n            </Transition>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Combobox>\r\n  );\r\n};\r\n\r\nexport default forwardRef(InputCombobox);\r\n", "import clsx from \"clsx\";\r\n\r\ninterface OrderType {\r\n  idx: number;\r\n  order: number;\r\n}\r\ninterface Props<OrderType> {\r\n  idx: number;\r\n  items: OrderType[];\r\n  editable?: boolean;\r\n  onChange: (orders: OrderType[]) => void;\r\n  className?: string;\r\n}\r\nexport default function OrderIndexButtons({ idx, items, editable = true, onChange, className }: Props<OrderType>) {\r\n  function changeOrder(forward: boolean) {\r\n    const currentItem = items[idx];\r\n    let nextItem: OrderType | undefined = undefined;\r\n    let prevItem: OrderType | undefined = undefined;\r\n\r\n    if (forward) {\r\n      if (items.length > idx + 1) {\r\n        nextItem = items[idx + 1];\r\n      }\r\n    } else {\r\n      if (idx - 1 >= 0) {\r\n        prevItem = items[idx - 1];\r\n      }\r\n    }\r\n\r\n    const newOrders = items.map((item, idx) => {\r\n      let order = 0;\r\n      if (currentItem.idx === item.idx) {\r\n        order = idx + (forward ? 1 : -1) + 1;\r\n      } else if (prevItem?.idx === item.idx) {\r\n        order = idx + (forward ? 0 : 1) + 1;\r\n      } else if (nextItem?.idx === item.idx) {\r\n        order = idx + (forward ? -1 : 0) + 1;\r\n      } else {\r\n        order = idx + 1;\r\n      }\r\n      return { ...item, order };\r\n    });\r\n    onChange(newOrders);\r\n  }\r\n  return (\r\n    <div className={clsx(\"flex items-center space-x-1 truncate\", className)}>\r\n      <button\r\n        type=\"button\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          changeOrder(false);\r\n        }}\r\n        className={clsx(\r\n          !editable || idx <= 0 ? \" cursor-not-allowed bg-gray-100 text-gray-300\" : \"hover:bg-gray-100 hover:text-gray-800\",\r\n          \"h-4 w-4 bg-gray-50 px-0.5 py-0.5 text-gray-500 focus:outline-none\"\r\n        )}\r\n        disabled={!editable || idx <= 0}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={(e) => {\r\n          e.stopPropagation();\r\n          changeOrder(true);\r\n        }}\r\n        className={clsx(\r\n          !editable || idx >= items.length - 1 ? \" cursor-not-allowed bg-gray-100 text-gray-300\" : \"hover:bg-gray-100 hover:text-gray-800\",\r\n          \"h-4 w-4 bg-gray-50 px-0.5 py-0.5 text-gray-500 focus:outline-none\"\r\n        )}\r\n        disabled={!editable || idx >= items.length - 1}\r\n      >\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-3 w-3\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n", "import OrderIndexButtons from \"~/components/ui/sort/OrderIndexButtons\";\r\nimport TableSimple from \"~/components/ui/tables/TableSimple\";\r\nimport { KbNavLinkDto } from \"~/modules/knowledgeBase/dtos/KbNavLinkDto\";\r\n\r\nexport default function KbNavLinksTable({\r\n  items,\r\n  setItems,\r\n}: {\r\n  items: KbNavLinkDto[];\r\n  setItems: React.Dispatch<\r\n    React.SetStateAction<\r\n      {\r\n        name: string;\r\n        href: string;\r\n        order: number;\r\n      }[]\r\n    >\r\n  >;\r\n}) {\r\n  return (\r\n    <div>\r\n      <div className=\"mb-1 flex items-center justify-between space-x-2 text-xs\">\r\n        <label className=\"font-medium text-gray-600\">{\"Nav links\"}</label>\r\n        <button type=\"button\" onClick={() => setItems([])} className=\"text-gray-500 hover:text-gray-700\">\r\n          {\"Clear\"}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"\">\r\n        <TableSimple\r\n          items={items.sort((a, b) => a.order - b.order)}\r\n          headers={[\r\n            {\r\n              name: \"order\",\r\n              title: \"\",\r\n              value: (item, idx) => (\r\n                <OrderIndexButtons\r\n                  idx={idx}\r\n                  items={items.map((f, idx) => {\r\n                    return {\r\n                      idx: idx,\r\n                      order: f.order,\r\n                    };\r\n                  })}\r\n                  onChange={(newItems) => {\r\n                    setItems(\r\n                      newItems.map((f, i) => {\r\n                        return { ...items[i], order: f.order };\r\n                      })\r\n                    );\r\n                  }}\r\n                />\r\n              ),\r\n            },\r\n            {\r\n              name: \"title\",\r\n              title: \"Title\",\r\n              value: (item) => item.name,\r\n              editable: () => true,\r\n              setValue: (value, idx) => setItems((e) => e.map((item, i) => (i === idx ? { ...item, name: value } : item))),\r\n            },\r\n            {\r\n              name: \"href\",\r\n              title: \"Link\",\r\n              value: (item) => item.href,\r\n              editable: () => true,\r\n              setValue: (value, idx) => setItems((e) => e.map((item, i) => (i === idx ? { ...item, href: value } : item))),\r\n            },\r\n          ]}\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setItems([...items, { name: \"Link \" + (items.length + 1), href: \"/\", order: items.length + 1 }]);\r\n          }}\r\n          className=\"mt-2 flex items-center space-x-1 rounded-md border border-gray-300 bg-white px-2 py-1 text-xs text-gray-600 hover:bg-gray-100 focus:text-gray-800 focus:ring focus:ring-gray-300 focus:ring-offset-1\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n          </svg>\r\n          <span className=\"font-medium uppercase\">{\"Add\"}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { ActionArgs, json, redirect } from \"@remix-run/node\";\r\nimport { useSubmit } from \"@remix-run/react\";\r\nimport { useTypedActionData } from \"remix-typedjson\";\r\nimport ActionResultModal from \"~/components/ui/modals/ActionResultModal\";\r\nimport KnowledgeBaseForm from \"~/modules/knowledgeBase/components/bases/KnowledgeBaseForm\";\r\nimport { createKnowledgeBase, getKnowledgeBaseBySlug } from \"~/modules/knowledgeBase/db/knowledgeBase.db.server\";\r\nimport { KbNavLinkDto } from \"~/modules/knowledgeBase/dtos/KbNavLinkDto\";\r\nimport KnowledgeBasePermissionsService from \"~/modules/knowledgeBase/service/KnowledgeBasePermissionsService\";\r\n\r\ntype ActionData = {\r\n  error?: string;\r\n  success?: string;\r\n};\r\nexport const action = async ({ request, params }: ActionArgs) => {\r\n  const form = await request.formData();\r\n  const action = form.get(\"action\")?.toString();\r\n  await KnowledgeBasePermissionsService.hasPermission({ action });\r\n  if (action === \"new\") {\r\n    const slug = form.get(\"slug\")?.toString() ?? \"\";\r\n    const title = form.get(\"title\")?.toString() ?? \"\";\r\n    const description = form.get(\"description\")?.toString() ?? \"\";\r\n    const defaultLanguage = form.get(\"defaultLanguage\")?.toString() ?? \"\";\r\n    const layout = form.get(\"layout\")?.toString() ?? \"\";\r\n    const color = Number(form.get(\"color\")?.toString() ?? \"\");\r\n    const enabled = Boolean(form.get(\"enabled\"));\r\n    const languages = form.getAll(\"languages[]\").map((l) => l.toString());\r\n    const links: KbNavLinkDto[] = form.getAll(\"links[]\").map((l) => JSON.parse(l.toString()));\r\n    const logo = form.get(\"logo\")?.toString() ?? \"\";\r\n    const seoImage = form.get(\"seoImage\")?.toString() ?? \"\";\r\n\r\n    if (languages.length === 0) {\r\n      return json({ error: \"At least one language is required\" }, { status: 400 });\r\n    }\r\n    const existing = await getKnowledgeBaseBySlug(slug);\r\n    if (existing) {\r\n      return json({ error: \"Slug already exists\" }, { status: 400 });\r\n    }\r\n\r\n    try {\r\n      await createKnowledgeBase({\r\n        slug,\r\n        title,\r\n        description,\r\n        defaultLanguage,\r\n        layout,\r\n        color,\r\n        enabled,\r\n        languages: JSON.stringify(languages),\r\n        links: JSON.stringify(links),\r\n        logo,\r\n        seoImage,\r\n      });\r\n    } catch (e: any) {\r\n      return json({ error: e.message }, { status: 400 });\r\n    }\r\n\r\n    return redirect(\"/admin/knowledge-base/bases\");\r\n  } else {\r\n    return json({ error: \"Invalid form\" }, { status: 400 });\r\n  }\r\n};\r\n\r\nexport default function () {\r\n  const actionData = useTypedActionData<ActionData>();\r\n  const submit = useSubmit();\r\n\r\n  function onDelete() {\r\n    const form = new FormData();\r\n    form.set(\"action\", \"delete\");\r\n    submit(form, {\r\n      method: \"post\",\r\n    });\r\n  }\r\n  return (\r\n    <div>\r\n      <KnowledgeBaseForm onDelete={onDelete} />\r\n\r\n      <ActionResultModal actionData={actionData} showSuccess={false} />\r\n    </div>\r\n  );\r\n}\r\n", "import type { V2_MetaFunction } from \"@remix-run/node\";\r\nimport { json } from \"@remix-run/node\";\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport type { MetaTagsDto } from \"~/application/dtos/seo/MetaTagsDto\";\r\nimport {\r\n  countAllKbsArticleDownvotes,\r\n  countAllKbsArticleUpvotes,\r\n  countAllKbsArticleViews,\r\n  countAllKbsViews,\r\n} from \"~/modules/knowledgeBase/db/kbAnalytics.db.server\";\r\nimport { countKnowledgeBaseArticles } from \"~/modules/knowledgeBase/db/kbArticles.db.server\";\r\nimport { countKnowledgeBaseCategories } from \"~/modules/knowledgeBase/db/kbCategories.db.server\";\r\nimport { countKnowledgeBases } from \"~/modules/knowledgeBase/db/knowledgeBase.db.server\";\r\nimport NumberUtils from \"~/utils/shared/NumberUtils\";\r\n\r\ntype LoaderData = {\r\n  metatags: MetaTagsDto;\r\n  summary: {\r\n    kbsTotal: number;\r\n    articlesTotal: number;\r\n    categoriesTotal: number;\r\n    kbsViews: number;\r\n    articlesViews: number;\r\n    articlesUpvotes: number;\r\n    articlesDownvotes: number;\r\n  };\r\n};\r\nexport let loader = async () => {\r\n  const data: LoaderData = {\r\n    metatags: [{ title: `Knowledge Base` }],\r\n    summary: {\r\n      kbsTotal: await countKnowledgeBases(),\r\n      articlesTotal: await countKnowledgeBaseArticles(),\r\n      categoriesTotal: await countKnowledgeBaseCategories(),\r\n      kbsViews: await countAllKbsViews(),\r\n      articlesViews: await countAllKbsArticleViews(),\r\n      articlesUpvotes: await countAllKbsArticleUpvotes(),\r\n      articlesDownvotes: await countAllKbsArticleDownvotes(),\r\n    },\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport const meta: V2_MetaFunction = ({ data }) => data?.metatags;\r\n\r\nexport default function () {\r\n  const data = useLoaderData<LoaderData>();\r\n  return (\r\n    <div className=\"mx-auto mb-12 max-w-5xl space-y-5 px-4 py-4 sm:px-6 lg:px-8 xl:max-w-7xl\">\r\n      <div className=\"border-b border-gray-200 pb-5\">\r\n        <h3 className=\"text-lg font-medium leading-6 text-gray-900\">Overview</h3>\r\n      </div>\r\n      <dl className=\"grid gap-2 sm:grid-cols-3\">\r\n        <SummaryCard title=\"Knowledge Bases\" value={data.summary.kbsTotal} />\r\n        <SummaryCard title=\"Articles\" value={data.summary.articlesTotal} />\r\n        <SummaryCard title=\"Categories\" value={data.summary.categoriesTotal} />\r\n        <SummaryCard title=\"Articles Views\" value={data.summary.articlesViews} />\r\n        <SummaryCard title=\"Articles Upvotes\" value={data.summary.articlesUpvotes} />\r\n        <SummaryCard title=\"Articles Downvotes\" value={data.summary.articlesDownvotes} />\r\n      </dl>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SummaryCard({ title, value }: { title: string; value: number }) {\r\n  return (\r\n    <div className=\"overflow-hidden rounded-lg bg-white px-4 py-3 shadow \">\r\n      <dt className=\"truncate text-xs font-medium uppercase text-gray-500\">\r\n        <div>{title}</div>\r\n      </dt>\r\n      <dd className=\"mt-1 truncate text-2xl font-semibold text-gray-900\">{NumberUtils.intFormat(value)}</dd>\r\n    </div>\r\n  );\r\n}\r\n", "import numeral from \"numeral\";\r\n\r\nexport const defaultCurrencySymbol = \"$\";\r\nexport type NumberFormatType = \"integer\" | \"decimal\" | \"currency\" | \"percentage\" | \"rating\";\r\nexport const NumberFormats: { name: string; value: NumberFormatType }[] = [\r\n  { name: \"Integer\", value: \"integer\" },\r\n  { name: \"Decimal\", value: \"decimal\" },\r\n  { name: \"Currency\", value: \"currency\" },\r\n  { name: \"Percent\", value: \"percentage\" },\r\n  { name: \"Rating\", value: \"rating\" },\r\n];\r\n\r\nconst numberFormat = (value: number): string => {\r\n  try {\r\n    return numeral(value).format(\"0,0\");\r\n  } catch (e) {\r\n    return value?.toString();\r\n  }\r\n};\r\nconst decimalFormat = (value: number): string => {\r\n  try {\r\n    return numeral(value).format(\"0,0.00\");\r\n  } catch (e) {\r\n    return value?.toString();\r\n  }\r\n};\r\nconst intFormat = (value: number | string): string => {\r\n  try {\r\n    return numeral(value).format(\"0,0\");\r\n  } catch (e) {\r\n    return value?.toString();\r\n  }\r\n};\r\nconst pad = (num: number, size: number) => {\r\n  const s = \"000000000\" + num;\r\n  return s.substring(s.length - size);\r\n};\r\nconst custom = (value: number, format: string): string => {\r\n  try {\r\n    return numeral(value).format(format);\r\n  } catch (e) {\r\n    return value?.toString();\r\n  }\r\n};\r\n\r\nexport default {\r\n  numberFormat,\r\n  decimalFormat,\r\n  intFormat,\r\n  pad,\r\n  defaultCurrencySymbol,\r\n  custom,\r\n};\r\n", "import { marked } from \"marked\";\r\n\r\nexport default function () {\r\n  return (\r\n    <div className=\"prose p-6\">\r\n      <div\r\n        dangerouslySetInnerHTML={{\r\n          __html: marked(`\r\n### What is Archieve KB?\r\n\r\nThis is the Knowledge Base feature of Archieve KB.\r\n### Features\r\n\r\n- **WYSIWYG** editor: [Tiptap](https://tiptap.dev/) editor with AI-powered suggestions\r\n- **Multi-knowlege-base** support: Create multiple knowledge bases for different purposes.\r\n- **Multi-language** support: Add categories and articles in multiple languages.\r\n- **Simple Analytics**: Views, Upvotes, and Downvotes tracking.\r\n- **Image storage** with Supabase: Upload article images to [Supabase](https://supabase.io) Storage.\r\n- **SEO**: Add SEO title, description, and image to your articles.\r\n- **Article Duplication**: Duplicate articles so you don't start from scratch.\r\n- **Article Drafts**: Save your articles as drafts and publish them when you're ready.\r\n- **Import and Export**: Don't lose your data, import and export your knowledge bases.\r\n\r\n### License\r\n\r\nLicensed under the MIT License.\r\n\r\n`),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n", "import { json } from \"@remix-run/node\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport { useEffect } from \"react\";\r\nimport { useTypedLoaderData } from \"remix-typedjson\";\r\nimport Header from \"~/components/Header\";\r\nimport ServerError from \"~/components/ServerError\";\r\nimport type { KnowledgeBaseDto } from \"~/modules/knowledgeBase/dtos/KnowledgeBaseDto\";\r\nimport KnowledgeBaseService from \"~/modules/knowledgeBase/service/KnowledgeBaseService\";\r\n\r\ntype LoaderData = {\r\n  knowledgeBases: KnowledgeBaseDto[];\r\n};\r\nexport let loader = async () => {\r\n  const data: LoaderData = {\r\n    knowledgeBases: await KnowledgeBaseService.getAll({ enabled: true }),\r\n  };\r\n  return json(data);\r\n};\r\n\r\nexport default function Index() {\r\n  const data = useTypedLoaderData<LoaderData>();\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"relative mx-auto flex flex-col items-center justify-center space-y-8 py-6 px-8 max-w-5xl\">\r\n        <h1 className=\"text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl\">Archieve KB</h1>\r\n        <p className=\"text-center text-2xl text-gray-800\">Organize your knowledge bases with categories and articles</p>\r\n        <div className=\"mt-10 flex items-center justify-center gap-x-6 w-full max-w-md\">\r\n          {data.knowledgeBases.length === 0 ? (\r\n            <div>No knowledge bases found</div>\r\n          ) : (\r\n            <div className=\"space-y-6 flex flex-col w-full\">\r\n              {data.knowledgeBases.map((kb, idx) => {\r\n                return (\r\n                  <Link\r\n                    key={kb.slug}\r\n                    to={`/${kb?.slug}`}\r\n                    className=\"text-lg relative block rounded-lg border-2 border-dashed border-gray-300 px-12 py-6 text-center hover:border-gray-400 focus:outline-none focus:border-solid\"\r\n                  >\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div className=\"flex-grow\">\r\n                        {kb.title} <span className=\"text-gray-500 text-sm\"></span>\r\n                      </div>\r\n                    </div>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function ErrorBoundary() {\r\n  return <ServerError />;\r\n}\r\n", "import { useState } from \"react\";\r\nimport { Dialog } from \"@headlessui/react\";\r\nimport { Bars3Icon, XMarkIcon } from \"@heroicons/react/24/outline\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport Icon from \"./brand/Icon\";\r\nimport Logo from \"./brand/Logo\";\r\n\r\nexport default function Header() {\r\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\r\n\r\n  const [navigation] = useState([\r\n    { name: \"Home\", href: \"/\" },\r\n    \r\n  ]);\r\n\r\n  return (\r\n    <header className=\"bg-gray-50\">\r\n      <nav className=\"mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8\" aria-label=\"Global\">\r\n        <div className=\"flex lg:flex-1\">\r\n          <Link to=\"/\" className=\"-m-1.5 p-1.5\">\r\n            <>\r\n              <Logo className=\"hidden lg:block\" size=\"h-9\" />\r\n              <Icon className=\"lg:hidden\" size=\"h-9\" />\r\n            </>\r\n          </Link>\r\n        </div>\r\n        <div className=\"flex lg:hidden\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"-m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700\"\r\n            onClick={() => setMobileMenuOpen(true)}\r\n          >\r\n            <span className=\"sr-only\">Open main menu</span>\r\n            <Bars3Icon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"hidden lg:flex lg:gap-x-12\">\r\n          {navigation.map((item) => (\r\n            <Link key={item.name} to={item.href} className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n              {item.name}\r\n            </Link>\r\n          ))}\r\n        </div>\r\n        <div className=\"hidden lg:flex lg:flex-1 lg:justify-end lg:space-x-4 lg:items-center\">\r\n          <Link to=\"/admin\" className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n            Admin <span aria-hidden=\"true\">&rarr;</span>\r\n          </Link>\r\n        </div>\r\n      </nav>\r\n      <Dialog as=\"div\" className=\"lg:hidden\" open={mobileMenuOpen} onClose={setMobileMenuOpen}>\r\n        <div className=\"fixed inset-0 z-10\" />\r\n        <Dialog.Panel className=\"fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <Link to=\"/\" className=\"-m-1.5 p-1.5\">\r\n              <span className=\"sr-only\">Archieve KB</span>\r\n              {/* <img className=\"h-8 w-auto\" src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\" alt=\"\" /> */}\r\n              <Icon className=\"h-8\" />\r\n            </Link>\r\n            <button type=\"button\" className=\"-m-2.5 rounded-md p-2.5 text-gray-700\" onClick={() => setMobileMenuOpen(false)}>\r\n              <span className=\"sr-only\">Close menu</span>\r\n              <XMarkIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"mt-6 flow-root\">\r\n            <div className=\"-my-6 divide-y divide-gray-500/10\">\r\n              <div className=\"space-y-2 py-6\">\r\n                {navigation.map((item) => (\r\n                  <Link\r\n                    key={item.name}\r\n                    to={item.href}\r\n                    className=\"-mx-3 block rounded-lg px-3 py-2 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\"\r\n                  >\r\n                    {item.name}\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n              <div className=\"py-6\">\r\n                \r\n                <Link to=\"/admin\" className=\"-mx-3 block rounded-lg px-3 py-2.5 text-base font-semibold leading-7 text-gray-900 hover:bg-gray-50\">\r\n                  Admin\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Dialog.Panel>\r\n      </Dialog>\r\n    </header>\r\n  );\r\n}\r\n", "import clsx from \"clsx\";\r\nimport { Link } from \"@remix-run/react\";\r\nimport IconLight from \"~/assets/img/icon-light.png\";\r\nimport IconDark from \"~/assets/img/icon-dark.png\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  size?: string;\r\n}\r\n\r\nexport default function Icon({ className = \"\", size = \"h-9\" }: Props) {\r\n  return (\r\n    <Link to=\"/\" className={clsx(className, \"flex\")}>\r\n      <img className={clsx(size, \"hidden w-auto dark:block\")} src={IconLight} alt=\"Logo\" />\r\n      <img className={clsx(size, \"w-auto dark:hidden\")} src={IconLight} alt=\"Logo\" />\r\n    </Link>\r\n  );\r\n}\r\n", "export default {'version':'afe8eaf8','entry':{'module':'/build/entry.client-VYBMY5M7.js','imports':['/build/_shared/chunk-F6BDN6DI.js','/build/_shared/chunk-UEF5622E.js','/build/_shared/chunk-TKJ56M4R.js','/build/_shared/chunk-T46ZX52X.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-WPZKQP2B.js','imports':['/build/_shared/chunk-YZL5EPTV.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/$slug.($lang)':{'id':'routes/$slug.($lang)','parentId':'root','path':':slug/:lang?','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$slug.($lang)-4BDF5UBH.js','imports':['/build/_shared/chunk-G7YK4E4X.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-BXJOJZ6F.js','/build/_shared/chunk-WQR2CT3A.js','/build/_shared/chunk-GLWWVLQP.js','/build/_shared/chunk-KT2KT7KP.js','/build/_shared/chunk-LEXNYWDR.js','/build/_shared/chunk-5SUPQYJE.js','/build/_shared/chunk-77DOWEWK.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-HLHB2XRP.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$slug.($lang).articles.$article':{'id':'routes/$slug.($lang).articles.$article','parentId':'root','path':':slug/:lang?/articles/:article','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$slug.($lang).articles.$article-WDN2VDWY.js','imports':['/build/_shared/chunk-2FPQ64TN.js','/build/_shared/chunk-DVSOHV6S.js','/build/_shared/chunk-W34Q662J.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-BXJOJZ6F.js','/build/_shared/chunk-WQR2CT3A.js','/build/_shared/chunk-GLWWVLQP.js','/build/_shared/chunk-KT2KT7KP.js','/build/_shared/chunk-LEXNYWDR.js','/build/_shared/chunk-5SUPQYJE.js','/build/_shared/chunk-77DOWEWK.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-HLHB2XRP.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$slug.($lang).categories.$category':{'id':'routes/$slug.($lang).categories.$category','parentId':'root','path':':slug/:lang?/categories/:category','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$slug.($lang).categories.$category-AXH4N6VZ.js','imports':['/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-G7YK4E4X.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-GLWWVLQP.js','/build/_shared/chunk-KT2KT7KP.js','/build/_shared/chunk-LEXNYWDR.js','/build/_shared/chunk-5SUPQYJE.js','/build/_shared/chunk-77DOWEWK.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-HLHB2XRP.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-ASU33Q3J.js','imports':['/build/_shared/chunk-WCRDTLRB.js','/build/_shared/chunk-PDFECUU5.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-HLHB2XRP.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/index':{'id':'routes/admin/index','parentId':'routes/admin','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/index-X4DLPM4V.js','imports':['/build/_shared/chunk-DVSOHV6S.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base':{'id':'routes/admin/knowledge-base','parentId':'routes/admin','path':'knowledge-base','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base-MJDZFX4M.js','imports':['/build/_shared/chunk-42J64ETF.js','/build/_shared/chunk-MYHMIGSC.js','/build/_shared/chunk-5SUPQYJE.js','/build/_shared/chunk-77DOWEWK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/admin/knowledge-base/bases':{'id':'routes/admin/knowledge-base/bases','parentId':'routes/admin/knowledge-base','path':'bases','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases-7MDZKMDR.js','imports':['/build/_shared/chunk-FKSWAYI7.js','/build/_shared/chunk-V6AO6MVN.js','/build/_shared/chunk-VETZYZSA.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-W34Q662J.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-PDFECUU5.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/articles':{'id':'routes/admin/knowledge-base/bases.$slug/articles','parentId':'routes/admin/knowledge-base','path':'bases/:slug/articles','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/articles-KGMG5X76.js','imports':['/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/articles.$lang':{'id':'routes/admin/knowledge-base/bases.$slug/articles.$lang','parentId':'routes/admin/knowledge-base','path':'bases/:slug/articles/:lang','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/articles.$lang-VYZ52DRB.js','imports':['/build/_shared/chunk-FKSWAYI7.js','/build/_shared/chunk-VETZYZSA.js','/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-537CJWXF.js','/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-4SGUX4ZU.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-OQJIRZLG.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-PDFECUU5.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id':{'id':'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id','parentId':'routes/admin/knowledge-base','path':'bases/:slug/articles/:lang/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/articles.$lang.$id-SXBCD225.js','imports':['/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-537CJWXF.js','/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-2FPQ64TN.js','/build/_shared/chunk-DVSOHV6S.js','/build/_shared/chunk-W34Q662J.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.edit':{'id':'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.edit','parentId':'routes/admin/knowledge-base','path':'bases/:slug/articles/:lang/:id/edit','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.edit-NM3FN2RQ.js','imports':['/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-537CJWXF.js','/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-PDFECUU5.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id/settings':{'id':'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id/settings','parentId':'routes/admin/knowledge-base/bases.$slug/articles.$lang.$id','path':'settings','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/articles.$lang.$id/settings-WNPC633L.js','imports':['/build/_shared/chunk-WK5W4NNR.js','/build/_shared/chunk-4QF76PYA.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-OQJIRZLG.js','/build/_shared/chunk-PDFECUU5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/categories':{'id':'routes/admin/knowledge-base/bases.$slug/categories','parentId':'routes/admin/knowledge-base','path':'bases/:slug/categories','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/categories-T3PPIO2F.js','imports':['/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-OQJIRZLG.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/categories.$lang':{'id':'routes/admin/knowledge-base/bases.$slug/categories.$lang','parentId':'routes/admin/knowledge-base','path':'bases/:slug/categories/:lang','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/categories.$lang-UMUVMPZA.js','imports':['/build/_shared/chunk-VETZYZSA.js','/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-537CJWXF.js','/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-4QF76PYA.js','/build/_shared/chunk-4SGUX4ZU.js','/build/_shared/chunk-CXR4U3KY.js','/build/_shared/chunk-OQJIRZLG.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/categories.$lang/$id':{'id':'routes/admin/knowledge-base/bases.$slug/categories.$lang/$id','parentId':'routes/admin/knowledge-base/bases.$slug/categories.$lang','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/categories.$lang/$id-SITZCGDS.js','imports':['/build/_shared/chunk-KFLSKEQE.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-35AH7SPI.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-PDFECUU5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.$section':{'id':'routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.$section','parentId':'routes/admin/knowledge-base/bases.$slug/categories.$lang','path':':id/sections/:section','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.$section-VFG7OAD6.js','imports':['/build/_shared/chunk-2AXTBQWV.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-35AH7SPI.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-PDFECUU5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.new':{'id':'routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.new','parentId':'routes/admin/knowledge-base/bases.$slug/categories.$lang','path':':id/sections/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.new-W3XHW7PL.js','imports':['/build/_shared/chunk-2AXTBQWV.js','/build/_shared/chunk-35AH7SPI.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-PDFECUU5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.$slug/categories.$lang/new':{'id':'routes/admin/knowledge-base/bases.$slug/categories.$lang/new','parentId':'routes/admin/knowledge-base/bases.$slug/categories.$lang','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.$slug/categories.$lang/new-7SLKQGFK.js','imports':['/build/_shared/chunk-KFLSKEQE.js','/build/_shared/chunk-35AH7SPI.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-PDFECUU5.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases.import':{'id':'routes/admin/knowledge-base/bases.import','parentId':'routes/admin/knowledge-base','path':'bases/import','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases.import-UJOGYUOY.js','imports':['/build/_shared/chunk-GNWM2AVD.js','/build/_shared/chunk-N6FKCDEO.js','/build/_shared/chunk-E2MEN3UG.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-AIL3Y3SN.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-32A55DVW.js','/build/_shared/chunk-7DRDZPCD.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-YZL5EPTV.js','/build/_shared/chunk-PDFECUU5.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/admin/knowledge-base/bases/$id':{'id':'routes/admin/knowledge-base/bases/$id','parentId':'routes/admin/knowledge-base/bases','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases/$id-XRR2XPGI.js','imports':['/build/_shared/chunk-EPWTPT7R.js','/build/_shared/chunk-WK5W4NNR.js','/build/_shared/chunk-537CJWXF.js','/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-4QF76PYA.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-LEXNYWDR.js','/build/_shared/chunk-77DOWEWK.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-HLHB2XRP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/bases/new':{'id':'routes/admin/knowledge-base/bases/new','parentId':'routes/admin/knowledge-base/bases','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/bases/new-4A3NGLCX.js','imports':['/build/_shared/chunk-EPWTPT7R.js','/build/_shared/chunk-WK5W4NNR.js','/build/_shared/chunk-537CJWXF.js','/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-QBZ3YRAH.js','/build/_shared/chunk-LEXNYWDR.js','/build/_shared/chunk-77DOWEWK.js','/build/_shared/chunk-F4XNRYN3.js','/build/_shared/chunk-3CZPTTMZ.js','/build/_shared/chunk-HLHB2XRP.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/danger':{'id':'routes/admin/knowledge-base/danger','parentId':'routes/admin/knowledge-base','path':'danger','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/danger-37E55KKK.js','imports':['/build/_shared/chunk-DTP5YZIZ.js','/build/_shared/chunk-AHB5NUPE.js','/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-4BCRGU6P.js','/build/_shared/chunk-MQJJFYDS.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin/knowledge-base/index':{'id':'routes/admin/knowledge-base/index','parentId':'routes/admin/knowledge-base','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/admin/knowledge-base/index-YH7GIWKI.js','imports':['/build/_shared/chunk-V6AO6MVN.js','/build/_shared/chunk-ZVVANLS7.js','/build/_shared/chunk-OQJIRZLG.js','/build/_shared/chunk-WQR2CT3A.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.ai/generate':{'id':'routes/api.ai/generate','parentId':'root','path':'api/ai/generate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.ai/generate-USBJXB7Y.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/api.ai/upload':{'id':'routes/api.ai/upload','parentId':'root','path':'api/ai/upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/api.ai/upload-C27E2IH6.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-2WVLTR2Z.js','imports':['/build/_shared/chunk-NQVL3JC2.js','/build/_shared/chunk-KT2KT7KP.js','/build/_shared/chunk-5SUPQYJE.js','/build/_shared/chunk-77DOWEWK.js','/build/_shared/chunk-SPXL2D7W.js','/build/_shared/chunk-6OU4J75P.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-AFE8EAF8.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\sudha\\\\remix-knowledge-base\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\$slug.($lang).categories.$category.tsx\";\nimport * as route2 from \"./routes\\\\$slug.($lang).articles.$article.tsx\";\nimport * as route3 from \"./routes\\\\api.ai\\\\generate.tsx\";\nimport * as route4 from \"./routes\\\\$slug.($lang).tsx\";\nimport * as route5 from \"./routes\\\\api.ai\\\\upload.tsx\";\nimport * as route6 from \"./routes\\\\admin.tsx\";\nimport * as route7 from \"./routes\\\\admin\\\\knowledge-base.tsx\";\nimport * as route8 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\articles.$lang.$id.edit.tsx\";\nimport * as route9 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\articles.$lang.$id.tsx\";\nimport * as route10 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\articles.$lang.$id\\\\settings.tsx\";\nimport * as route11 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\categories.$lang.tsx\";\nimport * as route12 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\categories.$lang\\\\$id.sections.$section.tsx\";\nimport * as route13 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\categories.$lang\\\\$id.sections.new.tsx\";\nimport * as route14 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\categories.$lang\\\\$id.tsx\";\nimport * as route15 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\categories.$lang\\\\new.tsx\";\nimport * as route16 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\articles.$lang.tsx\";\nimport * as route17 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\categories.tsx\";\nimport * as route18 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.$slug\\\\articles.tsx\";\nimport * as route19 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.import.tsx\";\nimport * as route20 from \"./routes\\\\admin\\\\knowledge-base\\\\danger.tsx\";\nimport * as route21 from \"./routes\\\\admin\\\\knowledge-base\\\\bases.tsx\";\nimport * as route22 from \"./routes\\\\admin\\\\knowledge-base\\\\bases\\\\$id.tsx\";\nimport * as route23 from \"./routes\\\\admin\\\\knowledge-base\\\\bases\\\\new.tsx\";\nimport * as route24 from \"./routes\\\\admin\\\\knowledge-base\\\\index.tsx\";\nimport * as route25 from \"./routes\\\\admin\\\\index.tsx\";\nimport * as route26 from \"./routes\\\\index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":true,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":true,\"v2_meta\":true,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/$slug.($lang).categories.$category\": {\n      id: \"routes/$slug.($lang).categories.$category\",\n      parentId: \"root\",\n      path: \":slug/:lang?/categories/:category\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/$slug.($lang).articles.$article\": {\n      id: \"routes/$slug.($lang).articles.$article\",\n      parentId: \"root\",\n      path: \":slug/:lang?/articles/:article\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/api.ai/generate\": {\n      id: \"routes/api.ai/generate\",\n      parentId: \"root\",\n      path: \"api/ai/generate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/$slug.($lang)\": {\n      id: \"routes/$slug.($lang)\",\n      parentId: \"root\",\n      path: \":slug/:lang?\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/api.ai/upload\": {\n      id: \"routes/api.ai/upload\",\n      parentId: \"root\",\n      path: \"api/ai/upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/admin/knowledge-base\": {\n      id: \"routes/admin/knowledge-base\",\n      parentId: \"routes/admin\",\n      path: \"knowledge-base\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.edit\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id.edit\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/:slug/articles/:lang/:id/edit\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/:slug/articles/:lang/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id/settings\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id/settings\",\n      parentId: \"routes/admin/knowledge-base/bases.$slug/articles.$lang.$id\",\n      path: \"settings\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/admin/knowledge-base/bases.$slug/categories.$lang\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/categories.$lang\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/:slug/categories/:lang\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.$section\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.$section\",\n      parentId: \"routes/admin/knowledge-base/bases.$slug/categories.$lang\",\n      path: \":id/sections/:section\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.new\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/categories.$lang/$id.sections.new\",\n      parentId: \"routes/admin/knowledge-base/bases.$slug/categories.$lang\",\n      path: \":id/sections/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/admin/knowledge-base/bases.$slug/categories.$lang/$id\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/categories.$lang/$id\",\n      parentId: \"routes/admin/knowledge-base/bases.$slug/categories.$lang\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/admin/knowledge-base/bases.$slug/categories.$lang/new\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/categories.$lang/new\",\n      parentId: \"routes/admin/knowledge-base/bases.$slug/categories.$lang\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/admin/knowledge-base/bases.$slug/articles.$lang\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/articles.$lang\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/:slug/articles/:lang\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/admin/knowledge-base/bases.$slug/categories\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/categories\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/:slug/categories\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/admin/knowledge-base/bases.$slug/articles\": {\n      id: \"routes/admin/knowledge-base/bases.$slug/articles\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/:slug/articles\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/admin/knowledge-base/bases.import\": {\n      id: \"routes/admin/knowledge-base/bases.import\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases/import\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/admin/knowledge-base/danger\": {\n      id: \"routes/admin/knowledge-base/danger\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"danger\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/admin/knowledge-base/bases\": {\n      id: \"routes/admin/knowledge-base/bases\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: \"bases\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    },\n  \"routes/admin/knowledge-base/bases/$id\": {\n      id: \"routes/admin/knowledge-base/bases/$id\",\n      parentId: \"routes/admin/knowledge-base/bases\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route22\n    },\n  \"routes/admin/knowledge-base/bases/new\": {\n      id: \"routes/admin/knowledge-base/bases/new\",\n      parentId: \"routes/admin/knowledge-base/bases\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route23\n    },\n  \"routes/admin/knowledge-base/index\": {\n      id: \"routes/admin/knowledge-base/index\",\n      parentId: \"routes/admin/knowledge-base\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route24\n    },\n  \"routes/admin/index\": {\n      id: \"routes/admin/index\",\n      parentId: \"routes/admin\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route25\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route26\n    }\n  };"],
  "mappings": "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AAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEA,SAAS,kBAAkB,WAA2B;AACpD,UAAQ,WAAW;AAAA,IACjB;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,EACX;AACF;AAEA,IAAO,0BAAQ;AAAA,EACb;AAAA,EACA;AAAA,EACA;AACF;;;ACvJA,SAAS,WAAW,WAA2B;AAC7C,UAAQ,WAAW;AAAA,IACjB;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO;AAAA,IACT;AACE,aAAO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",
  "names": ["isbot", "import_react", "import_react", "import_node", "import_node", "import_jsx_dev_runtime", "loader", "meta", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_node", "include", "include", "slug", "slug", "import_remix_typedjson", "import_react", "import_jsx_dev_runtime", "import_react", "import_clsx", "getText400", "getText600", "import_jsx_dev_runtime", "redirect", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_react", "import_clsx", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_jsx_dev_runtime", "RightIcon", "import_clsx", "import_jsx_dev_runtime", "clsx", "RightIcon", "import_jsx_dev_runtime", "item", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "meta", "ErrorBoundary", "Index", "loader", "meta", "import_node", "import_remix_typedjson", "import_react", "lexer", "options", "links", "text", "mangle", "smartypants", "parser", "src", "args", "ret", "walkTokens", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "moment", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "action", "meta", "Index", "ErrorBoundary", "action", "parser", "action", "ErrorBoundary", "Index", "loader", "meta", "import_node", "import_remix_typedjson", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "item", "import_react", "import_jsx_dev_runtime", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "meta", "Index", "ErrorBoundary", "action", "import_node", "action", "import_react", "import_react", "import_react", "import_react", "import_clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "menu", "f", "index", "clsx", "import_react", "import_react", "import_jsx_dev_runtime", "positions", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "ErrorBoundary", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "ServerError", "import_react", "import_clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "ServerError", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_jsx_dev_runtime", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_jsx_dev_runtime", "XIcon", "import_clsx", "import_jsx_dev_runtime", "clsx", "XIcon", "import_clsx", "import_react", "import_clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_jsx_dev_runtime", "value", "clsx", "Editor", "import_react", "import_react", "import_react", "onError", "useSWR", "useSWRMutation", "options", "abortController", "completion", "import_jsx_dev_runtime", "import_react_hot_toast", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "Suggestion", "ImageIcon", "tippy", "import_core", "StarterKit", "HorizontalRule", "TiptapLink", "TiptapImage", "Placeholder", "TiptapUnderline", "TextStyle", "import_react_hot_toast", "import_react", "import_clsx", "import_lucide_react", "import_clsx", "import_lucide_react", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_lucide_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "editor", "json", "completion", "import_react", "import_jsx_dev_runtime", "clsx", "import_node", "action", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_clsx", "clsx", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_jsx_dev_runtime", "options", "selected", "clsx", "import_jsx_dev_runtime", "slug", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_react", "import_clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "to", "clsx", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_react", "import_clsx", "import_jsx_dev_runtime", "options", "clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "clsx", "action", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_react", "import_clsx", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "items", "clsx", "import_jsx_dev_runtime", "loader", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "loader", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "loader", "ErrorBoundary", "action", "loader", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "ErrorBoundary", "ServerError", "action", "meta", "import_node", "import_react", "import_jsx_dev_runtime", "meta", "action", "action", "loader", "meta", "import_node", "import_remix_typedjson", "import_react", "import_react", "import_clsx", "import_jsx_dev_runtime", "clsx", "tab", "import_clsx", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "meta", "action", "id_exports", "action", "id_default", "loader", "import_node", "import_react", "import_remix_typedjson", "import_react", "import_react", "import_clsx", "import_jsx_dev_runtime", "options", "clsx", "selected", "import_clsx", "import_jsx_dev_runtime", "idx", "clsx", "import_jsx_dev_runtime", "idx", "import_clsx", "import_jsx_dev_runtime", "links", "item", "color", "clsx", "import_jsx_dev_runtime", "loader", "action", "links", "id_default", "new_exports", "action", "new_default", "import_node", "import_react", "import_remix_typedjson", "import_jsx_dev_runtime", "action", "links", "new_default", "knowledge_base_exports", "knowledge_base_default", "loader", "meta", "import_node", "import_react", "numeral", "import_jsx_dev_runtime", "loader", "meta", "knowledge_base_default", "admin_exports", "admin_default", "import_jsx_dev_runtime", "admin_default", "ErrorBoundary", "Index", "loader", "import_node", "import_react", "import_remix_typedjson", "import_react", "import_clsx", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "Index", "ErrorBoundary", "id_exports", "new_exports", "knowledge_base_exports", "admin_exports"]
}
